{
  "version": "1.121.0",
  "results": [
    {
      "check_id": "javascript.browser.security.eval-detected.eval-detected",
      "path": "/src/NodeGoat/app/routes/contributions.js",
      "start": { "line": 32, "col": 24, "offset": 965 },
      "end": { "line": 32, "col": 45, "offset": 986 },
      "extra": {
        "message": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",
        "metadata": {
          "cwe": [
            "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"
          ],
          "owasp": ["A03:2021 - Injection"],
          "asvs": {
            "control_id": "5.2.4 Dynamic Code Execution Features",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing",
            "section": "V5 Validation, Sanitization and Encoding",
            "version": "4"
          },
          "category": "security",
          "technology": ["browser"],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "LOW",
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Code Injection"],
          "source": "https://semgrep.dev/r/javascript.browser.security.eval-detected.eval-detected",
          "shortlink": "https://sg.run/7ope"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.lang.security.audit.code-string-concat.code-string-concat",
      "path": "/src/NodeGoat/app/routes/contributions.js",
      "start": { "line": 32, "col": 24, "offset": 965 },
      "end": { "line": 32, "col": 45, "offset": 986 },
      "extra": {
        "message": "Found data from an Express or Next web request flowing to `eval`. If this data is user-controllable this can lead to execution of arbitrary system commands in the context of your application process. Avoid `eval` whenever possible.",
        "metadata": {
          "interfile": true,
          "confidence": "HIGH",
          "owasp": ["A03:2021 - Injection"],
          "cwe": [
            "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"
          ],
          "references": [
            "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval",
            "https://nodejs.org/api/child_process.html#child_processexeccommand-options-callback",
            "https://www.stackhawk.com/blog/nodejs-command-injection-examples-and-prevention/",
            "https://ckarande.gitbooks.io/owasp-nodegoat-tutorial/content/tutorial/a1_-_server_side_js_injection.html"
          ],
          "category": "security",
          "technology": ["node.js", "Express", "Next.js"],
          "subcategory": ["vuln"],
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Code Injection"],
          "source": "https://semgrep.dev/r/javascript.lang.security.audit.code-string-concat.code-string-concat",
          "shortlink": "https://sg.run/96Yk"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.browser.security.eval-detected.eval-detected",
      "path": "/src/NodeGoat/app/routes/contributions.js",
      "start": { "line": 33, "col": 26, "offset": 1014 },
      "end": { "line": 33, "col": 49, "offset": 1037 },
      "extra": {
        "message": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",
        "metadata": {
          "cwe": [
            "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"
          ],
          "owasp": ["A03:2021 - Injection"],
          "asvs": {
            "control_id": "5.2.4 Dynamic Code Execution Features",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing",
            "section": "V5 Validation, Sanitization and Encoding",
            "version": "4"
          },
          "category": "security",
          "technology": ["browser"],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "LOW",
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Code Injection"],
          "source": "https://semgrep.dev/r/javascript.browser.security.eval-detected.eval-detected",
          "shortlink": "https://sg.run/7ope"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.lang.security.audit.code-string-concat.code-string-concat",
      "path": "/src/NodeGoat/app/routes/contributions.js",
      "start": { "line": 33, "col": 26, "offset": 1014 },
      "end": { "line": 33, "col": 49, "offset": 1037 },
      "extra": {
        "message": "Found data from an Express or Next web request flowing to `eval`. If this data is user-controllable this can lead to execution of arbitrary system commands in the context of your application process. Avoid `eval` whenever possible.",
        "metadata": {
          "interfile": true,
          "confidence": "HIGH",
          "owasp": ["A03:2021 - Injection"],
          "cwe": [
            "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"
          ],
          "references": [
            "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval",
            "https://nodejs.org/api/child_process.html#child_processexeccommand-options-callback",
            "https://www.stackhawk.com/blog/nodejs-command-injection-examples-and-prevention/",
            "https://ckarande.gitbooks.io/owasp-nodegoat-tutorial/content/tutorial/a1_-_server_side_js_injection.html"
          ],
          "category": "security",
          "technology": ["node.js", "Express", "Next.js"],
          "subcategory": ["vuln"],
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Code Injection"],
          "source": "https://semgrep.dev/r/javascript.lang.security.audit.code-string-concat.code-string-concat",
          "shortlink": "https://sg.run/96Yk"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.browser.security.eval-detected.eval-detected",
      "path": "/src/NodeGoat/app/routes/contributions.js",
      "start": { "line": 34, "col": 22, "offset": 1061 },
      "end": { "line": 34, "col": 41, "offset": 1080 },
      "extra": {
        "message": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",
        "metadata": {
          "cwe": [
            "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"
          ],
          "owasp": ["A03:2021 - Injection"],
          "asvs": {
            "control_id": "5.2.4 Dynamic Code Execution Features",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v52-sanitization-and-sandboxing",
            "section": "V5 Validation, Sanitization and Encoding",
            "version": "4"
          },
          "category": "security",
          "technology": ["browser"],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "LOW",
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Code Injection"],
          "source": "https://semgrep.dev/r/javascript.browser.security.eval-detected.eval-detected",
          "shortlink": "https://sg.run/7ope"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.lang.security.audit.code-string-concat.code-string-concat",
      "path": "/src/NodeGoat/app/routes/contributions.js",
      "start": { "line": 34, "col": 22, "offset": 1061 },
      "end": { "line": 34, "col": 41, "offset": 1080 },
      "extra": {
        "message": "Found data from an Express or Next web request flowing to `eval`. If this data is user-controllable this can lead to execution of arbitrary system commands in the context of your application process. Avoid `eval` whenever possible.",
        "metadata": {
          "interfile": true,
          "confidence": "HIGH",
          "owasp": ["A03:2021 - Injection"],
          "cwe": [
            "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')"
          ],
          "references": [
            "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval",
            "https://nodejs.org/api/child_process.html#child_processexeccommand-options-callback",
            "https://www.stackhawk.com/blog/nodejs-command-injection-examples-and-prevention/",
            "https://ckarande.gitbooks.io/owasp-nodegoat-tutorial/content/tutorial/a1_-_server_side_js_injection.html"
          ],
          "category": "security",
          "technology": ["node.js", "Express", "Next.js"],
          "subcategory": ["vuln"],
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Code Injection"],
          "source": "https://semgrep.dev/r/javascript.lang.security.audit.code-string-concat.code-string-concat",
          "shortlink": "https://sg.run/96Yk"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.express.security.audit.express-open-redirect.express-open-redirect",
      "path": "/src/NodeGoat/app/routes/index.js",
      "start": { "line": 72, "col": 29, "offset": 2942 },
      "end": { "line": 72, "col": 42, "offset": 2955 },
      "extra": {
        "message": "The application redirects to a URL specified by user-supplied input `req` that is not validated. This could redirect users to malicious locations. Consider using an allow-list approach to validate URLs, or warn users they are being redirected to a third-party website.",
        "metadata": {
          "technology": ["express"],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html"
          ],
          "cwe": [
            "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
          ],
          "category": "security",
          "owasp": ["A01:2021 - Broken Access Control"],
          "subcategory": ["vuln"],
          "likelihood": "HIGH",
          "impact": "MEDIUM",
          "confidence": "HIGH",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Open Redirect"],
          "source": "https://semgrep.dev/r/javascript.express.security.audit.express-open-redirect.express-open-redirect",
          "shortlink": "https://sg.run/EpoP"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/NodeGoat/app/views/benefits.html",
      "start": { "line": 54, "col": 29, "offset": 1826 },
      "end": { "line": 63, "col": 36, "offset": 2527 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/NodeGoat/app/views/login.html",
      "start": { "line": 107, "col": 29, "offset": 4557 },
      "end": { "line": 127, "col": 36, "offset": 5927 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/NodeGoat/app/views/memos.html",
      "start": { "line": 15, "col": 17, "offset": 400 },
      "end": { "line": 23, "col": 24, "offset": 815 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "html.security.plaintext-http-link.plaintext-http-link",
      "path": "/src/NodeGoat/app/views/tutorial/a2.html",
      "start": { "line": 207, "col": 33, "offset": 11433 },
      "end": { "line": 207, "col": 198, "offset": 11598 },
      "extra": {
        "message": "This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.",
        "metadata": {
          "category": "security",
          "technology": ["html"],
          "cwe": ["CWE-319: Cleartext Transmission of Sensitive Information"],
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A02:2021 - Cryptographic Failures"
          ],
          "confidence": "HIGH",
          "subcategory": ["vuln"],
          "references": ["https://cwe.mitre.org/data/definitions/319.html"],
          "likelihood": "LOW",
          "impact": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Mishandled Sensitive Information"],
          "source": "https://semgrep.dev/r/html.security.plaintext-http-link.plaintext-http-link",
          "shortlink": "https://sg.run/RA5q"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "html.security.plaintext-http-link.plaintext-http-link",
      "path": "/src/NodeGoat/app/views/tutorial/a2.html",
      "start": { "line": 209, "col": 33, "offset": 11667 },
      "end": { "line": 209, "col": 97, "offset": 11731 },
      "extra": {
        "message": "This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.",
        "metadata": {
          "category": "security",
          "technology": ["html"],
          "cwe": ["CWE-319: Cleartext Transmission of Sensitive Information"],
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A02:2021 - Cryptographic Failures"
          ],
          "confidence": "HIGH",
          "subcategory": ["vuln"],
          "references": ["https://cwe.mitre.org/data/definitions/319.html"],
          "likelihood": "LOW",
          "impact": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Mishandled Sensitive Information"],
          "source": "https://semgrep.dev/r/html.security.plaintext-http-link.plaintext-http-link",
          "shortlink": "https://sg.run/RA5q"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "html.security.plaintext-http-link.plaintext-http-link",
      "path": "/src/NodeGoat/app/views/tutorial/a2.html",
      "start": { "line": 210, "col": 33, "offset": 11796 },
      "end": { "line": 210, "col": 118, "offset": 11881 },
      "extra": {
        "message": "This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.",
        "metadata": {
          "category": "security",
          "technology": ["html"],
          "cwe": ["CWE-319: Cleartext Transmission of Sensitive Information"],
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A02:2021 - Cryptographic Failures"
          ],
          "confidence": "HIGH",
          "subcategory": ["vuln"],
          "references": ["https://cwe.mitre.org/data/definitions/319.html"],
          "likelihood": "LOW",
          "impact": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Mishandled Sensitive Information"],
          "source": "https://semgrep.dev/r/html.security.plaintext-http-link.plaintext-http-link",
          "shortlink": "https://sg.run/RA5q"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "html.security.plaintext-http-link.plaintext-http-link",
      "path": "/src/NodeGoat/app/views/tutorial/a5.html",
      "start": { "line": 50, "col": 226, "offset": 3133 },
      "end": { "line": 50, "col": 282, "offset": 3189 },
      "extra": {
        "message": "This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.",
        "metadata": {
          "category": "security",
          "technology": ["html"],
          "cwe": ["CWE-319: Cleartext Transmission of Sensitive Information"],
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A02:2021 - Cryptographic Failures"
          ],
          "confidence": "HIGH",
          "subcategory": ["vuln"],
          "references": ["https://cwe.mitre.org/data/definitions/319.html"],
          "likelihood": "LOW",
          "impact": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Mishandled Sensitive Information"],
          "source": "https://semgrep.dev/r/html.security.plaintext-http-link.plaintext-http-link",
          "shortlink": "https://sg.run/RA5q"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "html.security.plaintext-http-link.plaintext-http-link",
      "path": "/src/NodeGoat/app/views/tutorial/a5.html",
      "start": { "line": 51, "col": 25, "offset": 3219 },
      "end": { "line": 51, "col": 95, "offset": 3289 },
      "extra": {
        "message": "This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.",
        "metadata": {
          "category": "security",
          "technology": ["html"],
          "cwe": ["CWE-319: Cleartext Transmission of Sensitive Information"],
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A02:2021 - Cryptographic Failures"
          ],
          "confidence": "HIGH",
          "subcategory": ["vuln"],
          "references": ["https://cwe.mitre.org/data/definitions/319.html"],
          "likelihood": "LOW",
          "impact": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Mishandled Sensitive Information"],
          "source": "https://semgrep.dev/r/html.security.plaintext-http-link.plaintext-http-link",
          "shortlink": "https://sg.run/RA5q"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "generic.secrets.security.detected-private-key.detected-private-key",
      "path": "/src/NodeGoat/artifacts/cert/server.key",
      "start": { "line": 1, "col": 1, "offset": 0 },
      "end": { "line": 2, "col": 65, "offset": 97 },
      "extra": {
        "message": "Private Key detected. This is a sensitive credential and should not be hardcoded here. Instead, store this in a separate, private file.",
        "metadata": {
          "cwe": ["CWE-798: Use of Hard-coded Credentials"],
          "source-rule-url": "https://github.com/grab/secret-scanner/blob/master/scanner/signatures/pattern.go",
          "category": "security",
          "technology": ["secrets"],
          "confidence": "LOW",
          "owasp": ["A07:2021 - Identification and Authentication Failures"],
          "references": [
            "https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures"
          ],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Hard-coded Secrets"],
          "source": "https://semgrep.dev/r/generic.secrets.security.detected-private-key.detected-private-key",
          "shortlink": "https://sg.run/b7dr"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "generic.secrets.security.detected-bcrypt-hash.detected-bcrypt-hash",
      "path": "/src/NodeGoat/artifacts/db-reset.js",
      "start": { "line": 19, "col": 25, "offset": 522 },
      "end": { "line": 19, "col": 85, "offset": 582 },
      "extra": {
        "message": "bcrypt hash detected",
        "metadata": {
          "cwe": ["CWE-798: Use of Hard-coded Credentials"],
          "category": "security",
          "technology": ["secrets", "bcrypt"],
          "confidence": "LOW",
          "owasp": ["A07:2021 - Identification and Authentication Failures"],
          "references": [
            "https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures"
          ],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "HIGH",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Hard-coded Secrets"],
          "source": "https://semgrep.dev/r/generic.secrets.security.detected-bcrypt-hash.detected-bcrypt-hash",
          "shortlink": "https://sg.run/3A8G"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "generic.secrets.security.detected-bcrypt-hash.detected-bcrypt-hash",
      "path": "/src/NodeGoat/artifacts/db-reset.js",
      "start": { "line": 28, "col": 26, "offset": 842 },
      "end": { "line": 28, "col": 86, "offset": 902 },
      "extra": {
        "message": "bcrypt hash detected",
        "metadata": {
          "cwe": ["CWE-798: Use of Hard-coded Credentials"],
          "category": "security",
          "technology": ["secrets", "bcrypt"],
          "confidence": "LOW",
          "owasp": ["A07:2021 - Identification and Authentication Failures"],
          "references": [
            "https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures"
          ],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "HIGH",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Hard-coded Secrets"],
          "source": "https://semgrep.dev/r/generic.secrets.security.detected-bcrypt-hash.detected-bcrypt-hash",
          "shortlink": "https://sg.run/3A8G"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "generic.secrets.security.detected-bcrypt-hash.detected-bcrypt-hash",
      "path": "/src/NodeGoat/artifacts/db-reset.js",
      "start": { "line": 36, "col": 25, "offset": 1137 },
      "end": { "line": 36, "col": 85, "offset": 1197 },
      "extra": {
        "message": "bcrypt hash detected",
        "metadata": {
          "cwe": ["CWE-798: Use of Hard-coded Credentials"],
          "category": "security",
          "technology": ["secrets", "bcrypt"],
          "confidence": "LOW",
          "owasp": ["A07:2021 - Identification and Authentication Failures"],
          "references": [
            "https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures"
          ],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "HIGH",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Hard-coded Secrets"],
          "source": "https://semgrep.dev/r/generic.secrets.security.detected-bcrypt-hash.detected-bcrypt-hash",
          "shortlink": "https://sg.run/3A8G"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "yaml.docker-compose.security.no-new-privileges.no-new-privileges",
      "path": "/src/NodeGoat/docker-compose.yml",
      "start": { "line": 13, "col": 3, "offset": 327 },
      "end": { "line": 13, "col": 8, "offset": 332 },
      "extra": {
        "message": "Service 'mongo' allows for privilege escalation via setuid or setgid binaries. Add 'no-new-privileges:true' in 'security_opt' to prevent this.",
        "metadata": {
          "cwe": [
            "CWE-732: Incorrect Permission Assignment for Critical Resource"
          ],
          "owasp": [
            "A05:2021 - Security Misconfiguration",
            "A06:2017 - Security Misconfiguration"
          ],
          "references": [
            "https://raesene.github.io/blog/2019/06/01/docker-capabilities-and-no-new-privs/",
            "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt",
            "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"
          ],
          "category": "security",
          "technology": ["docker-compose"],
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "HIGH",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Improper Authorization"],
          "source": "https://semgrep.dev/r/yaml.docker-compose.security.no-new-privileges.no-new-privileges",
          "shortlink": "https://sg.run/0n8q"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service",
      "path": "/src/NodeGoat/docker-compose.yml",
      "start": { "line": 13, "col": 3, "offset": 327 },
      "end": { "line": 13, "col": 8, "offset": 332 },
      "extra": {
        "message": "Service 'mongo' is running with a writable root filesystem. This may allow malicious applications to download and run additional payloads, or modify container files. If an application inside a container has to save something temporarily consider using a tmpfs. Add 'read_only: true' to this service to prevent this.",
        "metadata": {
          "cwe": [
            "CWE-732: Incorrect Permission Assignment for Critical Resource"
          ],
          "owasp": [
            "A05:2021 - Security Misconfiguration",
            "A06:2017 - Security Misconfiguration"
          ],
          "references": [
            "https://docs.docker.com/compose/compose-file/compose-file-v3/#domainname-hostname-ipc-mac_address-privileged-read_only-shm_size-stdin_open-tty-user-working_dir",
            "https://blog.atomist.com/security-of-docker-kubernetes/",
            "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-8-set-filesystem-and-volumes-to-read-only"
          ],
          "category": "security",
          "technology": ["docker-compose"],
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "HIGH",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Improper Authorization"],
          "source": "https://semgrep.dev/r/yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service",
          "shortlink": "https://sg.run/e4JE"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.express.security.audit.express-check-csurf-middleware-usage.express-check-csurf-middleware-usage",
      "path": "/src/NodeGoat/server.js",
      "start": { "line": 15, "col": 7, "offset": 589 },
      "end": { "line": 15, "col": 22, "offset": 604 },
      "extra": {
        "message": "A CSRF middleware was not detected in your express application. Ensure you are either using one such as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your routes with a token or cookies.",
        "metadata": {
          "category": "security",
          "references": [
            "https://www.npmjs.com/package/csurf",
            "https://www.npmjs.com/package/csrf",
            "https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html"
          ],
          "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"],
          "owasp": ["A01:2021 - Broken Access Control"],
          "technology": ["javascript", "typescript", "express"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "HIGH",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/javascript.express.security.audit.express-check-csurf-middleware-usage.express-check-csurf-middleware-usage",
          "shortlink": "https://sg.run/BxzR"
        },
        "severity": "INFO",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.express.security.audit.express-cookie-settings.express-cookie-session-default-name",
      "path": "/src/NodeGoat/server.js",
      "start": { "line": 78, "col": 13, "offset": 2914 },
      "end": { "line": 102, "col": 7, "offset": 3540 },
      "extra": {
        "message": "Don’t use the default session cookie name Using the default session cookie name can open your app to attacks. The security issue posed is similar to X-Powered-By: a potential attacker can use it to fingerprint the server and target attacks accordingly.",
        "metadata": {
          "cwe": ["CWE-522: Insufficiently Protected Credentials"],
          "owasp": [
            "A02:2017 - Broken Authentication",
            "A04:2021 - Insecure Design"
          ],
          "source-rule-url": "https://expressjs.com/en/advanced/best-practice-security.html",
          "category": "security",
          "technology": ["express"],
          "cwe2021-top25": true,
          "subcategory": ["vuln"],
          "likelihood": "HIGH",
          "impact": "LOW",
          "confidence": "MEDIUM",
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cryptographic Issues"],
          "source": "https://semgrep.dev/r/javascript.express.security.audit.express-cookie-settings.express-cookie-session-default-name",
          "shortlink": "https://sg.run/1Z5x"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.express.security.audit.express-cookie-settings.express-cookie-session-no-domain",
      "path": "/src/NodeGoat/server.js",
      "start": { "line": 78, "col": 13, "offset": 2914 },
      "end": { "line": 102, "col": 7, "offset": 3540 },
      "extra": {
        "message": "Default session middleware settings: `domain` not set. It indicates the domain of the cookie; use it to compare against the domain of the server in which the URL is being requested. If they match, then check the path attribute next.",
        "metadata": {
          "cwe": ["CWE-522: Insufficiently Protected Credentials"],
          "owasp": [
            "A02:2017 - Broken Authentication",
            "A04:2021 - Insecure Design"
          ],
          "source-rule-url": "https://expressjs.com/en/advanced/best-practice-security.html",
          "category": "security",
          "technology": ["express"],
          "cwe2021-top25": true,
          "subcategory": ["vuln"],
          "likelihood": "HIGH",
          "impact": "LOW",
          "confidence": "MEDIUM",
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cryptographic Issues"],
          "source": "https://semgrep.dev/r/javascript.express.security.audit.express-cookie-settings.express-cookie-session-no-domain",
          "shortlink": "https://sg.run/rd41"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.express.security.audit.express-cookie-settings.express-cookie-session-no-expires",
      "path": "/src/NodeGoat/server.js",
      "start": { "line": 78, "col": 13, "offset": 2914 },
      "end": { "line": 102, "col": 7, "offset": 3540 },
      "extra": {
        "message": "Default session middleware settings: `expires` not set. Use it to set expiration date for persistent cookies.",
        "metadata": {
          "cwe": ["CWE-522: Insufficiently Protected Credentials"],
          "owasp": [
            "A02:2017 - Broken Authentication",
            "A04:2021 - Insecure Design"
          ],
          "source-rule-url": "https://expressjs.com/en/advanced/best-practice-security.html",
          "category": "security",
          "technology": ["express"],
          "cwe2021-top25": true,
          "subcategory": ["vuln"],
          "likelihood": "HIGH",
          "impact": "LOW",
          "confidence": "MEDIUM",
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cryptographic Issues"],
          "source": "https://semgrep.dev/r/javascript.express.security.audit.express-cookie-settings.express-cookie-session-no-expires",
          "shortlink": "https://sg.run/N4eG"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.express.security.audit.express-cookie-settings.express-cookie-session-no-httponly",
      "path": "/src/NodeGoat/server.js",
      "start": { "line": 78, "col": 13, "offset": 2914 },
      "end": { "line": 102, "col": 7, "offset": 3540 },
      "extra": {
        "message": "Default session middleware settings: `httpOnly` not set. It ensures the cookie is sent only over HTTP(S), not client JavaScript, helping to protect against cross-site scripting attacks.",
        "metadata": {
          "cwe": ["CWE-522: Insufficiently Protected Credentials"],
          "owasp": [
            "A02:2017 - Broken Authentication",
            "A04:2021 - Insecure Design"
          ],
          "source-rule-url": "https://expressjs.com/en/advanced/best-practice-security.html",
          "category": "security",
          "technology": ["express"],
          "cwe2021-top25": true,
          "subcategory": ["vuln"],
          "likelihood": "HIGH",
          "impact": "LOW",
          "confidence": "MEDIUM",
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cryptographic Issues"],
          "source": "https://semgrep.dev/r/javascript.express.security.audit.express-cookie-settings.express-cookie-session-no-httponly",
          "shortlink": "https://sg.run/ydBO"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.express.security.audit.express-cookie-settings.express-cookie-session-no-path",
      "path": "/src/NodeGoat/server.js",
      "start": { "line": 78, "col": 13, "offset": 2914 },
      "end": { "line": 102, "col": 7, "offset": 3540 },
      "extra": {
        "message": "Default session middleware settings: `path` not set. It indicates the path of the cookie; use it to compare against the request path. If this and domain match, then send the cookie in the request.",
        "metadata": {
          "cwe": ["CWE-522: Insufficiently Protected Credentials"],
          "owasp": [
            "A02:2017 - Broken Authentication",
            "A04:2021 - Insecure Design"
          ],
          "source-rule-url": "https://expressjs.com/en/advanced/best-practice-security.html",
          "category": "security",
          "technology": ["express"],
          "cwe2021-top25": true,
          "subcategory": ["vuln"],
          "likelihood": "HIGH",
          "impact": "LOW",
          "confidence": "MEDIUM",
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cryptographic Issues"],
          "source": "https://semgrep.dev/r/javascript.express.security.audit.express-cookie-settings.express-cookie-session-no-path",
          "shortlink": "https://sg.run/b7pd"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.express.security.audit.express-cookie-settings.express-cookie-session-no-secure",
      "path": "/src/NodeGoat/server.js",
      "start": { "line": 78, "col": 13, "offset": 2914 },
      "end": { "line": 102, "col": 7, "offset": 3540 },
      "extra": {
        "message": "Default session middleware settings: `secure` not set. It ensures the browser only sends the cookie over HTTPS.",
        "metadata": {
          "cwe": ["CWE-522: Insufficiently Protected Credentials"],
          "owasp": [
            "A02:2017 - Broken Authentication",
            "A04:2021 - Insecure Design"
          ],
          "source-rule-url": "https://expressjs.com/en/advanced/best-practice-security.html",
          "category": "security",
          "technology": ["express"],
          "cwe2021-top25": true,
          "subcategory": ["vuln"],
          "likelihood": "HIGH",
          "impact": "LOW",
          "confidence": "MEDIUM",
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cryptographic Issues"],
          "source": "https://semgrep.dev/r/javascript.express.security.audit.express-cookie-settings.express-cookie-session-no-secure",
          "shortlink": "https://sg.run/9oKz"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "problem-based-packs.insecure-transport.js-node.using-http-server.using-http-server",
      "path": "/src/NodeGoat/server.js",
      "start": { "line": 145, "col": 5, "offset": 4646 },
      "end": { "line": 145, "col": 9, "offset": 4650 },
      "extra": {
        "message": "Checks for any usage of http servers instead of https servers. Encourages the usage of https protocol instead of http, which does not have TLS and is therefore unencrypted. Using http can lead to man-in-the-middle attacks in which the attacker is able to read sensitive information.",
        "metadata": {
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "LOW",
          "category": "security",
          "cwe": "CWE-319: Cleartext Transmission of Sensitive Information",
          "owasp": [
            "A02:2021 - Cryptographic Failures",
            "A03:2017 - Sensitive Data Exposure"
          ],
          "references": [
            "https://nodejs.org/api/http.html#http_class_http_agent",
            "https://groups.google.com/g/rubyonrails-security/c/NCCsca7TEtY"
          ],
          "subcategory": ["audit"],
          "technology": ["node.js"],
          "vulnerability": "Insecure Transport",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Mishandled Sensitive Information"],
          "source": "https://semgrep.dev/r/problem-based-packs.insecure-transport.js-node.using-http-server.using-http-server",
          "shortlink": "https://sg.run/x1zL"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "generic.secrets.security.detected-sonarqube-docs-api-key.detected-sonarqube-docs-api-key",
      "path": "/src/NodeGoat/sonar-scanner.properties",
      "start": { "line": 10, "col": 1, "offset": 245 },
      "end": { "line": 10, "col": 57, "offset": 301 },
      "extra": {
        "message": "SonarQube Docs API Key detected",
        "metadata": {
          "cwe": ["CWE-798: Use of Hard-coded Credentials"],
          "source-rule-url": "https://github.com/grab/secret-scanner/blob/master/scanner/signatures/pattern.go",
          "category": "security",
          "technology": ["secrets", "sonarqube"],
          "confidence": "LOW",
          "owasp": ["A07:2021 - Identification and Authentication Failures"],
          "references": [
            "https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures"
          ],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Hard-coded Secrets"],
          "source": "https://semgrep.dev/r/generic.secrets.security.detected-sonarqube-docs-api-key.detected-sonarqube-docs-api-key",
          "shortlink": "https://sg.run/x10P"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    }
  ],
  "errors": [
    {
      "code": 3,
      "level": "warn",
      "type": [
        "PartialParsing",
        [
          {
            "path": "/src/NodeGoat/app/views/tutorial/a2.html",
            "start": { "line": 1, "col": 1, "offset": 0 },
            "end": { "line": 1, "col": 130, "offset": 129 }
          },
          {
            "path": "/src/NodeGoat/app/views/tutorial/a2.html",
            "start": { "line": 310, "col": 1, "offset": 0 },
            "end": { "line": 310, "col": 15, "offset": 14 }
          }
        ]
      ],
      "message": "Syntax error at line /src/NodeGoat/app/views/tutorial/a2.html:1:\n `{% extends \"./layout.html\" %} {% block title %}A2-Broken Authentication and Session Management {% endblock %} {% block content %}` was unexpected",
      "path": "/src/NodeGoat/app/views/tutorial/a2.html",
      "spans": [
        {
          "file": "/src/NodeGoat/app/views/tutorial/a2.html",
          "start": { "line": 1, "col": 1, "offset": 0 },
          "end": { "line": 1, "col": 130, "offset": 129 }
        },
        {
          "file": "/src/NodeGoat/app/views/tutorial/a2.html",
          "start": { "line": 310, "col": 1, "offset": 0 },
          "end": { "line": 310, "col": 15, "offset": 14 }
        }
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "type": [
        "PartialParsing",
        [
          {
            "path": "/src/NodeGoat/app/views/tutorial/a1.html",
            "start": { "line": 1, "col": 1, "offset": 0 },
            "end": { "line": 1, "col": 97, "offset": 96 }
          },
          {
            "path": "/src/NodeGoat/app/views/tutorial/a1.html",
            "start": { "line": 236, "col": 120, "offset": 0 },
            "end": { "line": 236, "col": 241, "offset": 121 }
          },
          {
            "path": "/src/NodeGoat/app/views/tutorial/a1.html",
            "start": { "line": 260, "col": 110, "offset": 0 },
            "end": { "line": 260, "col": 161, "offset": 51 }
          },
          {
            "path": "/src/NodeGoat/app/views/tutorial/a1.html",
            "start": { "line": 351, "col": 135, "offset": 0 },
            "end": { "line": 351, "col": 143, "offset": 8 }
          },
          {
            "path": "/src/NodeGoat/app/views/tutorial/a1.html",
            "start": { "line": 409, "col": 1, "offset": 0 },
            "end": { "line": 409, "col": 15, "offset": 14 }
          }
        ]
      ],
      "message": "Syntax error at line /src/NodeGoat/app/views/tutorial/a1.html:1:\n `{% extends \"./layout.html\" %} {% block title %}A1 - Injection {% endblock %} {% block content %}` was unexpected",
      "path": "/src/NodeGoat/app/views/tutorial/a1.html",
      "spans": [
        {
          "file": "/src/NodeGoat/app/views/tutorial/a1.html",
          "start": { "line": 1, "col": 1, "offset": 0 },
          "end": { "line": 1, "col": 97, "offset": 96 }
        },
        {
          "file": "/src/NodeGoat/app/views/tutorial/a1.html",
          "start": { "line": 236, "col": 120, "offset": 0 },
          "end": { "line": 236, "col": 241, "offset": 121 }
        },
        {
          "file": "/src/NodeGoat/app/views/tutorial/a1.html",
          "start": { "line": 260, "col": 110, "offset": 0 },
          "end": { "line": 260, "col": 161, "offset": 51 }
        },
        {
          "file": "/src/NodeGoat/app/views/tutorial/a1.html",
          "start": { "line": 351, "col": 135, "offset": 0 },
          "end": { "line": 351, "col": 143, "offset": 8 }
        },
        {
          "file": "/src/NodeGoat/app/views/tutorial/a1.html",
          "start": { "line": 409, "col": 1, "offset": 0 },
          "end": { "line": 409, "col": 15, "offset": 14 }
        }
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "type": [
        "PartialParsing",
        [
          {
            "path": "/src/NodeGoat/app/views/tutorial/redos.html",
            "start": { "line": 1, "col": 1, "offset": 0 },
            "end": { "line": 1, "col": 111, "offset": 110 }
          },
          {
            "path": "/src/NodeGoat/app/views/tutorial/redos.html",
            "start": { "line": 64, "col": 1, "offset": 0 },
            "end": { "line": 64, "col": 21, "offset": 20 }
          }
        ]
      ],
      "message": "Syntax error at line /src/NodeGoat/app/views/tutorial/redos.html:1:\n `{% extends \"./layout.html\" %} {% block title %}ReDoS Regular Expressions DoS{% endblock %} {% block content %}` was unexpected",
      "path": "/src/NodeGoat/app/views/tutorial/redos.html",
      "spans": [
        {
          "file": "/src/NodeGoat/app/views/tutorial/redos.html",
          "start": { "line": 1, "col": 1, "offset": 0 },
          "end": { "line": 1, "col": 111, "offset": 110 }
        },
        {
          "file": "/src/NodeGoat/app/views/tutorial/redos.html",
          "start": { "line": 64, "col": 1, "offset": 0 },
          "end": { "line": 64, "col": 21, "offset": 20 }
        }
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "type": [
        "PartialParsing",
        [
          {
            "path": "/src/NodeGoat/app/views/profile.html",
            "start": { "line": 1, "col": 1, "offset": 0 },
            "end": { "line": 1, "col": 92, "offset": 91 }
          },
          {
            "path": "/src/NodeGoat/app/views/profile.html",
            "start": { "line": 19, "col": 1, "offset": 0 },
            "end": { "line": 19, "col": 21, "offset": 20 }
          },
          {
            "path": "/src/NodeGoat/app/views/profile.html",
            "start": { "line": 29, "col": 1, "offset": 0 },
            "end": { "line": 29, "col": 12, "offset": 11 }
          },
          {
            "path": "/src/NodeGoat/app/views/profile.html",
            "start": { "line": 84, "col": 1, "offset": 0 },
            "end": { "line": 84, "col": 15, "offset": 14 }
          }
        ]
      ],
      "message": "Syntax error at line /src/NodeGoat/app/views/profile.html:1:\n `{% extends \"./layout.html\" %} {% block title %}My Profile{% endblock %} {% block content %}` was unexpected",
      "path": "/src/NodeGoat/app/views/profile.html",
      "spans": [
        {
          "file": "/src/NodeGoat/app/views/profile.html",
          "start": { "line": 1, "col": 1, "offset": 0 },
          "end": { "line": 1, "col": 92, "offset": 91 }
        },
        {
          "file": "/src/NodeGoat/app/views/profile.html",
          "start": { "line": 19, "col": 1, "offset": 0 },
          "end": { "line": 19, "col": 21, "offset": 20 }
        },
        {
          "file": "/src/NodeGoat/app/views/profile.html",
          "start": { "line": 29, "col": 1, "offset": 0 },
          "end": { "line": 29, "col": 12, "offset": 11 }
        },
        {
          "file": "/src/NodeGoat/app/views/profile.html",
          "start": { "line": 84, "col": 1, "offset": 0 },
          "end": { "line": 84, "col": 15, "offset": 14 }
        }
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "type": [
        "PartialParsing",
        [
          {
            "path": "/src/NodeGoat/app/views/tutorial/a7.html",
            "start": { "line": 1, "col": 1, "offset": 0 },
            "end": { "line": 1, "col": 122, "offset": 121 }
          },
          {
            "path": "/src/NodeGoat/app/views/tutorial/a7.html",
            "start": { "line": 71, "col": 22, "offset": 0 },
            "end": { "line": 81, "col": 3, "offset": 256 }
          },
          {
            "path": "/src/NodeGoat/app/views/tutorial/a7.html",
            "start": { "line": 93, "col": 1, "offset": 0 },
            "end": { "line": 93, "col": 15, "offset": 14 }
          }
        ]
      ],
      "message": "Syntax error at line /src/NodeGoat/app/views/tutorial/a7.html:1:\n `{% extends \"./layout.html\" %} {% block title %}A7-Missing Function Level Access Control{% endblock %} {% block content %}` was unexpected",
      "path": "/src/NodeGoat/app/views/tutorial/a7.html",
      "spans": [
        {
          "file": "/src/NodeGoat/app/views/tutorial/a7.html",
          "start": { "line": 1, "col": 1, "offset": 0 },
          "end": { "line": 1, "col": 122, "offset": 121 }
        },
        {
          "file": "/src/NodeGoat/app/views/tutorial/a7.html",
          "start": { "line": 71, "col": 22, "offset": 0 },
          "end": { "line": 81, "col": 3, "offset": 256 }
        },
        {
          "file": "/src/NodeGoat/app/views/tutorial/a7.html",
          "start": { "line": 93, "col": 1, "offset": 0 },
          "end": { "line": 93, "col": 15, "offset": 14 }
        }
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "type": [
        "PartialParsing",
        [
          {
            "path": "/src/NodeGoat/app/views/tutorial/a8.html",
            "start": { "line": 1, "col": 1, "offset": 0 },
            "end": { "line": 1, "col": 119, "offset": 118 }
          },
          {
            "path": "/src/NodeGoat/app/views/tutorial/a8.html",
            "start": { "line": 103, "col": 1, "offset": 0 },
            "end": { "line": 103, "col": 15, "offset": 14 }
          }
        ]
      ],
      "message": "Syntax error at line /src/NodeGoat/app/views/tutorial/a8.html:1:\n `{% extends \"./layout.html\" %} {% block title %}A8-Cross-Site Request Forgery (CSRF) {% endblock %} {% block content %}` was unexpected",
      "path": "/src/NodeGoat/app/views/tutorial/a8.html",
      "spans": [
        {
          "file": "/src/NodeGoat/app/views/tutorial/a8.html",
          "start": { "line": 1, "col": 1, "offset": 0 },
          "end": { "line": 1, "col": 119, "offset": 118 }
        },
        {
          "file": "/src/NodeGoat/app/views/tutorial/a8.html",
          "start": { "line": 103, "col": 1, "offset": 0 },
          "end": { "line": 103, "col": 15, "offset": 14 }
        }
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "type": [
        "PartialParsing",
        [
          {
            "path": "/src/NodeGoat/app/views/dashboard.html",
            "start": { "line": 1, "col": 1, "offset": 0 },
            "end": { "line": 1, "col": 91, "offset": 90 }
          },
          {
            "path": "/src/NodeGoat/app/views/dashboard.html",
            "start": { "line": 118, "col": 1, "offset": 0 },
            "end": { "line": 118, "col": 15, "offset": 14 }
          }
        ]
      ],
      "message": "Syntax error at line /src/NodeGoat/app/views/dashboard.html:1:\n `{% extends \"./layout.html\" %} {% block title %}Dashboard{% endblock %} {% block content %}` was unexpected",
      "path": "/src/NodeGoat/app/views/dashboard.html",
      "spans": [
        {
          "file": "/src/NodeGoat/app/views/dashboard.html",
          "start": { "line": 1, "col": 1, "offset": 0 },
          "end": { "line": 1, "col": 91, "offset": 90 }
        },
        {
          "file": "/src/NodeGoat/app/views/dashboard.html",
          "start": { "line": 118, "col": 1, "offset": 0 },
          "end": { "line": 118, "col": 15, "offset": 14 }
        }
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "type": [
        "PartialParsing",
        [
          {
            "path": "/src/NodeGoat/app/views/tutorial/a5.html",
            "start": { "line": 1, "col": 1, "offset": 0 },
            "end": { "line": 1, "col": 110, "offset": 109 }
          },
          {
            "path": "/src/NodeGoat/app/views/tutorial/a5.html",
            "start": { "line": 132, "col": 1, "offset": 0 },
            "end": { "line": 132, "col": 15, "offset": 14 }
          }
        ]
      ],
      "message": "Syntax error at line /src/NodeGoat/app/views/tutorial/a5.html:1:\n `{% extends \"./layout.html\" %} {% block title %}A5-Security Misconfiguration{% endblock %} {% block content %}` was unexpected",
      "path": "/src/NodeGoat/app/views/tutorial/a5.html",
      "spans": [
        {
          "file": "/src/NodeGoat/app/views/tutorial/a5.html",
          "start": { "line": 1, "col": 1, "offset": 0 },
          "end": { "line": 1, "col": 110, "offset": 109 }
        },
        {
          "file": "/src/NodeGoat/app/views/tutorial/a5.html",
          "start": { "line": 132, "col": 1, "offset": 0 },
          "end": { "line": 132, "col": 15, "offset": 14 }
        }
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "type": [
        "PartialParsing",
        [
          {
            "path": "/src/NodeGoat/app/views/tutorial/a9.html",
            "start": { "line": 1, "col": 1, "offset": 0 },
            "end": { "line": 1, "col": 128, "offset": 127 }
          },
          {
            "path": "/src/NodeGoat/app/views/tutorial/a9.html",
            "start": { "line": 177, "col": 1, "offset": 0 },
            "end": { "line": 177, "col": 15, "offset": 14 }
          }
        ]
      ],
      "message": "Syntax error at line /src/NodeGoat/app/views/tutorial/a9.html:1:\n `{% extends \"./layout.html\" %} {% block title %}A9-Using Components with Known Vulnerabilities{% endblock %} {% block content %}` was unexpected",
      "path": "/src/NodeGoat/app/views/tutorial/a9.html",
      "spans": [
        {
          "file": "/src/NodeGoat/app/views/tutorial/a9.html",
          "start": { "line": 1, "col": 1, "offset": 0 },
          "end": { "line": 1, "col": 128, "offset": 127 }
        },
        {
          "file": "/src/NodeGoat/app/views/tutorial/a9.html",
          "start": { "line": 177, "col": 1, "offset": 0 },
          "end": { "line": 177, "col": 15, "offset": 14 }
        }
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "type": [
        "PartialParsing",
        [
          {
            "path": "/src/NodeGoat/app/views/tutorial/a3.html",
            "start": { "line": 1, "col": 1, "offset": 0 },
            "end": { "line": 1, "col": 111, "offset": 110 }
          },
          {
            "path": "/src/NodeGoat/app/views/tutorial/a3.html",
            "start": { "line": 243, "col": 1, "offset": 0 },
            "end": { "line": 243, "col": 15, "offset": 14 }
          }
        ]
      ],
      "message": "Syntax error at line /src/NodeGoat/app/views/tutorial/a3.html:1:\n `{% extends \"./layout.html\" %} {% block title %}A3-Cross-Site Scripting (XSS){% endblock %} {% block content %}` was unexpected",
      "path": "/src/NodeGoat/app/views/tutorial/a3.html",
      "spans": [
        {
          "file": "/src/NodeGoat/app/views/tutorial/a3.html",
          "start": { "line": 1, "col": 1, "offset": 0 },
          "end": { "line": 1, "col": 111, "offset": 110 }
        },
        {
          "file": "/src/NodeGoat/app/views/tutorial/a3.html",
          "start": { "line": 243, "col": 1, "offset": 0 },
          "end": { "line": 243, "col": 15, "offset": 14 }
        }
      ]
    }
  ],
  "paths": {
    "scanned": [
      "/src/NodeGoat/.dockerignore",
      "/src/NodeGoat/.github/workflows/e2e-test.yml",
      "/src/NodeGoat/.github/workflows/lint.yml",
      "/src/NodeGoat/.gitignore",
      "/src/NodeGoat/.jshintignore",
      "/src/NodeGoat/.jshintrc",
      "/src/NodeGoat/.travis.yml",
      "/src/NodeGoat/CODE_OF_CONDUCT.md",
      "/src/NodeGoat/CONTRIBUTING.md",
      "/src/NodeGoat/Dockerfile",
      "/src/NodeGoat/Gruntfile.js",
      "/src/NodeGoat/LICENSE",
      "/src/NodeGoat/Procfile",
      "/src/NodeGoat/README.md",
      "/src/NodeGoat/app/assets/favicon.ico",
      "/src/NodeGoat/app/assets/images/nodegoat_logo.png",
      "/src/NodeGoat/app/assets/images/owasplogo.png",
      "/src/NodeGoat/app/assets/js/chart/chart-data-morris.js",
      "/src/NodeGoat/app/assets/js/tour/redirects-steps.js",
      "/src/NodeGoat/app/data/allocations-dao.js",
      "/src/NodeGoat/app/data/benefits-dao.js",
      "/src/NodeGoat/app/data/contributions-dao.js",
      "/src/NodeGoat/app/data/memos-dao.js",
      "/src/NodeGoat/app/data/profile-dao.js",
      "/src/NodeGoat/app/data/research-dao.js",
      "/src/NodeGoat/app/data/user-dao.js",
      "/src/NodeGoat/app/routes/allocations.js",
      "/src/NodeGoat/app/routes/benefits.js",
      "/src/NodeGoat/app/routes/contributions.js",
      "/src/NodeGoat/app/routes/error.js",
      "/src/NodeGoat/app/routes/index.js",
      "/src/NodeGoat/app/routes/memos.js",
      "/src/NodeGoat/app/routes/profile.js",
      "/src/NodeGoat/app/routes/research.js",
      "/src/NodeGoat/app/routes/session.js",
      "/src/NodeGoat/app/routes/tutorial.js",
      "/src/NodeGoat/app/views/allocations.html",
      "/src/NodeGoat/app/views/benefits.html",
      "/src/NodeGoat/app/views/contributions.html",
      "/src/NodeGoat/app/views/dashboard.html",
      "/src/NodeGoat/app/views/error-template.html",
      "/src/NodeGoat/app/views/layout.html",
      "/src/NodeGoat/app/views/login.html",
      "/src/NodeGoat/app/views/memos.html",
      "/src/NodeGoat/app/views/profile.html",
      "/src/NodeGoat/app/views/research.html",
      "/src/NodeGoat/app/views/signup.html",
      "/src/NodeGoat/app/views/tutorial/a1.html",
      "/src/NodeGoat/app/views/tutorial/a10.html",
      "/src/NodeGoat/app/views/tutorial/a2.html",
      "/src/NodeGoat/app/views/tutorial/a3.html",
      "/src/NodeGoat/app/views/tutorial/a4.html",
      "/src/NodeGoat/app/views/tutorial/a5.html",
      "/src/NodeGoat/app/views/tutorial/a6.html",
      "/src/NodeGoat/app/views/tutorial/a7.html",
      "/src/NodeGoat/app/views/tutorial/a8.html",
      "/src/NodeGoat/app/views/tutorial/a9.html",
      "/src/NodeGoat/app/views/tutorial/layout.html",
      "/src/NodeGoat/app/views/tutorial/redos.html",
      "/src/NodeGoat/app/views/tutorial/ssrf.html",
      "/src/NodeGoat/app.json",
      "/src/NodeGoat/artifacts/cert/server.crt",
      "/src/NodeGoat/artifacts/cert/server.key",
      "/src/NodeGoat/artifacts/db-reset.js",
      "/src/NodeGoat/config/config.js",
      "/src/NodeGoat/config/env/all.js",
      "/src/NodeGoat/config/env/development.js",
      "/src/NodeGoat/config/env/production.js",
      "/src/NodeGoat/config/env/test.js",
      "/src/NodeGoat/cypress.json",
      "/src/NodeGoat/docker-compose.yml",
      "/src/NodeGoat/nodemon.json",
      "/src/NodeGoat/package-lock.json",
      "/src/NodeGoat/package.json",
      "/src/NodeGoat/server.js",
      "/src/NodeGoat/sonar-scanner.properties"
    ]
  },
  "skipped_rules": []
}
