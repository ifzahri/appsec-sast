{
  "version": "1.121.0",
  "results": [
    {
      "check_id": "html.security.audit.missing-integrity.missing-integrity",
      "path": "/src/WebGoat/docs/index.html",
      "start": { "line": 7, "col": 3, "offset": 142 },
      "end": { "line": 7, "col": 54, "offset": 193 },
      "extra": {
        "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) youâ€™re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
        "metadata": {
          "category": "security",
          "technology": ["html"],
          "cwe": ["CWE-353: Missing Support for Integrity Check"],
          "owasp": ["A08:2021 - Software and Data Integrity Failures"],
          "confidence": "LOW",
          "references": [
            "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
          ],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cryptographic Issues"],
          "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
          "shortlink": "https://sg.run/krXA"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "generic.secrets.security.detected-sonarqube-docs-api-key.detected-sonarqube-docs-api-key",
      "path": "/src/WebGoat/sonar-scanner.properties",
      "start": { "line": 10, "col": 1, "offset": 243 },
      "end": { "line": 10, "col": 57, "offset": 299 },
      "extra": {
        "message": "SonarQube Docs API Key detected",
        "metadata": {
          "cwe": ["CWE-798: Use of Hard-coded Credentials"],
          "source-rule-url": "https://github.com/grab/secret-scanner/blob/master/scanner/signatures/pattern.go",
          "category": "security",
          "technology": ["secrets", "sonarqube"],
          "confidence": "LOW",
          "owasp": ["A07:2021 - Identification and Authentication Failures"],
          "references": [
            "https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures"
          ],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Hard-coded Secrets"],
          "source": "https://semgrep.dev/r/generic.secrets.security.detected-sonarqube-docs-api-key.detected-sonarqube-docs-api-key",
          "shortlink": "https://sg.run/x10P"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "generic.secrets.security.detected-jwt-token.detected-jwt-token",
      "path": "/src/WebGoat/src/it/java/org/owasp/webgoat/playwright/webwolf/JwtUITest.java",
      "start": { "line": 21, "col": 10, "offset": 662 },
      "end": { "line": 21, "col": 122, "offset": 774 },
      "extra": {
        "message": "JWT token detected",
        "metadata": {
          "source-rule-url": "https://github.com/Yelp/detect-secrets/blob/master/detect_secrets/plugins/jwt.py",
          "category": "security",
          "technology": ["secrets", "jwt"],
          "confidence": "LOW",
          "references": [
            "https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/"
          ],
          "cwe": ["CWE-321: Use of Hard-coded Cryptographic Key"],
          "owasp": ["A02:2021 - Cryptographic Failures"],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cryptographic Issues"],
          "source": "https://semgrep.dev/r/generic.secrets.security.detected-jwt-token.detected-jwt-token",
          "shortlink": "https://sg.run/05N5"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/container/service/LabelDebugService.java",
      "start": { "line": 35, "col": 4, "offset": 1167 },
      "end": { "line": 35, "col": 18, "offset": 1181 },
      "extra": {
        "message": "Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST').",
        "metadata": {
          "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"],
          "owasp": ["A01:2021 - Broken Access Control"],
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING",
          "references": [
            "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"
          ],
          "category": "security",
          "technology": ["spring"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping",
          "shortlink": "https://sg.run/2xlq"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/container/service/LabelDebugService.java",
      "start": { "line": 48, "col": 4, "offset": 1818 },
      "end": { "line": 48, "col": 18, "offset": 1832 },
      "extra": {
        "message": "Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST').",
        "metadata": {
          "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"],
          "owasp": ["A01:2021 - Broken Access Control"],
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING",
          "references": [
            "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"
          ],
          "category": "security",
          "technology": ["spring"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping",
          "shortlink": "https://sg.run/2xlq"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/container/service/LessonMenuService.java",
      "start": { "line": 44, "col": 4, "offset": 1598 },
      "end": { "line": 44, "col": 18, "offset": 1612 },
      "extra": {
        "message": "Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST').",
        "metadata": {
          "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"],
          "owasp": ["A01:2021 - Broken Access Control"],
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING",
          "references": [
            "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"
          ],
          "category": "security",
          "technology": ["spring"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping",
          "shortlink": "https://sg.run/2xlq"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/container/service/SessionService.java",
      "start": { "line": 22, "col": 4, "offset": 712 },
      "end": { "line": 22, "col": 18, "offset": 726 },
      "extra": {
        "message": "Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST').",
        "metadata": {
          "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"],
          "owasp": ["A01:2021 - Broken Access Control"],
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING",
          "references": [
            "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"
          ],
          "category": "security",
          "technology": ["spring"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping",
          "shortlink": "https://sg.run/2xlq"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.lang.security.audit.crypto.weak-random.weak-random",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/challenges/challenge1/ImageServlet.java",
      "start": { "line": 21, "col": 37, "offset": 758 },
      "end": { "line": 21, "col": 64, "offset": 785 },
      "extra": {
        "message": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead.",
        "metadata": {
          "functional-categories": [
            "crypto::search::randomness::java.security"
          ],
          "owasp": ["A02:2021 - Cryptographic Failures"],
          "cwe": ["CWE-330: Use of Insufficiently Random Values"],
          "category": "security",
          "technology": ["java"],
          "references": [
            "https://owasp.org/Top10/A02_2021-Cryptographic_Failures"
          ],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cryptographic Issues"],
          "source": "https://semgrep.dev/r/java.lang.security.audit.crypto.weak-random.weak-random",
          "shortlink": "https://sg.run/NwBp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.spring.security.injection.tainted-sql-string.tainted-sql-string",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java",
      "start": { "line": 45, "col": 15, "offset": 1831 },
      "end": { "line": 49, "col": 24, "offset": 2025 },
      "extra": {
        "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.",
        "metadata": {
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": [
            "https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html"
          ],
          "category": "security",
          "technology": ["spring"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["vuln"],
          "likelihood": "HIGH",
          "impact": "MEDIUM",
          "confidence": "MEDIUM",
          "interfile": true,
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["SQL Injection"],
          "source": "https://semgrep.dev/r/java.spring.security.injection.tainted-sql-string.tainted-sql-string",
          "shortlink": "https://sg.run/9rzz"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.lang.security.audit.formatted-sql-string.formatted-sql-string",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java",
      "start": { "line": 50, "col": 29, "offset": 2057 },
      "end": { "line": 50, "col": 53, "offset": 2081 },
      "extra": {
        "message": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.",
        "metadata": {
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SQL_INJECTION",
          "asvs": {
            "control_id": "5.3.5 Injection",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v53-output-encoding-and-injection-prevention-requirements",
            "section": "V5: Validation, Sanitization and Encoding Verification Requirements",
            "version": "4"
          },
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html",
            "https://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html#create_ps",
            "https://software-security.sans.org/developer-how-to/fix-sql-injection-in-java-using-prepared-callable-statement"
          ],
          "category": "security",
          "technology": ["java"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["vuln"],
          "likelihood": "HIGH",
          "impact": "MEDIUM",
          "confidence": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["SQL Injection"],
          "source": "https://semgrep.dev/r/java.lang.security.audit.formatted-sql-string.formatted-sql-string",
          "shortlink": "https://sg.run/OPXp"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.lang.security.audit.crypto.weak-random.weak-random",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java",
      "start": { "line": 37, "col": 37, "offset": 1583 },
      "end": { "line": 37, "col": 91, "offset": 1637 },
      "extra": {
        "message": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead.",
        "metadata": {
          "functional-categories": [
            "crypto::search::randomness::java.security"
          ],
          "owasp": ["A02:2021 - Cryptographic Failures"],
          "cwe": ["CWE-330: Use of Insufficiently Random Values"],
          "category": "security",
          "technology": ["java"],
          "references": [
            "https://owasp.org/Top10/A02_2021-Cryptographic_Failures"
          ],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cryptographic Issues"],
          "source": "https://semgrep.dev/r/java.lang.security.audit.crypto.weak-random.weak-random",
          "shortlink": "https://sg.run/NwBp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java",
      "start": { "line": 39, "col": 54, "offset": 1747 },
      "end": { "line": 39, "col": 63, "offset": 1756 },
      "extra": {
        "message": "Detected input from a HTTPServletRequest going into a session command, like `setAttribute`. User input into such a command could lead to an attacker inputting malicious code into your session parameters, blurring the line between what's trusted and untrusted, and therefore leading to a trust boundary violation. This could lead to programmers trusting unvalidated data. Instead, thoroughly sanitize user input before passing it into such function calls.",
        "metadata": {
          "category": "security",
          "technology": ["java"],
          "cwe": ["CWE-501: Trust Boundary Violation"],
          "owasp": ["A04:2021 - Insecure Design"],
          "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"],
          "subcategory": ["vuln"],
          "impact": "MEDIUM",
          "likelihood": "MEDIUM",
          "confidence": "MEDIUM",
          "interfile": true,
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Other"],
          "source": "https://semgrep.dev/r/java.lang.security.audit.tainted-session-from-http-request.tainted-session-from-http-request",
          "shortlink": "https://sg.run/QbDZ"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java",
      "start": { "line": 30, "col": 4, "offset": 1348 },
      "end": { "line": 30, "col": 18, "offset": 1362 },
      "extra": {
        "message": "Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST').",
        "metadata": {
          "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"],
          "owasp": ["A01:2021 - Broken Access Control"],
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING",
          "references": [
            "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"
          ],
          "category": "security",
          "technology": ["spring"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping",
          "shortlink": "https://sg.run/2xlq"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.lang.security.audit.crypto.weak-random.weak-random",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java",
      "start": { "line": 37, "col": 31, "offset": 1674 },
      "end": { "line": 37, "col": 67, "offset": 1710 },
      "extra": {
        "message": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead.",
        "metadata": {
          "functional-categories": [
            "crypto::search::randomness::java.security"
          ],
          "owasp": ["A02:2021 - Cryptographic Failures"],
          "cwe": ["CWE-330: Use of Insufficiently Random Values"],
          "category": "security",
          "technology": ["java"],
          "references": [
            "https://owasp.org/Top10/A02_2021-Cryptographic_Failures"
          ],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cryptographic Issues"],
          "source": "https://semgrep.dev/r/java.lang.security.audit.crypto.weak-random.weak-random",
          "shortlink": "https://sg.run/NwBp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.lang.security.audit.crypto.use-of-md5.use-of-md5",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java",
      "start": { "line": 39, "col": 52, "offset": 1767 },
      "end": { "line": 39, "col": 57, "offset": 1772 },
      "extra": {
        "message": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead.",
        "fix": "\"SHA-512\"",
        "metadata": {
          "functional-categories": [
            "crypto::search::hash-algorithm::java.security"
          ],
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A02:2021 - Cryptographic Failures"
          ],
          "cwe": ["CWE-328: Use of Weak Hash"],
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#WEAK_MESSAGE_DIGEST_MD5",
          "category": "security",
          "technology": ["java"],
          "references": [
            "https://owasp.org/Top10/A02_2021-Cryptographic_Failures"
          ],
          "subcategory": ["vuln"],
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "confidence": "HIGH",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Insecure Hashing Algorithm"],
          "source": "https://semgrep.dev/r/java.lang.security.audit.crypto.use-of-md5.use-of-md5",
          "shortlink": "https://sg.run/ryJn"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java",
      "start": { "line": 49, "col": 4, "offset": 2085 },
      "end": { "line": 49, "col": 18, "offset": 2099 },
      "extra": {
        "message": "Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST').",
        "metadata": {
          "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"],
          "owasp": ["A01:2021 - Broken Access Control"],
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING",
          "references": [
            "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"
          ],
          "category": "security",
          "technology": ["spring"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping",
          "shortlink": "https://sg.run/2xlq"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.lang.security.audit.crypto.weak-random.weak-random",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java",
      "start": { "line": 55, "col": 31, "offset": 2412 },
      "end": { "line": 55, "col": 67, "offset": 2448 },
      "extra": {
        "message": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead.",
        "metadata": {
          "functional-categories": [
            "crypto::search::randomness::java.security"
          ],
          "owasp": ["A02:2021 - Cryptographic Failures"],
          "cwe": ["CWE-330: Use of Insufficiently Random Values"],
          "category": "security",
          "technology": ["java"],
          "references": [
            "https://owasp.org/Top10/A02_2021-Cryptographic_Failures"
          ],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cryptographic Issues"],
          "source": "https://semgrep.dev/r/java.lang.security.audit.crypto.weak-random.weak-random",
          "shortlink": "https://sg.run/NwBp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/SigningAssignment.java",
      "start": { "line": 37, "col": 4, "offset": 1434 },
      "end": { "line": 37, "col": 18, "offset": 1448 },
      "extra": {
        "message": "Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST').",
        "metadata": {
          "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"],
          "owasp": ["A01:2021 - Broken Access Control"],
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING",
          "references": [
            "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"
          ],
          "category": "security",
          "technology": ["spring"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping",
          "shortlink": "https://sg.run/2xlq"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.lang.security.audit.object-deserialization.object-deserialization",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/deserialization/InsecureDeserializationTask.java",
      "start": { "line": 42, "col": 10, "offset": 1538 },
      "end": { "line": 43, "col": 94, "offset": 1656 },
      "extra": {
        "message": "Found object deserialization using ObjectInputStream. Deserializing entire Java objects is dangerous because malicious actors can create Java object streams with unintended consequences. Ensure that the objects being deserialized are not user-controlled. If this must be done, consider using HMACs to sign the data stream to make sure it is not tampered with, or consider only transmitting object fields and populating a new object.",
        "metadata": {
          "cwe": ["CWE-502: Deserialization of Untrusted Data"],
          "owasp": [
            "A08:2017 - Insecure Deserialization",
            "A08:2021 - Software and Data Integrity Failures"
          ],
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#OBJECT_DESERIALIZATION",
          "references": [
            "https://www.owasp.org/index.php/Deserialization_of_untrusted_data",
            "https://www.oracle.com/java/technologies/javase/seccodeguide.html#8"
          ],
          "category": "security",
          "technology": ["java"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "HIGH",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Insecure Deserialization "],
          "source": "https://semgrep.dev/r/java.lang.security.audit.object-deserialization.object-deserialization",
          "shortlink": "https://sg.run/Ek0A"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.lang.security.audit.object-deserialization.object-deserialization",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/deserialization/SerializationHelper.java",
      "start": { "line": 22, "col": 5, "offset": 700 },
      "end": { "line": 22, "col": 83, "offset": 778 },
      "extra": {
        "message": "Found object deserialization using ObjectInputStream. Deserializing entire Java objects is dangerous because malicious actors can create Java object streams with unintended consequences. Ensure that the objects being deserialized are not user-controlled. If this must be done, consider using HMACs to sign the data stream to make sure it is not tampered with, or consider only transmitting object fields and populating a new object.",
        "metadata": {
          "cwe": ["CWE-502: Deserialization of Untrusted Data"],
          "owasp": [
            "A08:2017 - Insecure Deserialization",
            "A08:2021 - Software and Data Integrity Failures"
          ],
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#OBJECT_DESERIALIZATION",
          "references": [
            "https://www.owasp.org/index.php/Deserialization_of_untrusted_data",
            "https://www.oracle.com/java/technologies/javase/seccodeguide.html#8"
          ],
          "category": "security",
          "technology": ["java"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "HIGH",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Insecure Deserialization "],
          "source": "https://semgrep.dev/r/java.lang.security.audit.object-deserialization.object-deserialization",
          "shortlink": "https://sg.run/Ek0A"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/hijacksession/HijackSessionAssignment.java",
      "start": { "line": 70, "col": 5, "offset": 2657 },
      "end": { "line": 70, "col": 32, "offset": 2684 },
      "extra": {
        "message": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'",
        "metadata": {
          "cwe": ["CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag"],
          "owasp": ["A05:2021 - Security Misconfiguration"],
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#HTTPONLY_COOKIE",
          "asvs": {
            "control_id": "3.4.2 Missing Cookie Attribute",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management",
            "section": "V3: Session Management Verification Requirements",
            "version": "4"
          },
          "category": "security",
          "technology": ["java"],
          "references": [
            "https://owasp.org/Top10/A05_2021-Security_Misconfiguration"
          ],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "LOW",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cookie Security"],
          "source": "https://semgrep.dev/r/java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
          "shortlink": "https://sg.run/b7Be"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.lang.security.audit.crypto.weak-random.weak-random",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/hijacksession/cas/HijackSessionAuthenticationProvider.java",
      "start": { "line": 25, "col": 28, "offset": 829 },
      "end": { "line": 25, "col": 51, "offset": 852 },
      "extra": {
        "message": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead.",
        "metadata": {
          "functional-categories": [
            "crypto::search::randomness::java.security"
          ],
          "owasp": ["A02:2021 - Cryptographic Failures"],
          "cwe": ["CWE-330: Use of Insufficiently Random Values"],
          "category": "security",
          "technology": ["java"],
          "references": [
            "https://owasp.org/Top10/A02_2021-Cryptographic_Failures"
          ],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cryptographic Issues"],
          "source": "https://semgrep.dev/r/java.lang.security.audit.crypto.weak-random.weak-random",
          "shortlink": "https://sg.run/NwBp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.lang.security.audit.crypto.weak-random.weak-random",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpoint.java",
      "start": { "line": 38, "col": 39, "offset": 1549 },
      "end": { "line": 38, "col": 75, "offset": 1585 },
      "extra": {
        "message": "Detected use of the functions `Math.random()` or `java.util.Random()`. These are both not cryptographically strong random number generators (RNGs). If you are using these RNGs to create passwords or secret tokens, use `java.security.SecureRandom` instead.",
        "metadata": {
          "functional-categories": [
            "crypto::search::randomness::java.security"
          ],
          "owasp": ["A02:2021 - Cryptographic Failures"],
          "cwe": ["CWE-330: Use of Insufficiently Random Values"],
          "category": "security",
          "technology": ["java"],
          "references": [
            "https://owasp.org/Top10/A02_2021-Cryptographic_Failures"
          ],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cryptographic Issues"],
          "source": "https://semgrep.dev/r/java.lang.security.audit.crypto.weak-random.weak-random",
          "shortlink": "https://sg.run/NwBp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpoint.java",
      "start": { "line": 43, "col": 4, "offset": 1786 },
      "end": { "line": 43, "col": 18, "offset": 1800 },
      "extra": {
        "message": "Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST').",
        "metadata": {
          "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"],
          "owasp": ["A01:2021 - Broken Access Control"],
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING",
          "references": [
            "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"
          ],
          "category": "security",
          "technology": ["spring"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping",
          "shortlink": "https://sg.run/2xlq"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.servlets.security.cookie-issecure-false.cookie-issecure-false",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java",
      "start": { "line": 114, "col": 7, "offset": 4270 },
      "end": { "line": 114, "col": 57, "offset": 4320 },
      "extra": {
        "message": "Default session middleware settings: `setSecure` not set to true. This ensures that the cookie is sent only over HTTPS to prevent cross-site scripting attacks.",
        "fix": "cookie = new Cookie(\"access_token\", token);\n      cookie.setSecure(true);",
        "metadata": {
          "vulnerability": "Insecure Transport",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A02:2021 - Cryptographic Failures"
          ],
          "cwe": ["CWE-319: Cleartext Transmission of Sensitive Information"],
          "references": [
            "https://docs.oracle.com/javaee/6/api/javax/servlet/http/Cookie.html#setSecure(boolean)",
            "https://owasp.org/www-community/controls/SecureCookieAttribute"
          ],
          "category": "security",
          "technology": ["java", "cookie"],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "LOW",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Mishandled Sensitive Information"],
          "source": "https://semgrep.dev/r/java.servlets.security.cookie-issecure-false.cookie-issecure-false",
          "shortlink": "https://sg.run/pxn0"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java",
      "start": { "line": 115, "col": 7, "offset": 4328 },
      "end": { "line": 115, "col": 34, "offset": 4355 },
      "extra": {
        "message": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'",
        "metadata": {
          "cwe": ["CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag"],
          "owasp": ["A05:2021 - Security Misconfiguration"],
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#HTTPONLY_COOKIE",
          "asvs": {
            "control_id": "3.4.2 Missing Cookie Attribute",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management",
            "section": "V3: Session Management Verification Requirements",
            "version": "4"
          },
          "category": "security",
          "technology": ["java"],
          "references": [
            "https://owasp.org/Top10/A05_2021-Security_Misconfiguration"
          ],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "LOW",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cookie Security"],
          "source": "https://semgrep.dev/r/java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
          "shortlink": "https://sg.run/b7Be"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java",
      "start": { "line": 115, "col": 7, "offset": 4328 },
      "end": { "line": 115, "col": 34, "offset": 4355 },
      "extra": {
        "message": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'",
        "metadata": {
          "cwe": [
            "CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"
          ],
          "owasp": ["A05:2021 - Security Misconfiguration"],
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#INSECURE_COOKIE",
          "asvs": {
            "control_id": "3.4.1 Missing Cookie Attribute",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management",
            "section": "V3: Session Management Verification Requirements",
            "version": "4"
          },
          "category": "security",
          "technology": ["java"],
          "references": [
            "https://owasp.org/Top10/A05_2021-Security_Misconfiguration"
          ],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "LOW",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cookie Security"],
          "source": "https://semgrep.dev/r/java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
          "shortlink": "https://sg.run/kXoK"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.servlets.security.cookie-issecure-false.cookie-issecure-false",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java",
      "start": { "line": 119, "col": 7, "offset": 4493 },
      "end": { "line": 119, "col": 54, "offset": 4540 },
      "extra": {
        "message": "Default session middleware settings: `setSecure` not set to true. This ensures that the cookie is sent only over HTTPS to prevent cross-site scripting attacks.",
        "fix": "cookie = new Cookie(\"access_token\", \"\");\n      cookie.setSecure(true);",
        "metadata": {
          "vulnerability": "Insecure Transport",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A02:2021 - Cryptographic Failures"
          ],
          "cwe": ["CWE-319: Cleartext Transmission of Sensitive Information"],
          "references": [
            "https://docs.oracle.com/javaee/6/api/javax/servlet/http/Cookie.html#setSecure(boolean)",
            "https://owasp.org/www-community/controls/SecureCookieAttribute"
          ],
          "category": "security",
          "technology": ["java", "cookie"],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "LOW",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Mishandled Sensitive Information"],
          "source": "https://semgrep.dev/r/java.servlets.security.cookie-issecure-false.cookie-issecure-false",
          "shortlink": "https://sg.run/pxn0"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java",
      "start": { "line": 120, "col": 7, "offset": 4548 },
      "end": { "line": 120, "col": 34, "offset": 4575 },
      "extra": {
        "message": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'",
        "metadata": {
          "cwe": ["CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag"],
          "owasp": ["A05:2021 - Security Misconfiguration"],
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#HTTPONLY_COOKIE",
          "asvs": {
            "control_id": "3.4.2 Missing Cookie Attribute",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management",
            "section": "V3: Session Management Verification Requirements",
            "version": "4"
          },
          "category": "security",
          "technology": ["java"],
          "references": [
            "https://owasp.org/Top10/A05_2021-Security_Misconfiguration"
          ],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "LOW",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cookie Security"],
          "source": "https://semgrep.dev/r/java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
          "shortlink": "https://sg.run/b7Be"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java",
      "start": { "line": 120, "col": 7, "offset": 4548 },
      "end": { "line": 120, "col": 34, "offset": 4575 },
      "extra": {
        "message": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'",
        "metadata": {
          "cwe": [
            "CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"
          ],
          "owasp": ["A05:2021 - Security Misconfiguration"],
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#INSECURE_COOKIE",
          "asvs": {
            "control_id": "3.4.1 Missing Cookie Attribute",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management",
            "section": "V3: Session Management Verification Requirements",
            "version": "4"
          },
          "category": "security",
          "technology": ["java"],
          "references": [
            "https://owasp.org/Top10/A05_2021-Security_Misconfiguration"
          ],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "LOW",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cookie Security"],
          "source": "https://semgrep.dev/r/java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
          "shortlink": "https://sg.run/kXoK"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.spring.security.injection.tainted-url-host.tainted-url-host",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/jwt/claimmisuse/JWTHeaderJKUEndpoint.java",
      "start": { "line": 57, "col": 50, "offset": 2174 },
      "end": { "line": 57, "col": 73, "offset": 2197 },
      "extra": {
        "message": "User data flows into the host portion of this manually-constructed URL. This could allow an attacker to send data to their own server, potentially exposing sensitive data such as cookies or authorization information sent with this request. They could also probe internal servers or other resources that the server running this code can access. (This is called server-side request forgery, or SSRF.) Do not allow arbitrary hosts. Instead, create an allowlist for approved hosts, hardcode the correct host, or ensure that the user data can only affect the path or parameters.",
        "metadata": {
          "cwe": ["CWE-918: Server-Side Request Forgery (SSRF)"],
          "owasp": ["A10:2021 - Server-Side Request Forgery (SSRF)"],
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/Server_Side_Request_Forgery_Prevention_Cheat_Sheet.html"
          ],
          "category": "security",
          "technology": ["java", "spring"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["vuln"],
          "impact": "MEDIUM",
          "likelihood": "MEDIUM",
          "confidence": "MEDIUM",
          "interfile": true,
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Server-Side Request Forgery (SSRF)"],
          "source": "https://semgrep.dev/r/java.spring.security.injection.tainted-url-host.tainted-url-host",
          "shortlink": "https://sg.run/vkYn"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java",
      "start": { "line": 100, "col": 11, "offset": 4057 },
      "end": { "line": 101, "col": 98, "offset": 4168 },
      "extra": {
        "message": "Detected a potential path traversal. A malicious actor could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path.",
        "metadata": {
          "cwe": [
            "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
          ],
          "owasp": [
            "A05:2017 - Broken Access Control",
            "A01:2021 - Broken Access Control"
          ],
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#PATH_TRAVERSAL_IN",
          "references": ["https://www.owasp.org/index.php/Path_Traversal"],
          "category": "security",
          "technology": ["java"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["vuln"],
          "likelihood": "HIGH",
          "impact": "MEDIUM",
          "confidence": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Path Traversal"],
          "source": "https://semgrep.dev/r/java.lang.security.httpservlet-path-traversal.httpservlet-path-traversal",
          "shortlink": "https://sg.run/oxXN"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.servlets.security.cookie-issecure-false.cookie-issecure-false",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java",
      "start": { "line": 58, "col": 5, "offset": 2556 },
      "end": { "line": 58, "col": 49, "offset": 2600 },
      "extra": {
        "message": "Default session middleware settings: `setSecure` not set to true. This ensures that the cookie is sent only over HTTPS to prevent cross-site scripting attacks.",
        "fix": "cookie = new Cookie(COOKIE_NAME, \"\");\n    cookie.setSecure(true);",
        "metadata": {
          "vulnerability": "Insecure Transport",
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A02:2021 - Cryptographic Failures"
          ],
          "cwe": ["CWE-319: Cleartext Transmission of Sensitive Information"],
          "references": [
            "https://docs.oracle.com/javaee/6/api/javax/servlet/http/Cookie.html#setSecure(boolean)",
            "https://owasp.org/www-community/controls/SecureCookieAttribute"
          ],
          "category": "security",
          "technology": ["java", "cookie"],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "LOW",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Mishandled Sensitive Information"],
          "source": "https://semgrep.dev/r/java.servlets.security.cookie-issecure-false.cookie-issecure-false",
          "shortlink": "https://sg.run/pxn0"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java",
      "start": { "line": 60, "col": 5, "offset": 2632 },
      "end": { "line": 60, "col": 32, "offset": 2659 },
      "extra": {
        "message": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'",
        "metadata": {
          "cwe": ["CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag"],
          "owasp": ["A05:2021 - Security Misconfiguration"],
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#HTTPONLY_COOKIE",
          "asvs": {
            "control_id": "3.4.2 Missing Cookie Attribute",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management",
            "section": "V3: Session Management Verification Requirements",
            "version": "4"
          },
          "category": "security",
          "technology": ["java"],
          "references": [
            "https://owasp.org/Top10/A05_2021-Security_Misconfiguration"
          ],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "LOW",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cookie Security"],
          "source": "https://semgrep.dev/r/java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
          "shortlink": "https://sg.run/b7Be"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java",
      "start": { "line": 60, "col": 5, "offset": 2632 },
      "end": { "line": 60, "col": 32, "offset": 2659 },
      "extra": {
        "message": "A cookie was detected without setting the 'secure' flag. The 'secure' flag for cookies prevents the client from transmitting the cookie over insecure channels such as HTTP. Set the 'secure' flag by calling 'cookie.setSecure(true);'",
        "metadata": {
          "cwe": [
            "CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"
          ],
          "owasp": ["A05:2021 - Security Misconfiguration"],
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#INSECURE_COOKIE",
          "asvs": {
            "control_id": "3.4.1 Missing Cookie Attribute",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management",
            "section": "V3: Session Management Verification Requirements",
            "version": "4"
          },
          "category": "security",
          "technology": ["java"],
          "references": [
            "https://owasp.org/Top10/A05_2021-Security_Misconfiguration"
          ],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "LOW",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cookie Security"],
          "source": "https://semgrep.dev/r/java.lang.security.audit.cookie-missing-secure-flag.cookie-missing-secure-flag",
          "shortlink": "https://sg.run/kXoK"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java",
      "start": { "line": 77, "col": 7, "offset": 3399 },
      "end": { "line": 77, "col": 37, "offset": 3429 },
      "extra": {
        "message": "A cookie was detected without setting the 'HttpOnly' flag. The 'HttpOnly' flag for cookies instructs the browser to forbid client-side scripts from reading the cookie. Set the 'HttpOnly' flag by calling 'cookie.setHttpOnly(true);'",
        "metadata": {
          "cwe": ["CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag"],
          "owasp": ["A05:2021 - Security Misconfiguration"],
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#HTTPONLY_COOKIE",
          "asvs": {
            "control_id": "3.4.2 Missing Cookie Attribute",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x12-V3-Session-management.md#v34-cookie-based-session-management",
            "section": "V3: Session Management Verification Requirements",
            "version": "4"
          },
          "category": "security",
          "technology": ["java"],
          "references": [
            "https://owasp.org/Top10/A05_2021-Security_Misconfiguration"
          ],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "LOW",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cookie Security"],
          "source": "https://semgrep.dev/r/java.lang.security.audit.cookie-missing-httponly.cookie-missing-httponly",
          "shortlink": "https://sg.run/b7Be"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.spring.security.injection.tainted-sql-string.tainted-sql-string",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java",
      "start": { "line": 55, "col": 13, "offset": 2043 },
      "end": { "line": 55, "col": 87, "offset": 2117 },
      "extra": {
        "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.",
        "metadata": {
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": [
            "https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html"
          ],
          "category": "security",
          "technology": ["spring"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["vuln"],
          "likelihood": "HIGH",
          "impact": "MEDIUM",
          "confidence": "MEDIUM",
          "interfile": true,
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["SQL Injection"],
          "source": "https://semgrep.dev/r/java.spring.security.injection.tainted-sql-string.tainted-sql-string",
          "shortlink": "https://sg.run/9rzz"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.lang.security.audit.formatted-sql-string.formatted-sql-string",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java",
      "start": { "line": 57, "col": 31, "offset": 2211 },
      "end": { "line": 57, "col": 69, "offset": 2249 },
      "extra": {
        "message": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.",
        "metadata": {
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SQL_INJECTION",
          "asvs": {
            "control_id": "5.3.5 Injection",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v53-output-encoding-and-injection-prevention-requirements",
            "section": "V5: Validation, Sanitization and Encoding Verification Requirements",
            "version": "4"
          },
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html",
            "https://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html#create_ps",
            "https://software-security.sans.org/developer-how-to/fix-sql-injection-in-java-using-prepared-callable-statement"
          ],
          "category": "security",
          "technology": ["java"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["vuln"],
          "likelihood": "HIGH",
          "impact": "MEDIUM",
          "confidence": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["SQL Injection"],
          "source": "https://semgrep.dev/r/java.lang.security.audit.formatted-sql-string.formatted-sql-string",
          "shortlink": "https://sg.run/OPXp"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java",
      "start": { "line": 57, "col": 31, "offset": 2211 },
      "end": { "line": 57, "col": 69, "offset": 2249 },
      "extra": {
        "message": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.",
        "metadata": {
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "category": "security",
          "technology": ["jdbc"],
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "HIGH",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["SQL Injection"],
          "source": "https://semgrep.dev/r/java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli",
          "shortlink": "https://sg.run/AvkL"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.lang.security.audit.formatted-sql-string.formatted-sql-string",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java",
      "start": { "line": 56, "col": 29, "offset": 2131 },
      "end": { "line": 56, "col": 58, "offset": 2160 },
      "extra": {
        "message": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.",
        "metadata": {
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SQL_INJECTION",
          "asvs": {
            "control_id": "5.3.5 Injection",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v53-output-encoding-and-injection-prevention-requirements",
            "section": "V5: Validation, Sanitization and Encoding Verification Requirements",
            "version": "4"
          },
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html",
            "https://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html#create_ps",
            "https://software-security.sans.org/developer-how-to/fix-sql-injection-in-java-using-prepared-callable-statement"
          ],
          "category": "security",
          "technology": ["java"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["vuln"],
          "likelihood": "HIGH",
          "impact": "MEDIUM",
          "confidence": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["SQL Injection"],
          "source": "https://semgrep.dev/r/java.lang.security.audit.formatted-sql-string.formatted-sql-string",
          "shortlink": "https://sg.run/OPXp"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java",
      "start": { "line": 56, "col": 29, "offset": 2131 },
      "end": { "line": 56, "col": 58, "offset": 2160 },
      "extra": {
        "message": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.",
        "metadata": {
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "category": "security",
          "technology": ["jdbc"],
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "HIGH",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["SQL Injection"],
          "source": "https://semgrep.dev/r/java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli",
          "shortlink": "https://sg.run/AvkL"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java",
      "start": { "line": 49, "col": 27, "offset": 1874 },
      "end": { "line": 49, "col": 56, "offset": 1903 },
      "extra": {
        "message": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.",
        "metadata": {
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "category": "security",
          "technology": ["jdbc"],
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "HIGH",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["SQL Injection"],
          "source": "https://semgrep.dev/r/java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli",
          "shortlink": "https://sg.run/AvkL"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.lang.security.audit.formatted-sql-string.formatted-sql-string",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java",
      "start": { "line": 52, "col": 29, "offset": 2493 },
      "end": { "line": 52, "col": 58, "offset": 2522 },
      "extra": {
        "message": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.",
        "metadata": {
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SQL_INJECTION",
          "asvs": {
            "control_id": "5.3.5 Injection",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v53-output-encoding-and-injection-prevention-requirements",
            "section": "V5: Validation, Sanitization and Encoding Verification Requirements",
            "version": "4"
          },
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html",
            "https://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html#create_ps",
            "https://software-security.sans.org/developer-how-to/fix-sql-injection-in-java-using-prepared-callable-statement"
          ],
          "category": "security",
          "technology": ["java"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["vuln"],
          "likelihood": "HIGH",
          "impact": "MEDIUM",
          "confidence": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["SQL Injection"],
          "source": "https://semgrep.dev/r/java.lang.security.audit.formatted-sql-string.formatted-sql-string",
          "shortlink": "https://sg.run/OPXp"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.lang.security.audit.formatted-sql-string.formatted-sql-string",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java",
      "start": { "line": 69, "col": 29, "offset": 2605 },
      "end": { "line": 69, "col": 49, "offset": 2625 },
      "extra": {
        "message": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.",
        "metadata": {
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SQL_INJECTION",
          "asvs": {
            "control_id": "5.3.5 Injection",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v53-output-encoding-and-injection-prevention-requirements",
            "section": "V5: Validation, Sanitization and Encoding Verification Requirements",
            "version": "4"
          },
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html",
            "https://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html#create_ps",
            "https://software-security.sans.org/developer-how-to/fix-sql-injection-in-java-using-prepared-callable-statement"
          ],
          "category": "security",
          "technology": ["java"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["vuln"],
          "likelihood": "HIGH",
          "impact": "MEDIUM",
          "confidence": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["SQL Injection"],
          "source": "https://semgrep.dev/r/java.lang.security.audit.formatted-sql-string.formatted-sql-string",
          "shortlink": "https://sg.run/OPXp"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.lang.security.audit.formatted-sql-string.formatted-sql-string",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java",
      "start": { "line": 62, "col": 29, "offset": 2329 },
      "end": { "line": 62, "col": 58, "offset": 2358 },
      "extra": {
        "message": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.",
        "metadata": {
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SQL_INJECTION",
          "asvs": {
            "control_id": "5.3.5 Injection",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v53-output-encoding-and-injection-prevention-requirements",
            "section": "V5: Validation, Sanitization and Encoding Verification Requirements",
            "version": "4"
          },
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html",
            "https://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html#create_ps",
            "https://software-security.sans.org/developer-how-to/fix-sql-injection-in-java-using-prepared-callable-statement"
          ],
          "category": "security",
          "technology": ["java"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["vuln"],
          "likelihood": "HIGH",
          "impact": "MEDIUM",
          "confidence": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["SQL Injection"],
          "source": "https://semgrep.dev/r/java.lang.security.audit.formatted-sql-string.formatted-sql-string",
          "shortlink": "https://sg.run/OPXp"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java",
      "start": { "line": 62, "col": 29, "offset": 2329 },
      "end": { "line": 62, "col": 58, "offset": 2358 },
      "extra": {
        "message": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.",
        "metadata": {
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "category": "security",
          "technology": ["jdbc"],
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "HIGH",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["SQL Injection"],
          "source": "https://semgrep.dev/r/java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli",
          "shortlink": "https://sg.run/AvkL"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.lang.security.audit.formatted-sql-string.formatted-sql-string",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java",
      "start": { "line": 142, "col": 7, "offset": 5029 },
      "end": { "line": 142, "col": 40, "offset": 5062 },
      "extra": {
        "message": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.",
        "metadata": {
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SQL_INJECTION",
          "asvs": {
            "control_id": "5.3.5 Injection",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v53-output-encoding-and-injection-prevention-requirements",
            "section": "V5: Validation, Sanitization and Encoding Verification Requirements",
            "version": "4"
          },
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html",
            "https://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html#create_ps",
            "https://software-security.sans.org/developer-how-to/fix-sql-injection-in-java-using-prepared-callable-statement"
          ],
          "category": "security",
          "technology": ["java"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["vuln"],
          "likelihood": "HIGH",
          "impact": "MEDIUM",
          "confidence": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["SQL Injection"],
          "source": "https://semgrep.dev/r/java.lang.security.audit.formatted-sql-string.formatted-sql-string",
          "shortlink": "https://sg.run/OPXp"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java",
      "start": { "line": 142, "col": 7, "offset": 5029 },
      "end": { "line": 142, "col": 40, "offset": 5062 },
      "extra": {
        "message": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.",
        "metadata": {
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "category": "security",
          "technology": ["jdbc"],
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "HIGH",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["SQL Injection"],
          "source": "https://semgrep.dev/r/java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli",
          "shortlink": "https://sg.run/AvkL"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.lang.security.audit.formatted-sql-string.formatted-sql-string",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java",
      "start": { "line": 65, "col": 7, "offset": 2602 },
      "end": { "line": 65, "col": 40, "offset": 2635 },
      "extra": {
        "message": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.",
        "metadata": {
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SQL_INJECTION",
          "asvs": {
            "control_id": "5.3.5 Injection",
            "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v53-output-encoding-and-injection-prevention-requirements",
            "section": "V5: Validation, Sanitization and Encoding Verification Requirements",
            "version": "4"
          },
          "references": [
            "https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html",
            "https://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html#create_ps",
            "https://software-security.sans.org/developer-how-to/fix-sql-injection-in-java-using-prepared-callable-statement"
          ],
          "category": "security",
          "technology": ["java"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["vuln"],
          "likelihood": "HIGH",
          "impact": "MEDIUM",
          "confidence": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["SQL Injection"],
          "source": "https://semgrep.dev/r/java.lang.security.audit.formatted-sql-string.formatted-sql-string",
          "shortlink": "https://sg.run/OPXp"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java",
      "start": { "line": 65, "col": 7, "offset": 2602 },
      "end": { "line": 65, "col": 40, "offset": 2635 },
      "extra": {
        "message": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.",
        "metadata": {
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "category": "security",
          "technology": ["jdbc"],
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "HIGH",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["SQL Injection"],
          "source": "https://semgrep.dev/r/java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli",
          "shortlink": "https://sg.run/AvkL"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java",
      "start": { "line": 94, "col": 25, "offset": 4011 },
      "end": { "line": 94, "col": 54, "offset": 4040 },
      "extra": {
        "message": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.",
        "metadata": {
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "category": "security",
          "technology": ["jdbc"],
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "HIGH",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["SQL Injection"],
          "source": "https://semgrep.dev/r/java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli",
          "shortlink": "https://sg.run/AvkL"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.spring.security.injection.tainted-sql-string.tainted-sql-string",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/Servers.java",
      "start": { "line": 51, "col": 15, "offset": 1553 },
      "end": { "line": 53, "col": 27, "offset": 1710 },
      "extra": {
        "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.",
        "metadata": {
          "cwe": [
            "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
          ],
          "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"],
          "references": [
            "https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html"
          ],
          "category": "security",
          "technology": ["spring"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["vuln"],
          "likelihood": "HIGH",
          "impact": "MEDIUM",
          "confidence": "MEDIUM",
          "interfile": true,
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["SQL Injection"],
          "source": "https://semgrep.dev/r/java.spring.security.injection.tainted-sql-string.tainted-sql-string",
          "shortlink": "https://sg.run/9rzz"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/xxe/SimpleXXE.java",
      "start": { "line": 77, "col": 4, "offset": 2867 },
      "end": { "line": 77, "col": 18, "offset": 2881 },
      "extra": {
        "message": "Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST').",
        "metadata": {
          "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"],
          "owasp": ["A01:2021 - Broken Access Control"],
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING",
          "references": [
            "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"
          ],
          "category": "security",
          "technology": ["spring"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping",
          "shortlink": "https://sg.run/2xlq"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/webwolf/FileServer.java",
      "start": { "line": 56, "col": 4, "offset": 1891 },
      "end": { "line": 56, "col": 18, "offset": 1905 },
      "extra": {
        "message": "Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST').",
        "metadata": {
          "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"],
          "owasp": ["A01:2021 - Broken Access Control"],
          "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING",
          "references": [
            "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"
          ],
          "category": "security",
          "technology": ["spring"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping",
          "shortlink": "https://sg.run/2xlq"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "java.spring.security.injection.tainted-file-path.tainted-file-path",
      "path": "/src/WebGoat/src/main/java/org/owasp/webgoat/webwolf/FileServer.java",
      "start": { "line": 79, "col": 35, "offset": 2892 },
      "end": { "line": 79, "col": 96, "offset": 2953 },
      "extra": {
        "message": "Detected user input controlling a file path. An attacker could control the location of this file, to include going backwards in the directory with '../'. To address this, ensure that user-controlled variables in file paths are sanitized. You may also consider using a utility method such as org.apache.commons.io.FilenameUtils.getName(...) to only retrieve the file name from the path.",
        "metadata": {
          "cwe": ["CWE-23: Relative Path Traversal"],
          "owasp": ["A01:2021 - Broken Access Control"],
          "references": [
            "https://owasp.org/www-community/attacks/Path_Traversal"
          ],
          "category": "security",
          "technology": ["java", "spring"],
          "subcategory": ["vuln"],
          "impact": "HIGH",
          "likelihood": "MEDIUM",
          "confidence": "HIGH",
          "interfile": true,
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Path Traversal"],
          "source": "https://semgrep.dev/r/java.spring.security.injection.tainted-file-path.tainted-file-path",
          "shortlink": "https://sg.run/x9o0"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/authbypass/html/AuthBypass.html",
      "start": { "line": 23, "col": 13, "offset": 1724 },
      "end": { "line": 41, "col": 20, "offset": 2652 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/authbypass/html/AuthBypass.html",
      "start": { "line": 43, "col": 13, "offset": 2668 },
      "end": { "line": 60, "col": 20, "offset": 3455 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/challenges/html/Challenge1.html",
      "start": { "line": 15, "col": 21, "offset": 539 },
      "end": { "line": 32, "col": 28, "offset": 1700 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/challenges/html/Challenge1.html",
      "start": { "line": 37, "col": 9, "offset": 1772 },
      "end": { "line": 50, "col": 16, "offset": 2537 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/challenges/html/Challenge5.html",
      "start": { "line": 69, "col": 9, "offset": 4024 },
      "end": { "line": 82, "col": 16, "offset": 4789 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/challenges/html/Challenge6.html",
      "start": { "line": 102, "col": 9, "offset": 6641 },
      "end": { "line": 115, "col": 16, "offset": 7406 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/challenges/html/Challenge7.html",
      "start": { "line": 60, "col": 9, "offset": 3002 },
      "end": { "line": 73, "col": 16, "offset": 3767 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/challenges/html/Challenge8.html",
      "start": { "line": 234, "col": 9, "offset": 15079 },
      "end": { "line": 247, "col": 16, "offset": 15844 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/chromedevtools/html/ChromeDevTools.html",
      "start": { "line": 25, "col": 9, "offset": 927 },
      "end": { "line": 30, "col": 16, "offset": 1233 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/chromedevtools/html/ChromeDevTools.html",
      "start": { "line": 46, "col": 9, "offset": 1856 },
      "end": { "line": 65, "col": 16, "offset": 2904 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/chromedevtools/html/ChromeDevTools.html",
      "start": { "line": 67, "col": 9, "offset": 2916 },
      "end": { "line": 79, "col": 16, "offset": 3495 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/cia/html/CIA.html",
      "start": { "line": 30, "col": 13, "offset": 1270 },
      "end": { "line": 36, "col": 20, "offset": 1613 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "html.security.plaintext-http-link.plaintext-http-link",
      "path": "/src/WebGoat/src/main/resources/lessons/clientsidefiltering/html/ClientSideFiltering.html",
      "start": { "line": 96, "col": 51, "offset": 5331 },
      "end": { "line": 96, "col": 95, "offset": 5375 },
      "extra": {
        "message": "This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.",
        "metadata": {
          "category": "security",
          "technology": ["html"],
          "cwe": ["CWE-319: Cleartext Transmission of Sensitive Information"],
          "owasp": [
            "A03:2017 - Sensitive Data Exposure",
            "A02:2021 - Cryptographic Failures"
          ],
          "confidence": "HIGH",
          "subcategory": ["vuln"],
          "references": ["https://cwe.mitre.org/data/definitions/319.html"],
          "likelihood": "LOW",
          "impact": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Mishandled Sensitive Information"],
          "source": "https://semgrep.dev/r/html.security.plaintext-http-link.plaintext-http-link",
          "shortlink": "https://sg.run/RA5q"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.browser.security.insecure-document-method.insecure-document-method",
      "path": "/src/WebGoat/src/main/resources/lessons/clientsidefiltering/js/clientSideFiltering.js",
      "start": { "line": 6, "col": 5, "offset": 108 },
      "end": { "line": 6, "col": 108, "offset": 211 },
      "extra": {
        "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",
        "metadata": {
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "category": "security",
          "technology": ["browser"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "LOW",
          "confidence": "LOW",
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site-Scripting (XSS)"],
          "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method",
          "shortlink": "https://sg.run/LwA9"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.browser.security.insecure-document-method.insecure-document-method",
      "path": "/src/WebGoat/src/main/resources/lessons/clientsidefiltering/js/clientSideFiltering.js",
      "start": { "line": 38, "col": 9, "offset": 1412 },
      "end": { "line": 38, "col": 33, "offset": 1436 },
      "extra": {
        "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",
        "metadata": {
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "category": "security",
          "technology": ["browser"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "LOW",
          "confidence": "LOW",
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site-Scripting (XSS)"],
          "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method",
          "shortlink": "https://sg.run/LwA9"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/cryptography/html/Cryptography.html",
      "start": { "line": 31, "col": 4, "offset": 1051 },
      "end": { "line": 37, "col": 11, "offset": 1390 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/cryptography/html/Cryptography.html",
      "start": { "line": 48, "col": 4, "offset": 1831 },
      "end": { "line": 53, "col": 11, "offset": 2182 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/cryptography/html/Cryptography.html",
      "start": { "line": 65, "col": 4, "offset": 2625 },
      "end": { "line": 71, "col": 11, "offset": 3035 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/cryptography/html/Cryptography.html",
      "start": { "line": 90, "col": 4, "offset": 3747 },
      "end": { "line": 96, "col": 11, "offset": 4123 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/cryptography/html/Cryptography.html",
      "start": { "line": 113, "col": 4, "offset": 4738 },
      "end": { "line": 119, "col": 11, "offset": 5128 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/csrf/html/CSRF.html",
      "start": { "line": 16, "col": 5, "offset": 500 },
      "end": { "line": 24, "col": 12, "offset": 812 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/csrf/html/CSRF.html",
      "start": { "line": 35, "col": 9, "offset": 1205 },
      "end": { "line": 48, "col": 16, "offset": 1674 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/csrf/html/CSRF.html",
      "start": { "line": 93, "col": 29, "offset": 3481 },
      "end": { "line": 102, "col": 36, "offset": 4260 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/csrf/html/CSRF.html",
      "start": { "line": 213, "col": 9, "offset": 10090 },
      "end": { "line": 222, "col": 16, "offset": 10452 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/csrf/html/CSRF.html",
      "start": { "line": 237, "col": 9, "offset": 10892 },
      "end": { "line": 245, "col": 16, "offset": 11223 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/deserialization/html/InsecureDeserialization.html",
      "start": { "line": 26, "col": 13, "offset": 1222 },
      "end": { "line": 33, "col": 20, "offset": 1566 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "html.security.audit.missing-integrity.missing-integrity",
      "path": "/src/WebGoat/src/main/resources/lessons/hijacksession/html/HijackSession.html",
      "start": { "line": 5, "col": 1, "offset": 65 },
      "end": { "line": 6, "col": 69, "offset": 173 },
      "extra": {
        "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) youâ€™re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
        "metadata": {
          "category": "security",
          "technology": ["html"],
          "cwe": ["CWE-353: Missing Support for Integrity Check"],
          "owasp": ["A08:2021 - Software and Data Integrity Failures"],
          "confidence": "LOW",
          "references": [
            "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
          ],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cryptographic Issues"],
          "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
          "shortlink": "https://sg.run/krXA"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/hijacksession/templates/hijackform.html",
      "start": { "line": 3, "col": 3, "offset": 46 },
      "end": { "line": 22, "col": 10, "offset": 910 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/httpbasics/html/HttpBasics.html",
      "start": { "line": 26, "col": 6, "offset": 1569 },
      "end": { "line": 30, "col": 13, "offset": 1819 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/httpproxies/html/HttpProxies.html",
      "start": { "line": 25, "col": 13, "offset": 1049 },
      "end": { "line": 32, "col": 20, "offset": 1389 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/idor/html/IDOR.html",
      "start": { "line": 23, "col": 9, "offset": 1700 },
      "end": { "line": 37, "col": 16, "offset": 2306 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/idor/html/IDOR.html",
      "start": { "line": 81, "col": 9, "offset": 5420 },
      "end": { "line": 86, "col": 16, "offset": 5692 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/idor/html/IDOR.html",
      "start": { "line": 108, "col": 9, "offset": 7246 },
      "end": { "line": 114, "col": 16, "offset": 7651 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/insecurelogin/html/InsecureLogin.html",
      "start": { "line": 18, "col": 13, "offset": 959 },
      "end": { "line": 24, "col": 20, "offset": 1238 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/insecurelogin/html/InsecureLogin.html",
      "start": { "line": 26, "col": 13, "offset": 1275 },
      "end": { "line": 34, "col": 20, "offset": 1683 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "generic.secrets.security.detected-jwt-token.detected-jwt-token",
      "path": "/src/WebGoat/src/main/resources/lessons/jwt/documentation/JWT_decode.adoc",
      "start": { "line": 8, "col": 1, "offset": 189 },
      "end": { "line": 8, "col": 327, "offset": 515 },
      "extra": {
        "message": "JWT token detected",
        "metadata": {
          "source-rule-url": "https://github.com/Yelp/detect-secrets/blob/master/detect_secrets/plugins/jwt.py",
          "category": "security",
          "technology": ["secrets", "jwt"],
          "confidence": "LOW",
          "references": [
            "https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/"
          ],
          "cwe": ["CWE-321: Use of Hard-coded Cryptographic Key"],
          "owasp": ["A02:2021 - Cryptographic Failures"],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cryptographic Issues"],
          "source": "https://semgrep.dev/r/generic.secrets.security.detected-jwt-token.detected-jwt-token",
          "shortlink": "https://sg.run/05N5"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "generic.secrets.security.detected-jwt-token.detected-jwt-token",
      "path": "/src/WebGoat/src/main/resources/lessons/jwt/documentation/JWT_libraries.adoc",
      "start": { "line": 28, "col": 14, "offset": 346 },
      "end": { "line": 28, "col": 126, "offset": 458 },
      "extra": {
        "message": "JWT token detected",
        "metadata": {
          "source-rule-url": "https://github.com/Yelp/detect-secrets/blob/master/detect_secrets/plugins/jwt.py",
          "category": "security",
          "technology": ["secrets", "jwt"],
          "confidence": "LOW",
          "references": [
            "https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/"
          ],
          "cwe": ["CWE-321: Use of Hard-coded Cryptographic Key"],
          "owasp": ["A02:2021 - Cryptographic Failures"],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cryptographic Issues"],
          "source": "https://semgrep.dev/r/generic.secrets.security.detected-jwt-token.detected-jwt-token",
          "shortlink": "https://sg.run/05N5"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "generic.secrets.security.detected-jwt-token.detected-jwt-token",
      "path": "/src/WebGoat/src/main/resources/lessons/jwt/documentation/JWT_libraries.adoc",
      "start": { "line": 40, "col": 15, "offset": 717 },
      "end": { "line": 40, "col": 126, "offset": 828 },
      "extra": {
        "message": "JWT token detected",
        "metadata": {
          "source-rule-url": "https://github.com/Yelp/detect-secrets/blob/master/detect_secrets/plugins/jwt.py",
          "category": "security",
          "technology": ["secrets", "jwt"],
          "confidence": "LOW",
          "references": [
            "https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/"
          ],
          "cwe": ["CWE-321: Use of Hard-coded Cryptographic Key"],
          "owasp": ["A02:2021 - Cryptographic Failures"],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cryptographic Issues"],
          "source": "https://semgrep.dev/r/generic.secrets.security.detected-jwt-token.detected-jwt-token",
          "shortlink": "https://sg.run/05N5"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "generic.secrets.security.detected-jwt-token.detected-jwt-token",
      "path": "/src/WebGoat/src/main/resources/lessons/jwt/documentation/JWT_libraries.adoc",
      "start": { "line": 56, "col": 14, "offset": 1214 },
      "end": { "line": 56, "col": 125, "offset": 1325 },
      "extra": {
        "message": "JWT token detected",
        "metadata": {
          "source-rule-url": "https://github.com/Yelp/detect-secrets/blob/master/detect_secrets/plugins/jwt.py",
          "category": "security",
          "technology": ["secrets", "jwt"],
          "confidence": "LOW",
          "references": [
            "https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/"
          ],
          "cwe": ["CWE-321: Use of Hard-coded Cryptographic Key"],
          "owasp": ["A02:2021 - Cryptographic Failures"],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cryptographic Issues"],
          "source": "https://semgrep.dev/r/generic.secrets.security.detected-jwt-token.detected-jwt-token",
          "shortlink": "https://sg.run/05N5"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "generic.secrets.security.detected-jwt-token.detected-jwt-token",
      "path": "/src/WebGoat/src/main/resources/lessons/jwt/documentation/JWT_libraries_assignment.adoc",
      "start": { "line": 7, "col": 1, "offset": 152 },
      "end": { "line": 7, "col": 129, "offset": 280 },
      "extra": {
        "message": "JWT token detected",
        "metadata": {
          "source-rule-url": "https://github.com/Yelp/detect-secrets/blob/master/detect_secrets/plugins/jwt.py",
          "category": "security",
          "technology": ["secrets", "jwt"],
          "confidence": "LOW",
          "references": [
            "https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/"
          ],
          "cwe": ["CWE-321: Use of Hard-coded Cryptographic Key"],
          "owasp": ["A02:2021 - Cryptographic Failures"],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cryptographic Issues"],
          "source": "https://semgrep.dev/r/generic.secrets.security.detected-jwt-token.detected-jwt-token",
          "shortlink": "https://sg.run/05N5"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "generic.secrets.security.detected-jwt-token.detected-jwt-token",
      "path": "/src/WebGoat/src/main/resources/lessons/jwt/documentation/JWT_libraries_assignment2.adoc",
      "start": { "line": 7, "col": 1, "offset": 134 },
      "end": { "line": 7, "col": 149, "offset": 282 },
      "extra": {
        "message": "JWT token detected",
        "metadata": {
          "source-rule-url": "https://github.com/Yelp/detect-secrets/blob/master/detect_secrets/plugins/jwt.py",
          "category": "security",
          "technology": ["secrets", "jwt"],
          "confidence": "LOW",
          "references": [
            "https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/"
          ],
          "cwe": ["CWE-321: Use of Hard-coded Cryptographic Key"],
          "owasp": ["A02:2021 - Cryptographic Failures"],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cryptographic Issues"],
          "source": "https://semgrep.dev/r/generic.secrets.security.detected-jwt-token.detected-jwt-token",
          "shortlink": "https://sg.run/05N5"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "generic.secrets.security.detected-jwt-token.detected-jwt-token",
      "path": "/src/WebGoat/src/main/resources/lessons/jwt/documentation/JWT_libraries_solution.adoc",
      "start": { "line": 7, "col": 1, "offset": 244 },
      "end": { "line": 7, "col": 149, "offset": 392 },
      "extra": {
        "message": "JWT token detected",
        "metadata": {
          "source-rule-url": "https://github.com/Yelp/detect-secrets/blob/master/detect_secrets/plugins/jwt.py",
          "category": "security",
          "technology": ["secrets", "jwt"],
          "confidence": "LOW",
          "references": [
            "https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/"
          ],
          "cwe": ["CWE-321: Use of Hard-coded Cryptographic Key"],
          "owasp": ["A02:2021 - Cryptographic Failures"],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cryptographic Issues"],
          "source": "https://semgrep.dev/r/generic.secrets.security.detected-jwt-token.detected-jwt-token",
          "shortlink": "https://sg.run/05N5"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "generic.secrets.security.detected-jwt-token.detected-jwt-token",
      "path": "/src/WebGoat/src/main/resources/lessons/jwt/documentation/JWT_signing_solution.adoc",
      "start": { "line": 35, "col": 14, "offset": 1707 },
      "end": { "line": 35, "col": 99, "offset": 1792 },
      "extra": {
        "message": "JWT token detected",
        "metadata": {
          "source-rule-url": "https://github.com/Yelp/detect-secrets/blob/master/detect_secrets/plugins/jwt.py",
          "category": "security",
          "technology": ["secrets", "jwt"],
          "confidence": "LOW",
          "references": [
            "https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/"
          ],
          "cwe": ["CWE-321: Use of Hard-coded Cryptographic Key"],
          "owasp": ["A02:2021 - Cryptographic Failures"],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cryptographic Issues"],
          "source": "https://semgrep.dev/r/generic.secrets.security.detected-jwt-token.detected-jwt-token",
          "shortlink": "https://sg.run/05N5"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "generic.secrets.security.detected-jwt-token.detected-jwt-token",
      "path": "/src/WebGoat/src/main/resources/lessons/jwt/documentation/JWT_signing_solution.adoc",
      "start": { "line": 77, "col": 1, "offset": 2526 },
      "end": { "line": 77, "col": 109, "offset": 2634 },
      "extra": {
        "message": "JWT token detected",
        "metadata": {
          "source-rule-url": "https://github.com/Yelp/detect-secrets/blob/master/detect_secrets/plugins/jwt.py",
          "category": "security",
          "technology": ["secrets", "jwt"],
          "confidence": "LOW",
          "references": [
            "https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/"
          ],
          "cwe": ["CWE-321: Use of Hard-coded Cryptographic Key"],
          "owasp": ["A02:2021 - Cryptographic Failures"],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cryptographic Issues"],
          "source": "https://semgrep.dev/r/generic.secrets.security.detected-jwt-token.detected-jwt-token",
          "shortlink": "https://sg.run/05N5"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/jwt/html/JWT.html",
      "start": { "line": 20, "col": 9, "offset": 767 },
      "end": { "line": 35, "col": 16, "offset": 1461 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/jwt/html/JWT.html",
      "start": { "line": 125, "col": 13, "offset": 6140 },
      "end": { "line": 132, "col": 20, "offset": 6501 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/jwt/html/JWT.html",
      "start": { "line": 158, "col": 9, "offset": 7462 },
      "end": { "line": 171, "col": 16, "offset": 8198 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "generic.secrets.security.detected-jwt-token.detected-jwt-token",
      "path": "/src/WebGoat/src/main/resources/lessons/jwt/html/JWT.html",
      "start": { "line": 323, "col": 50, "offset": 16590 },
      "end": { "line": 323, "col": 484, "offset": 17024 },
      "extra": {
        "message": "JWT token detected",
        "metadata": {
          "source-rule-url": "https://github.com/Yelp/detect-secrets/blob/master/detect_secrets/plugins/jwt.py",
          "category": "security",
          "technology": ["secrets", "jwt"],
          "confidence": "LOW",
          "references": [
            "https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/"
          ],
          "cwe": ["CWE-321: Use of Hard-coded Cryptographic Key"],
          "owasp": ["A02:2021 - Cryptographic Failures"],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cryptographic Issues"],
          "source": "https://semgrep.dev/r/generic.secrets.security.detected-jwt-token.detected-jwt-token",
          "shortlink": "https://sg.run/05N5"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "generic.secrets.security.detected-jwt-token.detected-jwt-token",
      "path": "/src/WebGoat/src/main/resources/lessons/jwt/html/JWT.html",
      "start": { "line": 389, "col": 50, "offset": 20626 },
      "end": { "line": 389, "col": 401, "offset": 20977 },
      "extra": {
        "message": "JWT token detected",
        "metadata": {
          "source-rule-url": "https://github.com/Yelp/detect-secrets/blob/master/detect_secrets/plugins/jwt.py",
          "category": "security",
          "technology": ["secrets", "jwt"],
          "confidence": "LOW",
          "references": [
            "https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/"
          ],
          "cwe": ["CWE-321: Use of Hard-coded Cryptographic Key"],
          "owasp": ["A02:2021 - Cryptographic Failures"],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cryptographic Issues"],
          "source": "https://semgrep.dev/r/generic.secrets.security.detected-jwt-token.detected-jwt-token",
          "shortlink": "https://sg.run/05N5"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "generic.secrets.security.detected-jwt-token.detected-jwt-token",
      "path": "/src/WebGoat/src/main/resources/lessons/jwt/images/logs.txt",
      "start": { "line": 2, "col": 82, "offset": 83 },
      "end": { "line": 2, "col": 190, "offset": 191 },
      "extra": {
        "message": "JWT token detected",
        "metadata": {
          "source-rule-url": "https://github.com/Yelp/detect-secrets/blob/master/detect_secrets/plugins/jwt.py",
          "category": "security",
          "technology": ["secrets", "jwt"],
          "confidence": "LOW",
          "references": [
            "https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/"
          ],
          "cwe": ["CWE-321: Use of Hard-coded Cryptographic Key"],
          "owasp": ["A02:2021 - Cryptographic Failures"],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "MEDIUM",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cryptographic Issues"],
          "source": "https://semgrep.dev/r/generic.secrets.security.detected-jwt-token.detected-jwt-token",
          "shortlink": "https://sg.run/05N5"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/lessontemplate/html/LessonTemplate.html",
      "start": { "line": 48, "col": 13, "offset": 3399 },
      "end": { "line": 61, "col": 20, "offset": 4061 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/logging/html/LogSpoofing.html",
      "start": { "line": 17, "col": 9, "offset": 822 },
      "end": { "line": 25, "col": 16, "offset": 1210 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/logging/html/LogSpoofing.html",
      "start": { "line": 39, "col": 9, "offset": 1979 },
      "end": { "line": 47, "col": 16, "offset": 2367 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/missingac/html/MissingFunctionAC.html",
      "start": { "line": 53, "col": 9, "offset": 2772 },
      "end": { "line": 62, "col": 16, "offset": 3193 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/missingac/html/MissingFunctionAC.html",
      "start": { "line": 76, "col": 9, "offset": 3622 },
      "end": { "line": 84, "col": 16, "offset": 3952 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/missingac/html/MissingFunctionAC.html",
      "start": { "line": 98, "col": 9, "offset": 4387 },
      "end": { "line": 106, "col": 16, "offset": 4721 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/passwordreset/html/PasswordReset.html",
      "start": { "line": 144, "col": 9, "offset": 7415 },
      "end": { "line": 164, "col": 16, "offset": 8797 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/passwordreset/templates/password_reset.html",
      "start": { "line": 12, "col": 13, "offset": 416 },
      "end": { "line": 26, "col": 20, "offset": 1509 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/pathtraversal/html/PathTraversal.html",
      "start": { "line": 192, "col": 13, "offset": 9519 },
      "end": { "line": 205, "col": 20, "offset": 10379 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/securepasswords/html/SecurePasswords.html",
      "start": { "line": 21, "col": 9, "offset": 887 },
      "end": { "line": 35, "col": 16, "offset": 1676 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "html.security.audit.missing-integrity.missing-integrity",
      "path": "/src/WebGoat/src/main/resources/lessons/spoofcookie/html/SpoofCookie.html",
      "start": { "line": 5, "col": 1, "offset": 65 },
      "end": { "line": 6, "col": 69, "offset": 173 },
      "extra": {
        "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) youâ€™re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
        "metadata": {
          "category": "security",
          "technology": ["html"],
          "cwe": ["CWE-353: Missing Support for Integrity Check"],
          "owasp": ["A08:2021 - Software and Data Integrity Failures"],
          "confidence": "LOW",
          "references": [
            "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
          ],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cryptographic Issues"],
          "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
          "shortlink": "https://sg.run/krXA"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/sqlinjection/html/SqlInjection.html",
      "start": { "line": 16, "col": 9, "offset": 670 },
      "end": { "line": 29, "col": 16, "offset": 1252 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/sqlinjection/html/SqlInjection.html",
      "start": { "line": 40, "col": 9, "offset": 1697 },
      "end": { "line": 53, "col": 16, "offset": 2279 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/sqlinjection/html/SqlInjection.html",
      "start": { "line": 64, "col": 9, "offset": 2724 },
      "end": { "line": 77, "col": 16, "offset": 3306 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/sqlinjection/html/SqlInjection.html",
      "start": { "line": 88, "col": 9, "offset": 3751 },
      "end": { "line": 101, "col": 16, "offset": 4333 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/sqlinjection/html/SqlInjection.html",
      "start": { "line": 189, "col": 9, "offset": 8159 },
      "end": { "line": 207, "col": 16, "offset": 8914 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/sqlinjection/html/SqlInjection.html",
      "start": { "line": 217, "col": 9, "offset": 9344 },
      "end": { "line": 234, "col": 16, "offset": 10107 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/sqlinjection/html/SqlInjection.html",
      "start": { "line": 245, "col": 9, "offset": 10553 },
      "end": { "line": 262, "col": 16, "offset": 11316 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/sqlinjection/html/SqlInjection.html",
      "start": { "line": 274, "col": 9, "offset": 11765 },
      "end": { "line": 287, "col": 16, "offset": 12344 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/sqlinjection/html/SqlInjectionAdvanced.html",
      "start": { "line": 21, "col": 9, "offset": 824 },
      "end": { "line": 33, "col": 16, "offset": 1357 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/sqlinjection/html/SqlInjectionAdvanced.html",
      "start": { "line": 34, "col": 9, "offset": 1367 },
      "end": { "line": 46, "col": 16, "offset": 1908 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/sqlinjection/html/SqlInjectionAdvanced.html",
      "start": { "line": 169, "col": 17, "offset": 9669 },
      "end": { "line": 176, "col": 24, "offset": 10072 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/sqlinjection/html/SqlInjectionMitigations.html",
      "start": { "line": 26, "col": 9, "offset": 1121 },
      "end": { "line": 36, "col": 16, "offset": 2011 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/sqlinjection/html/SqlInjectionMitigations.html",
      "start": { "line": 45, "col": 9, "offset": 2392 },
      "end": { "line": 55, "col": 16, "offset": 3212 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/sqlinjection/html/SqlInjectionMitigations.html",
      "start": { "line": 73, "col": 9, "offset": 4003 },
      "end": { "line": 86, "col": 16, "offset": 4615 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/sqlinjection/html/SqlInjectionMitigations.html",
      "start": { "line": 96, "col": 9, "offset": 5034 },
      "end": { "line": 109, "col": 16, "offset": 5668 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/sqlinjection/html/SqlInjectionMitigations.html",
      "start": { "line": 176, "col": 9, "offset": 9269 },
      "end": { "line": 187, "col": 16, "offset": 9911 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/ssrf/html/SSRF.html",
      "start": { "line": 13, "col": 13, "offset": 529 },
      "end": { "line": 25, "col": 20, "offset": 1073 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/ssrf/html/SSRF.html",
      "start": { "line": 35, "col": 13, "offset": 1507 },
      "end": { "line": 47, "col": 20, "offset": 2035 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "html.security.audit.missing-integrity.missing-integrity",
      "path": "/src/WebGoat/src/main/resources/lessons/vulnerablecomponents/html/VulnerableComponents.html",
      "start": { "line": 5, "col": 5, "offset": 69 },
      "end": { "line": 5, "col": 111, "offset": 175 },
      "extra": {
        "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) youâ€™re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
        "metadata": {
          "category": "security",
          "technology": ["html"],
          "cwe": ["CWE-353: Missing Support for Integrity Check"],
          "owasp": ["A08:2021 - Software and Data Integrity Failures"],
          "confidence": "LOW",
          "references": [
            "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
          ],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cryptographic Issues"],
          "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
          "shortlink": "https://sg.run/krXA"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/vulnerablecomponents/html/VulnerableComponents.html",
      "start": { "line": 104, "col": 6, "offset": 5430 },
      "end": { "line": 113, "col": 13, "offset": 5802 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/webwolfintroduction/html/WebWolfIntroduction.html",
      "start": { "line": 19, "col": 9, "offset": 785 },
      "end": { "line": 36, "col": 16, "offset": 1638 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/webwolfintroduction/html/WebWolfIntroduction.html",
      "start": { "line": 40, "col": 9, "offset": 1792 },
      "end": { "line": 59, "col": 16, "offset": 2716 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/webwolfintroduction/html/WebWolfIntroduction.html",
      "start": { "line": 77, "col": 9, "offset": 3376 },
      "end": { "line": 94, "col": 16, "offset": 4188 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/xss/html/CrossSiteScripting.html",
      "start": { "line": 13, "col": 4, "offset": 433 },
      "end": { "line": 24, "col": 11, "offset": 824 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/xss/html/CrossSiteScripting.html",
      "start": { "line": 134, "col": 3, "offset": 4698 },
      "end": { "line": 139, "col": 10, "offset": 4970 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/xss/html/CrossSiteScripting.html",
      "start": { "line": 149, "col": 3, "offset": 5352 },
      "end": { "line": 154, "col": 10, "offset": 5628 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/xss/html/CrossSiteScripting.html",
      "start": { "line": 169, "col": 4, "offset": 6326 },
      "end": { "line": 175, "col": 11, "offset": 6615 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/xss/html/CrossSiteScriptingMitigation.html",
      "start": { "line": 24, "col": 3, "offset": 958 },
      "end": { "line": 34, "col": 10, "offset": 1670 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/xss/html/CrossSiteScriptingMitigation.html",
      "start": { "line": 44, "col": 3, "offset": 2053 },
      "end": { "line": 54, "col": 10, "offset": 2769 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/lessons/xss/html/CrossSiteScriptingStored.html",
      "start": { "line": 68, "col": 3, "offset": 2247 },
      "end": { "line": 73, "col": 10, "offset": 2536 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
      "path": "/src/WebGoat/src/main/resources/webgoat/static/js/libs/backbone-min.js",
      "start": { "line": 1, "col": 19897, "offset": 19896 },
      "end": { "line": 1, "col": 19937, "offset": 19936 },
      "extra": {
        "message": "RegExp() called with a `t` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
        "metadata": {
          "owasp": [
            "A05:2021 - Security Misconfiguration",
            "A06:2017 - Security Misconfiguration"
          ],
          "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"],
          "references": [
            "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
          ],
          "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
          "category": "security",
          "technology": ["javascript"],
          "subcategory": ["vuln"],
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Denial-of-Service (DoS)"],
          "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
          "shortlink": "https://sg.run/gr65"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
      "path": "/src/WebGoat/src/main/resources/webgoat/static/js/libs/mode-java.js",
      "start": { "line": 573, "col": 35, "offset": 24938 },
      "end": { "line": 575, "col": 10, "offset": 25051 },
      "extra": {
        "message": "RegExp() called with a `commentRegex` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
        "metadata": {
          "owasp": [
            "A05:2021 - Security Misconfiguration",
            "A06:2017 - Security Misconfiguration"
          ],
          "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"],
          "references": [
            "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
          ],
          "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
          "category": "security",
          "technology": ["javascript"],
          "subcategory": ["vuln"],
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Denial-of-Service (DoS)"],
          "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
          "shortlink": "https://sg.run/gr65"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
      "path": "/src/WebGoat/src/main/resources/webgoat/static/js/libs/mode-java.js",
      "start": { "line": 576, "col": 34, "offset": 25087 },
      "end": { "line": 578, "col": 10, "offset": 25197 },
      "extra": {
        "message": "RegExp() called with a `commentRegex` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
        "metadata": {
          "owasp": [
            "A05:2021 - Security Misconfiguration",
            "A06:2017 - Security Misconfiguration"
          ],
          "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"],
          "references": [
            "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
          ],
          "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
          "category": "security",
          "technology": ["javascript"],
          "subcategory": ["vuln"],
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Denial-of-Service (DoS)"],
          "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
          "shortlink": "https://sg.run/gr65"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop",
      "path": "/src/WebGoat/src/main/resources/webgoat/static/js/libs/underscore-min.js",
      "start": { "line": 6, "col": 1551, "offset": 2006 },
      "end": { "line": 6, "col": 1560, "offset": 2015 },
      "extra": {
        "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.",
        "metadata": {
          "cwe": [
            "CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"
          ],
          "category": "security",
          "references": [
            "https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"
          ],
          "technology": ["typescript"],
          "owasp": ["A08:2021 - Software and Data Integrity Failures"],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "LOW",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Mass Assignment"],
          "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop",
          "shortlink": "https://sg.run/w1DB"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
      "path": "/src/WebGoat/src/main/resources/webgoat/static/js/libs/underscore-min.js",
      "start": { "line": 6, "col": 10235, "offset": 10690 },
      "end": { "line": 6, "col": 10244, "offset": 10699 },
      "extra": {
        "message": "RegExp() called with a `r` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
        "metadata": {
          "owasp": [
            "A05:2021 - Security Misconfiguration",
            "A06:2017 - Security Misconfiguration"
          ],
          "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"],
          "references": [
            "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
          ],
          "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
          "category": "security",
          "technology": ["javascript"],
          "subcategory": ["vuln"],
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Denial-of-Service (DoS)"],
          "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
          "shortlink": "https://sg.run/gr65"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
      "path": "/src/WebGoat/src/main/resources/webgoat/static/js/libs/underscore-min.js",
      "start": { "line": 6, "col": 10247, "offset": 10702 },
      "end": { "line": 6, "col": 10260, "offset": 10715 },
      "extra": {
        "message": "RegExp() called with a `r` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
        "metadata": {
          "owasp": [
            "A05:2021 - Security Misconfiguration",
            "A06:2017 - Security Misconfiguration"
          ],
          "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"],
          "references": [
            "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
          ],
          "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
          "category": "security",
          "technology": ["javascript"],
          "subcategory": ["vuln"],
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Denial-of-Service (DoS)"],
          "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
          "shortlink": "https://sg.run/gr65"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop",
      "path": "/src/WebGoat/src/main/resources/webgoat/static/js/libs/underscore-min.js",
      "start": { "line": 6, "col": 15645, "offset": 16100 },
      "end": { "line": 6, "col": 15651, "offset": 16106 },
      "extra": {
        "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.",
        "metadata": {
          "cwe": [
            "CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"
          ],
          "category": "security",
          "references": [
            "https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"
          ],
          "technology": ["typescript"],
          "owasp": ["A08:2021 - Software and Data Integrity Failures"],
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "LOW",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Mass Assignment"],
          "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop",
          "shortlink": "https://sg.run/w1DB"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
      "path": "/src/WebGoat/src/main/resources/webgoat/static/js/libs/underscore-min.js",
      "start": { "line": 6, "col": 16339, "offset": 16794 },
      "end": { "line": 6, "col": 16440, "offset": 16895 },
      "extra": {
        "message": "RegExp() called with a `n` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
        "metadata": {
          "owasp": [
            "A05:2021 - Security Misconfiguration",
            "A06:2017 - Security Misconfiguration"
          ],
          "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"],
          "references": [
            "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
          ],
          "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
          "category": "security",
          "technology": ["javascript"],
          "subcategory": ["vuln"],
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Denial-of-Service (DoS)"],
          "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
          "shortlink": "https://sg.run/gr65"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
      "path": "/src/WebGoat/src/main/resources/webgoat/static/js/libs/underscore-min.js",
      "start": { "line": 6, "col": 16339, "offset": 16794 },
      "end": { "line": 6, "col": 16440, "offset": 16895 },
      "extra": {
        "message": "RegExp() called with a `r` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
        "metadata": {
          "owasp": [
            "A05:2021 - Security Misconfiguration",
            "A06:2017 - Security Misconfiguration"
          ],
          "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"],
          "references": [
            "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
          ],
          "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
          "category": "security",
          "technology": ["javascript"],
          "subcategory": ["vuln"],
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Denial-of-Service (DoS)"],
          "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
          "shortlink": "https://sg.run/gr65"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.browser.security.insecure-document-method.insecure-document-method",
      "path": "/src/WebGoat/src/main/resources/webgoat/static/js/quiz.js",
      "start": { "line": 34, "col": 13, "offset": 2334 },
      "end": { "line": 34, "col": 69, "offset": 2390 },
      "extra": {
        "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",
        "metadata": {
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "category": "security",
          "technology": ["browser"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "LOW",
          "confidence": "LOW",
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site-Scripting (XSS)"],
          "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method",
          "shortlink": "https://sg.run/LwA9"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
      "path": "/src/WebGoat/src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js",
      "start": { "line": 843, "col": 21, "offset": 28145 },
      "end": { "line": 843, "col": 66, "offset": 28190 },
      "extra": {
        "message": "RegExp() called with a `nodeTypes` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
        "metadata": {
          "owasp": [
            "A05:2021 - Security Misconfiguration",
            "A06:2017 - Security Misconfiguration"
          ],
          "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"],
          "references": [
            "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
          ],
          "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
          "category": "security",
          "technology": ["javascript"],
          "subcategory": ["vuln"],
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Denial-of-Service (DoS)"],
          "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
          "shortlink": "https://sg.run/gr65"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.browser.security.insecure-document-method.insecure-document-method",
      "path": "/src/WebGoat/src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js",
      "start": { "line": 1189, "col": 13, "offset": 41110 },
      "end": { "line": 1189, "col": 40, "offset": 41137 },
      "extra": {
        "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",
        "metadata": {
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "category": "security",
          "technology": ["browser"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "LOW",
          "confidence": "LOW",
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site-Scripting (XSS)"],
          "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method",
          "shortlink": "https://sg.run/LwA9"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.browser.security.insecure-document-method.insecure-document-method",
      "path": "/src/WebGoat/src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js",
      "start": { "line": 1206, "col": 13, "offset": 41901 },
      "end": { "line": 1206, "col": 40, "offset": 41928 },
      "extra": {
        "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",
        "metadata": {
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "category": "security",
          "technology": ["browser"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "LOW",
          "confidence": "LOW",
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site-Scripting (XSS)"],
          "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method",
          "shortlink": "https://sg.run/LwA9"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.browser.security.insecure-document-method.insecure-document-method",
      "path": "/src/WebGoat/src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js",
      "start": { "line": 4011, "col": 5, "offset": 152515 },
      "end": { "line": 4011, "col": 82, "offset": 152592 },
      "extra": {
        "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",
        "metadata": {
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "category": "security",
          "technology": ["browser"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "LOW",
          "confidence": "LOW",
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site-Scripting (XSS)"],
          "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method",
          "shortlink": "https://sg.run/LwA9"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
      "path": "/src/WebGoat/src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js",
      "start": { "line": 4079, "col": 51, "offset": 154458 },
      "end": { "line": 4079, "col": 98, "offset": 154505 },
      "extra": {
        "message": "RegExp() called with a `className` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
        "metadata": {
          "owasp": [
            "A05:2021 - Security Misconfiguration",
            "A06:2017 - Security Misconfiguration"
          ],
          "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"],
          "references": [
            "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
          ],
          "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
          "category": "security",
          "technology": ["javascript"],
          "subcategory": ["vuln"],
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Denial-of-Service (DoS)"],
          "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
          "shortlink": "https://sg.run/gr65"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
      "path": "/src/WebGoat/src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js",
      "start": { "line": 4088, "col": 78, "offset": 154787 },
      "end": { "line": 4088, "col": 123, "offset": 154832 },
      "extra": {
        "message": "RegExp() called with a `className` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
        "metadata": {
          "owasp": [
            "A05:2021 - Security Misconfiguration",
            "A06:2017 - Security Misconfiguration"
          ],
          "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"],
          "references": [
            "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
          ],
          "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
          "category": "security",
          "technology": ["javascript"],
          "subcategory": ["vuln"],
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "confidence": "LOW",
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Denial-of-Service (DoS)"],
          "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
          "shortlink": "https://sg.run/gr65"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.browser.security.insecure-document-method.insecure-document-method",
      "path": "/src/WebGoat/src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js",
      "start": { "line": 4354, "col": 11, "offset": 164267 },
      "end": { "line": 4354, "col": 40, "offset": 164296 },
      "extra": {
        "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",
        "metadata": {
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "category": "security",
          "technology": ["browser"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "LOW",
          "confidence": "LOW",
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site-Scripting (XSS)"],
          "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method",
          "shortlink": "https://sg.run/LwA9"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.browser.security.insecure-document-method.insecure-document-method",
      "path": "/src/WebGoat/src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js",
      "start": { "line": 4391, "col": 7, "offset": 165612 },
      "end": { "line": 4391, "col": 36, "offset": 165641 },
      "extra": {
        "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",
        "metadata": {
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "category": "security",
          "technology": ["browser"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "LOW",
          "confidence": "LOW",
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site-Scripting (XSS)"],
          "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method",
          "shortlink": "https://sg.run/LwA9"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.browser.security.insecure-document-method.insecure-document-method",
      "path": "/src/WebGoat/src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js",
      "start": { "line": 5999, "col": 15, "offset": 220120 },
      "end": { "line": 5999, "col": 58, "offset": 220163 },
      "extra": {
        "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",
        "metadata": {
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "category": "security",
          "technology": ["browser"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "LOW",
          "confidence": "LOW",
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site-Scripting (XSS)"],
          "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method",
          "shortlink": "https://sg.run/LwA9"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.browser.security.insecure-document-method.insecure-document-method",
      "path": "/src/WebGoat/src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js",
      "start": { "line": 6202, "col": 13, "offset": 226980 },
      "end": { "line": 6202, "col": 59, "offset": 227026 },
      "extra": {
        "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",
        "metadata": {
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "category": "security",
          "technology": ["browser"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "LOW",
          "confidence": "LOW",
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site-Scripting (XSS)"],
          "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method",
          "shortlink": "https://sg.run/LwA9"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.browser.security.insecure-document-method.insecure-document-method",
      "path": "/src/WebGoat/src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js",
      "start": { "line": 6695, "col": 15, "offset": 243370 },
      "end": { "line": 6695, "col": 58, "offset": 243413 },
      "extra": {
        "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",
        "metadata": {
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "category": "security",
          "technology": ["browser"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "LOW",
          "confidence": "LOW",
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site-Scripting (XSS)"],
          "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method",
          "shortlink": "https://sg.run/LwA9"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.browser.security.insecure-document-method.insecure-document-method",
      "path": "/src/WebGoat/src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js",
      "start": { "line": 7940, "col": 7, "offset": 283069 },
      "end": { "line": 7940, "col": 110, "offset": 283172 },
      "extra": {
        "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",
        "metadata": {
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "category": "security",
          "technology": ["browser"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "LOW",
          "confidence": "LOW",
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site-Scripting (XSS)"],
          "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method",
          "shortlink": "https://sg.run/LwA9"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.browser.security.insecure-document-method.insecure-document-method",
      "path": "/src/WebGoat/src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js",
      "start": { "line": 7962, "col": 7, "offset": 283805 },
      "end": { "line": 7962, "col": 37, "offset": 283835 },
      "extra": {
        "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",
        "metadata": {
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "category": "security",
          "technology": ["browser"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "LOW",
          "confidence": "LOW",
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site-Scripting (XSS)"],
          "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method",
          "shortlink": "https://sg.run/LwA9"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "javascript.browser.security.insecure-document-method.insecure-document-method",
      "path": "/src/WebGoat/src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js",
      "start": { "line": 8056, "col": 7, "offset": 286886 },
      "end": { "line": 8056, "col": 62, "offset": 286941 },
      "extra": {
        "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",
        "metadata": {
          "cwe": [
            "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
          ],
          "owasp": [
            "A07:2017 - Cross-Site Scripting (XSS)",
            "A03:2021 - Injection"
          ],
          "category": "security",
          "technology": ["browser"],
          "cwe2022-top25": true,
          "cwe2021-top25": true,
          "subcategory": ["audit"],
          "likelihood": "LOW",
          "impact": "LOW",
          "confidence": "LOW",
          "references": ["https://owasp.org/Top10/A03_2021-Injection"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site-Scripting (XSS)"],
          "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method",
          "shortlink": "https://sg.run/LwA9"
        },
        "severity": "ERROR",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/webgoat/templates/login.html",
      "start": { "line": 31, "col": 13, "offset": 1271 },
      "end": { "line": 44, "col": 20, "offset": 2263 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    },
    {
      "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
      "path": "/src/WebGoat/src/main/resources/webwolf/templates/files.html",
      "start": { "line": 32, "col": 13, "offset": 1104 },
      "end": { "line": 41, "col": 20, "offset": 1574 },
      "extra": {
        "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
        "metadata": {
          "category": "security",
          "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
          "references": ["https://docs.djangoproject.com/en/4.2/howto/csrf/"],
          "confidence": "MEDIUM",
          "likelihood": "MEDIUM",
          "impact": "MEDIUM",
          "subcategory": ["audit"],
          "technology": ["django"],
          "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license",
          "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"],
          "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
          "shortlink": "https://sg.run/N0Bp"
        },
        "severity": "WARNING",
        "fingerprint": "requires login",
        "lines": "requires login",
        "validation_state": "NO_VALIDATOR",
        "engine_kind": "OSS"
      }
    }
  ],
  "errors": [
    {
      "code": 3,
      "level": "warn",
      "type": [
        "PartialParsing",
        [
          {
            "path": "/src/WebGoat/mvnw",
            "start": { "line": 220, "col": 7, "offset": 0 },
            "end": { "line": 221, "col": 11, "offset": 65 }
          }
        ]
      ],
      "message": "Syntax error at line /src/WebGoat/mvnw:220:\n `case \"$key\" in (wrapperUrl) jarUrl=\"$value\"; break ;;\r\n      esac` was unexpected",
      "path": "/src/WebGoat/mvnw",
      "spans": [
        {
          "file": "/src/WebGoat/mvnw",
          "start": { "line": 220, "col": 7, "offset": 0 },
          "end": { "line": 221, "col": 11, "offset": 65 }
        }
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "type": [
        "PartialParsing",
        [
          {
            "path": "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/templates/lesson_overview.html",
            "start": { "line": 2, "col": 5, "offset": 0 },
            "end": { "line": 2, "col": 53, "offset": 48 }
          },
          {
            "path": "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/templates/lesson_overview.html",
            "start": { "line": 3, "col": 36, "offset": 0 },
            "end": { "line": 3, "col": 39, "offset": 3 }
          },
          {
            "path": "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/templates/lesson_overview.html",
            "start": { "line": 3, "col": 70, "offset": 0 },
            "end": { "line": 3, "col": 104, "offset": 34 }
          },
          {
            "path": "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/templates/lesson_overview.html",
            "start": { "line": 3, "col": 119, "offset": 0 },
            "end": { "line": 3, "col": 144, "offset": 25 }
          },
          {
            "path": "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/templates/lesson_overview.html",
            "start": { "line": 4, "col": 5, "offset": 0 },
            "end": { "line": 4, "col": 13, "offset": 8 }
          }
        ]
      ],
      "message": "Syntax error at line /src/WebGoat/src/main/resources/webgoat/static/js/goatApp/templates/lesson_overview.html:2:\n `<% _.each(assignments, function(assignment) { %>` was unexpected",
      "path": "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/templates/lesson_overview.html",
      "spans": [
        {
          "file": "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/templates/lesson_overview.html",
          "start": { "line": 2, "col": 5, "offset": 0 },
          "end": { "line": 2, "col": 53, "offset": 48 }
        },
        {
          "file": "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/templates/lesson_overview.html",
          "start": { "line": 3, "col": 36, "offset": 0 },
          "end": { "line": 3, "col": 39, "offset": 3 }
        },
        {
          "file": "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/templates/lesson_overview.html",
          "start": { "line": 3, "col": 70, "offset": 0 },
          "end": { "line": 3, "col": 104, "offset": 34 }
        },
        {
          "file": "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/templates/lesson_overview.html",
          "start": { "line": 3, "col": 119, "offset": 0 },
          "end": { "line": 3, "col": 144, "offset": 25 }
        },
        {
          "file": "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/templates/lesson_overview.html",
          "start": { "line": 4, "col": 5, "offset": 0 },
          "end": { "line": 4, "col": 13, "offset": 8 }
        }
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "type": [
        "PartialParsing",
        [
          {
            "path": "/src/WebGoat/.github/workflows/release.yml",
            "start": { "line": 27, "col": 43, "offset": 581 },
            "end": { "line": 27, "col": 60, "offset": 598 }
          },
          {
            "path": "/src/WebGoat/.github/workflows/release.yml",
            "start": { "line": 28, "col": 23, "offset": 581 },
            "end": { "line": 28, "col": 26, "offset": 584 }
          }
        ]
      ],
      "message": "Syntax error at line /src/WebGoat/.github/workflows/release.yml:27:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `{ github.ref_name` was unexpected",
      "path": "/src/WebGoat/.github/workflows/release.yml",
      "spans": [
        {
          "file": "/src/WebGoat/.github/workflows/release.yml",
          "start": { "line": 27, "col": 43, "offset": 581 },
          "end": { "line": 27, "col": 60, "offset": 598 }
        },
        {
          "file": "/src/WebGoat/.github/workflows/release.yml",
          "start": { "line": 28, "col": 23, "offset": 581 },
          "end": { "line": 28, "col": 26, "offset": 584 }
        }
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "type": [
        "PartialParsing",
        [
          {
            "path": "/src/WebGoat/.github/workflows/release.yml",
            "start": { "line": 32, "col": 68, "offset": 843 },
            "end": { "line": 32, "col": 71, "offset": 846 }
          }
        ]
      ],
      "message": "Syntax error at line /src/WebGoat/.github/workflows/release.yml:32:\n When parsing a snippet as Bash for metavariable-pattern in rule 'yaml.github-actions.security.curl-eval.curl-eval', `${{` was unexpected",
      "path": "/src/WebGoat/.github/workflows/release.yml",
      "spans": [
        {
          "file": "/src/WebGoat/.github/workflows/release.yml",
          "start": { "line": 32, "col": 68, "offset": 843 },
          "end": { "line": 32, "col": 71, "offset": 846 }
        }
      ]
    },
    {
      "code": 2,
      "level": "warn",
      "type": "Timeout",
      "rule_id": "javascript.angular.security.detect-angular-element-taint.detect-angular-element-taint",
      "message": "Timeout when running javascript.angular.security.detect-angular-element-taint.detect-angular-element-taint on /src/WebGoat/src/main/resources/webgoat/static/js/libs/ace.js:\n ",
      "path": "/src/WebGoat/src/main/resources/webgoat/static/js/libs/ace.js"
    },
    {
      "code": 2,
      "level": "warn",
      "type": "Timeout",
      "rule_id": "javascript.express.security.audit.express-ssrf.express-ssrf",
      "message": "Timeout when running javascript.express.security.audit.express-ssrf.express-ssrf on /src/WebGoat/src/main/resources/webgoat/static/js/libs/ace.js:\n ",
      "path": "/src/WebGoat/src/main/resources/webgoat/static/js/libs/ace.js"
    },
    {
      "code": 2,
      "level": "warn",
      "type": "Timeout",
      "rule_id": "javascript.express.security.express-insecure-template-usage.express-insecure-template-usage",
      "message": "Timeout when running javascript.express.security.express-insecure-template-usage.express-insecure-template-usage on /src/WebGoat/src/main/resources/webgoat/static/js/libs/ace.js:\n ",
      "path": "/src/WebGoat/src/main/resources/webgoat/static/js/libs/ace.js"
    },
    {
      "code": 3,
      "level": "warn",
      "type": [
        "PartialParsing",
        [
          {
            "path": "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/templates/paging_controls.html",
            "start": { "line": 4, "col": 9, "offset": 0 },
            "end": { "line": 5, "col": 60, "offset": 98 }
          },
          {
            "path": "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/templates/paging_controls.html",
            "start": { "line": 7, "col": 13, "offset": 0 },
            "end": { "line": 7, "col": 55, "offset": 42 }
          },
          {
            "path": "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/templates/paging_controls.html",
            "start": { "line": 8, "col": 95, "offset": 0 },
            "end": { "line": 8, "col": 107, "offset": 12 }
          },
          {
            "path": "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/templates/paging_controls.html",
            "start": { "line": 9, "col": 13, "offset": 0 },
            "end": { "line": 9, "col": 27, "offset": 14 }
          },
          {
            "path": "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/templates/paging_controls.html",
            "start": { "line": 10, "col": 73, "offset": 0 },
            "end": { "line": 10, "col": 85, "offset": 12 }
          },
          {
            "path": "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/templates/paging_controls.html",
            "start": { "line": 11, "col": 13, "offset": 0 },
            "end": { "line": 11, "col": 20, "offset": 7 }
          },
          {
            "path": "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/templates/paging_controls.html",
            "start": { "line": 13, "col": 9, "offset": 0 },
            "end": { "line": 13, "col": 18, "offset": 9 }
          }
        ]
      ],
      "message": "Syntax error at line /src/WebGoat/src/main/resources/webgoat/static/js/goatApp/templates/paging_controls.html:4:\n `<% var baseUrl = overview.baseUrl; %>\r\n        <% _.each(overview.pages, function(page,index) { %>` was unexpected",
      "path": "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/templates/paging_controls.html",
      "spans": [
        {
          "file": "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/templates/paging_controls.html",
          "start": { "line": 4, "col": 9, "offset": 0 },
          "end": { "line": 5, "col": 60, "offset": 98 }
        },
        {
          "file": "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/templates/paging_controls.html",
          "start": { "line": 7, "col": 13, "offset": 0 },
          "end": { "line": 7, "col": 55, "offset": 42 }
        },
        {
          "file": "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/templates/paging_controls.html",
          "start": { "line": 8, "col": 95, "offset": 0 },
          "end": { "line": 8, "col": 107, "offset": 12 }
        },
        {
          "file": "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/templates/paging_controls.html",
          "start": { "line": 9, "col": 13, "offset": 0 },
          "end": { "line": 9, "col": 27, "offset": 14 }
        },
        {
          "file": "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/templates/paging_controls.html",
          "start": { "line": 10, "col": 73, "offset": 0 },
          "end": { "line": 10, "col": 85, "offset": 12 }
        },
        {
          "file": "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/templates/paging_controls.html",
          "start": { "line": 11, "col": 13, "offset": 0 },
          "end": { "line": 11, "col": 20, "offset": 7 }
        },
        {
          "file": "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/templates/paging_controls.html",
          "start": { "line": 13, "col": 9, "offset": 0 },
          "end": { "line": 13, "col": 18, "offset": 9 }
        }
      ]
    },
    {
      "code": 3,
      "level": "warn",
      "type": [
        "PartialParsing",
        [
          {
            "path": "/src/WebGoat/Dockerfile",
            "start": { "line": 8, "col": 11, "offset": 0 },
            "end": { "line": 8, "col": 12, "offset": 1 }
          },
          {
            "path": "/src/WebGoat/Dockerfile",
            "start": { "line": 8, "col": 15, "offset": 0 },
            "end": { "line": 8, "col": 16, "offset": 1 }
          },
          {
            "path": "/src/WebGoat/Dockerfile",
            "start": { "line": 8, "col": 19, "offset": 0 },
            "end": { "line": 8, "col": 20, "offset": 1 }
          },
          {
            "path": "/src/WebGoat/Dockerfile",
            "start": { "line": 8, "col": 25, "offset": 0 },
            "end": { "line": 8, "col": 26, "offset": 1 }
          },
          {
            "path": "/src/WebGoat/Dockerfile",
            "start": { "line": 8, "col": 33, "offset": 0 },
            "end": { "line": 9, "col": 4, "offset": 9 }
          },
          {
            "path": "/src/WebGoat/Dockerfile",
            "start": { "line": 9, "col": 9, "offset": 0 },
            "end": { "line": 9, "col": 10, "offset": 1 }
          },
          {
            "path": "/src/WebGoat/Dockerfile",
            "start": { "line": 9, "col": 12, "offset": 0 },
            "end": { "line": 9, "col": 15, "offset": 3 }
          },
          {
            "path": "/src/WebGoat/Dockerfile",
            "start": { "line": 9, "col": 19, "offset": 0 },
            "end": { "line": 9, "col": 20, "offset": 1 }
          },
          {
            "path": "/src/WebGoat/Dockerfile",
            "start": { "line": 9, "col": 28, "offset": 0 },
            "end": { "line": 10, "col": 4, "offset": 9 }
          },
          {
            "path": "/src/WebGoat/Dockerfile",
            "start": { "line": 10, "col": 9, "offset": 0 },
            "end": { "line": 10, "col": 10, "offset": 1 }
          },
          {
            "path": "/src/WebGoat/Dockerfile",
            "start": { "line": 10, "col": 12, "offset": 0 },
            "end": { "line": 10, "col": 14, "offset": 2 }
          },
          {
            "path": "/src/WebGoat/Dockerfile",
            "start": { "line": 10, "col": 16, "offset": 0 },
            "end": { "line": 10, "col": 17, "offset": 1 }
          },
          {
            "path": "/src/WebGoat/Dockerfile",
            "start": { "line": 10, "col": 21, "offset": 0 },
            "end": { "line": 10, "col": 22, "offset": 1 }
          },
          {
            "path": "/src/WebGoat/Dockerfile",
            "start": { "line": 22, "col": 22, "offset": 0 },
            "end": { "line": 22, "col": 23, "offset": 1 }
          },
          {
            "path": "/src/WebGoat/Dockerfile",
            "start": { "line": 23, "col": 33, "offset": 0 },
            "end": { "line": 23, "col": 34, "offset": 1 }
          },
          {
            "path": "/src/WebGoat/Dockerfile",
            "start": { "line": 24, "col": 29, "offset": 0 },
            "end": { "line": 24, "col": 30, "offset": 1 }
          },
          {
            "path": "/src/WebGoat/Dockerfile",
            "start": { "line": 25, "col": 54, "offset": 0 },
            "end": { "line": 25, "col": 55, "offset": 1 }
          },
          {
            "path": "/src/WebGoat/Dockerfile",
            "start": { "line": 26, "col": 54, "offset": 0 },
            "end": { "line": 26, "col": 55, "offset": 1 }
          },
          {
            "path": "/src/WebGoat/Dockerfile",
            "start": { "line": 27, "col": 62, "offset": 0 },
            "end": { "line": 27, "col": 63, "offset": 1 }
          },
          {
            "path": "/src/WebGoat/Dockerfile",
            "start": { "line": 28, "col": 54, "offset": 0 },
            "end": { "line": 28, "col": 55, "offset": 1 }
          },
          {
            "path": "/src/WebGoat/Dockerfile",
            "start": { "line": 29, "col": 58, "offset": 0 },
            "end": { "line": 29, "col": 59, "offset": 1 }
          },
          {
            "path": "/src/WebGoat/Dockerfile",
            "start": { "line": 30, "col": 61, "offset": 0 },
            "end": { "line": 30, "col": 62, "offset": 1 }
          },
          {
            "path": "/src/WebGoat/Dockerfile",
            "start": { "line": 31, "col": 55, "offset": 0 },
            "end": { "line": 31, "col": 56, "offset": 1 }
          },
          {
            "path": "/src/WebGoat/Dockerfile",
            "start": { "line": 32, "col": 52, "offset": 0 },
            "end": { "line": 32, "col": 53, "offset": 1 }
          },
          {
            "path": "/src/WebGoat/Dockerfile",
            "start": { "line": 33, "col": 54, "offset": 0 },
            "end": { "line": 33, "col": 55, "offset": 1 }
          },
          {
            "path": "/src/WebGoat/Dockerfile",
            "start": { "line": 34, "col": 55, "offset": 0 },
            "end": { "line": 34, "col": 56, "offset": 1 }
          },
          {
            "path": "/src/WebGoat/Dockerfile",
            "start": { "line": 35, "col": 52, "offset": 0 },
            "end": { "line": 35, "col": 53, "offset": 1 }
          },
          {
            "path": "/src/WebGoat/Dockerfile",
            "start": { "line": 36, "col": 32, "offset": 0 },
            "end": { "line": 36, "col": 33, "offset": 1 }
          },
          {
            "path": "/src/WebGoat/Dockerfile",
            "start": { "line": 39, "col": 1, "offset": 0 },
            "end": { "line": 40, "col": 74, "offset": 115 }
          }
        ]
      ],
      "message": "Syntax error at line /src/WebGoat/Dockerfile:8:\n `-` was unexpected",
      "path": "/src/WebGoat/Dockerfile",
      "spans": [
        {
          "file": "/src/WebGoat/Dockerfile",
          "start": { "line": 8, "col": 11, "offset": 0 },
          "end": { "line": 8, "col": 12, "offset": 1 }
        },
        {
          "file": "/src/WebGoat/Dockerfile",
          "start": { "line": 8, "col": 15, "offset": 0 },
          "end": { "line": 8, "col": 16, "offset": 1 }
        },
        {
          "file": "/src/WebGoat/Dockerfile",
          "start": { "line": 8, "col": 19, "offset": 0 },
          "end": { "line": 8, "col": 20, "offset": 1 }
        },
        {
          "file": "/src/WebGoat/Dockerfile",
          "start": { "line": 8, "col": 25, "offset": 0 },
          "end": { "line": 8, "col": 26, "offset": 1 }
        },
        {
          "file": "/src/WebGoat/Dockerfile",
          "start": { "line": 8, "col": 33, "offset": 0 },
          "end": { "line": 9, "col": 4, "offset": 9 }
        },
        {
          "file": "/src/WebGoat/Dockerfile",
          "start": { "line": 9, "col": 9, "offset": 0 },
          "end": { "line": 9, "col": 10, "offset": 1 }
        },
        {
          "file": "/src/WebGoat/Dockerfile",
          "start": { "line": 9, "col": 12, "offset": 0 },
          "end": { "line": 9, "col": 15, "offset": 3 }
        },
        {
          "file": "/src/WebGoat/Dockerfile",
          "start": { "line": 9, "col": 19, "offset": 0 },
          "end": { "line": 9, "col": 20, "offset": 1 }
        },
        {
          "file": "/src/WebGoat/Dockerfile",
          "start": { "line": 9, "col": 28, "offset": 0 },
          "end": { "line": 10, "col": 4, "offset": 9 }
        },
        {
          "file": "/src/WebGoat/Dockerfile",
          "start": { "line": 10, "col": 9, "offset": 0 },
          "end": { "line": 10, "col": 10, "offset": 1 }
        },
        {
          "file": "/src/WebGoat/Dockerfile",
          "start": { "line": 10, "col": 12, "offset": 0 },
          "end": { "line": 10, "col": 14, "offset": 2 }
        },
        {
          "file": "/src/WebGoat/Dockerfile",
          "start": { "line": 10, "col": 16, "offset": 0 },
          "end": { "line": 10, "col": 17, "offset": 1 }
        },
        {
          "file": "/src/WebGoat/Dockerfile",
          "start": { "line": 10, "col": 21, "offset": 0 },
          "end": { "line": 10, "col": 22, "offset": 1 }
        },
        {
          "file": "/src/WebGoat/Dockerfile",
          "start": { "line": 22, "col": 22, "offset": 0 },
          "end": { "line": 22, "col": 23, "offset": 1 }
        },
        {
          "file": "/src/WebGoat/Dockerfile",
          "start": { "line": 23, "col": 33, "offset": 0 },
          "end": { "line": 23, "col": 34, "offset": 1 }
        },
        {
          "file": "/src/WebGoat/Dockerfile",
          "start": { "line": 24, "col": 29, "offset": 0 },
          "end": { "line": 24, "col": 30, "offset": 1 }
        },
        {
          "file": "/src/WebGoat/Dockerfile",
          "start": { "line": 25, "col": 54, "offset": 0 },
          "end": { "line": 25, "col": 55, "offset": 1 }
        },
        {
          "file": "/src/WebGoat/Dockerfile",
          "start": { "line": 26, "col": 54, "offset": 0 },
          "end": { "line": 26, "col": 55, "offset": 1 }
        },
        {
          "file": "/src/WebGoat/Dockerfile",
          "start": { "line": 27, "col": 62, "offset": 0 },
          "end": { "line": 27, "col": 63, "offset": 1 }
        },
        {
          "file": "/src/WebGoat/Dockerfile",
          "start": { "line": 28, "col": 54, "offset": 0 },
          "end": { "line": 28, "col": 55, "offset": 1 }
        },
        {
          "file": "/src/WebGoat/Dockerfile",
          "start": { "line": 29, "col": 58, "offset": 0 },
          "end": { "line": 29, "col": 59, "offset": 1 }
        },
        {
          "file": "/src/WebGoat/Dockerfile",
          "start": { "line": 30, "col": 61, "offset": 0 },
          "end": { "line": 30, "col": 62, "offset": 1 }
        },
        {
          "file": "/src/WebGoat/Dockerfile",
          "start": { "line": 31, "col": 55, "offset": 0 },
          "end": { "line": 31, "col": 56, "offset": 1 }
        },
        {
          "file": "/src/WebGoat/Dockerfile",
          "start": { "line": 32, "col": 52, "offset": 0 },
          "end": { "line": 32, "col": 53, "offset": 1 }
        },
        {
          "file": "/src/WebGoat/Dockerfile",
          "start": { "line": 33, "col": 54, "offset": 0 },
          "end": { "line": 33, "col": 55, "offset": 1 }
        },
        {
          "file": "/src/WebGoat/Dockerfile",
          "start": { "line": 34, "col": 55, "offset": 0 },
          "end": { "line": 34, "col": 56, "offset": 1 }
        },
        {
          "file": "/src/WebGoat/Dockerfile",
          "start": { "line": 35, "col": 52, "offset": 0 },
          "end": { "line": 35, "col": 53, "offset": 1 }
        },
        {
          "file": "/src/WebGoat/Dockerfile",
          "start": { "line": 36, "col": 32, "offset": 0 },
          "end": { "line": 36, "col": 33, "offset": 1 }
        },
        {
          "file": "/src/WebGoat/Dockerfile",
          "start": { "line": 39, "col": 1, "offset": 0 },
          "end": { "line": 40, "col": 74, "offset": 115 }
        }
      ]
    },
    {
      "code": 2,
      "level": "warn",
      "type": "Timeout",
      "rule_id": "javascript.express.security.audit.express-ssrf.express-ssrf",
      "message": "Timeout when running javascript.express.security.audit.express-ssrf.express-ssrf on /src/WebGoat/src/main/resources/webgoat/static/js/libs/jquery-ui-1.10.4.js:\n ",
      "path": "/src/WebGoat/src/main/resources/webgoat/static/js/libs/jquery-ui-1.10.4.js"
    },
    {
      "code": 2,
      "level": "warn",
      "type": "Timeout",
      "rule_id": "javascript.express.security.audit.remote-property-injection.remote-property-injection",
      "message": "Timeout when running javascript.express.security.audit.remote-property-injection.remote-property-injection on /src/WebGoat/src/main/resources/webgoat/static/js/libs/jquery-ui-1.10.4.js:\n ",
      "path": "/src/WebGoat/src/main/resources/webgoat/static/js/libs/jquery-ui-1.10.4.js"
    },
    {
      "code": 2,
      "level": "warn",
      "type": "Timeout",
      "rule_id": "javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring",
      "message": "Timeout when running javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring on /src/WebGoat/src/main/resources/webgoat/static/js/libs/jquery-ui-1.10.4.js:\n ",
      "path": "/src/WebGoat/src/main/resources/webgoat/static/js/libs/jquery-ui-1.10.4.js"
    }
  ],
  "paths": {
    "scanned": [
      "/src/WebGoat/.dockerignore",
      "/src/WebGoat/.editorconfig",
      "/src/WebGoat/.github/FUNDING.yml",
      "/src/WebGoat/.github/dependabot.yml",
      "/src/WebGoat/.github/lock.yml",
      "/src/WebGoat/.github/stale.yml",
      "/src/WebGoat/.github/workflows/branchbuild.txt",
      "/src/WebGoat/.github/workflows/build.yml",
      "/src/WebGoat/.github/workflows/release.yml",
      "/src/WebGoat/.github/workflows/welcome.yml",
      "/src/WebGoat/.gitignore",
      "/src/WebGoat/.mvn/wrapper/MavenWrapperDownloader.java",
      "/src/WebGoat/.mvn/wrapper/maven-wrapper.jar",
      "/src/WebGoat/.mvn/wrapper/maven-wrapper.properties",
      "/src/WebGoat/.pre-commit-config.yaml",
      "/src/WebGoat/CODE_OF_CONDUCT.md",
      "/src/WebGoat/CONTRIBUTING.md",
      "/src/WebGoat/COPYRIGHT.txt",
      "/src/WebGoat/CREATE_RELEASE.md",
      "/src/WebGoat/Dockerfile",
      "/src/WebGoat/Dockerfile_desktop",
      "/src/WebGoat/FAQ.md",
      "/src/WebGoat/LICENSE.txt",
      "/src/WebGoat/PULL_REQUEST_TEMPLATE.md",
      "/src/WebGoat/README.md",
      "/src/WebGoat/README_I18N.md",
      "/src/WebGoat/RELEASE_NOTES.md",
      "/src/WebGoat/config/checkstyle/checkstyle.xml",
      "/src/WebGoat/config/checkstyle/suppressions.xml",
      "/src/WebGoat/config/dependency-check/project-suppression.xml",
      "/src/WebGoat/config/desktop/WebGoat.txt",
      "/src/WebGoat/config/desktop/start_webgoat.sh",
      "/src/WebGoat/config/desktop/start_zap.sh",
      "/src/WebGoat/config/license-headers/java",
      "/src/WebGoat/docs/README.md",
      "/src/WebGoat/docs/images/webgoat.png",
      "/src/WebGoat/docs/index.html",
      "/src/WebGoat/mvn-debug",
      "/src/WebGoat/mvnw",
      "/src/WebGoat/mvnw.cmd",
      "/src/WebGoat/pom.xml",
      "/src/WebGoat/sonar-scanner.properties",
      "/src/WebGoat/src/it/java/org/owasp/webgoat/ServerUrlConfig.java",
      "/src/WebGoat/src/it/java/org/owasp/webgoat/integration/AccessControlIntegrationTest.java",
      "/src/WebGoat/src/it/java/org/owasp/webgoat/integration/CSRFIntegrationTest.java",
      "/src/WebGoat/src/it/java/org/owasp/webgoat/integration/ChallengeIntegrationTest.java",
      "/src/WebGoat/src/it/java/org/owasp/webgoat/integration/CryptoIntegrationTest.java",
      "/src/WebGoat/src/it/java/org/owasp/webgoat/integration/DeserializationIntegrationTest.java",
      "/src/WebGoat/src/it/java/org/owasp/webgoat/integration/GeneralLessonIntegrationTest.java",
      "/src/WebGoat/src/it/java/org/owasp/webgoat/integration/IDORIntegrationTest.java",
      "/src/WebGoat/src/it/java/org/owasp/webgoat/integration/IntegrationTest.java",
      "/src/WebGoat/src/it/java/org/owasp/webgoat/integration/JWTLessonIntegrationTest.java",
      "/src/WebGoat/src/it/java/org/owasp/webgoat/integration/LabelAndHintIntegrationTest.java",
      "/src/WebGoat/src/it/java/org/owasp/webgoat/integration/PasswordResetLessonIntegrationTest.java",
      "/src/WebGoat/src/it/java/org/owasp/webgoat/integration/PathTraversalIntegrationTest.java",
      "/src/WebGoat/src/it/java/org/owasp/webgoat/integration/ProgressRaceConditionIntegrationTest.java",
      "/src/WebGoat/src/it/java/org/owasp/webgoat/integration/SSRFIntegrationTest.java",
      "/src/WebGoat/src/it/java/org/owasp/webgoat/integration/SessionManagementIntegrationTest.java",
      "/src/WebGoat/src/it/java/org/owasp/webgoat/integration/SqlInjectionAdvancedIntegrationTest.java",
      "/src/WebGoat/src/it/java/org/owasp/webgoat/integration/SqlInjectionLessonIntegrationTest.java",
      "/src/WebGoat/src/it/java/org/owasp/webgoat/integration/SqlInjectionMitigationIntegrationTest.java",
      "/src/WebGoat/src/it/java/org/owasp/webgoat/integration/WebWolfIntegrationTest.java",
      "/src/WebGoat/src/it/java/org/owasp/webgoat/integration/XSSIntegrationTest.java",
      "/src/WebGoat/src/it/java/org/owasp/webgoat/integration/XXEIntegrationTest.java",
      "/src/WebGoat/src/it/java/org/owasp/webgoat/playwright/webgoat/LoginUITest.java",
      "/src/WebGoat/src/it/java/org/owasp/webgoat/playwright/webgoat/PlaywrightTest.java",
      "/src/WebGoat/src/it/java/org/owasp/webgoat/playwright/webgoat/RegistrationUITest.java",
      "/src/WebGoat/src/it/java/org/owasp/webgoat/playwright/webgoat/helpers/Authentication.java",
      "/src/WebGoat/src/it/java/org/owasp/webgoat/playwright/webgoat/lessons/HttpBasicsLessonUITest.java",
      "/src/WebGoat/src/it/java/org/owasp/webgoat/playwright/webgoat/lessons/SqlInjectionAdvancedUITest.java",
      "/src/WebGoat/src/it/java/org/owasp/webgoat/playwright/webgoat/pages/RegistrationPage.java",
      "/src/WebGoat/src/it/java/org/owasp/webgoat/playwright/webgoat/pages/WebGoatLoginPage.java",
      "/src/WebGoat/src/it/java/org/owasp/webgoat/playwright/webgoat/pages/lessons/HttpBasicsLessonPage.java",
      "/src/WebGoat/src/it/java/org/owasp/webgoat/playwright/webgoat/pages/lessons/LessonPage.java",
      "/src/WebGoat/src/it/java/org/owasp/webgoat/playwright/webwolf/JwtUITest.java",
      "/src/WebGoat/src/it/java/org/owasp/webgoat/playwright/webwolf/LoginUITest.java",
      "/src/WebGoat/src/it/java/org/owasp/webgoat/playwright/webwolf/pages/WebWolfLoginPage.java",
      "/src/WebGoat/src/main/java/org/dummy/insecure/framework/VulnerableTaskHolder.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/AjaxAuthenticationEntryPoint.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/AsciiDoctorTemplateResolver.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/CurrentUser.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/CurrentUsername.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/DatabaseConfiguration.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/HammerHead.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/LessonDataSource.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/LessonResourceScanner.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/LessonTemplateResolver.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/MvcConfiguration.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/UserInterceptor.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/WebGoat.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/WebSecurityConfig.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/WebWolfRedirect.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/asciidoc/EnvironmentExposure.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/asciidoc/OperatingSystemMacro.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/asciidoc/UsernameMacro.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/asciidoc/WebGoatTmpDirMacro.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/asciidoc/WebGoatVersionMacro.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/asciidoc/WebWolfMacro.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/asciidoc/WebWolfRootMacro.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/assignments/AssignmentEndpoint.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/assignments/AssignmentHints.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/assignments/AttackResult.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/assignments/AttackResultBuilder.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/assignments/AttackResultMessageResponseBodyAdvice.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/assignments/LessonTrackerInterceptor.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/controller/StartLesson.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/controller/Welcome.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/i18n/Language.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/i18n/Messages.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/i18n/PluginMessages.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/lessons/Assignment.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/lessons/Category.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/lessons/CourseConfiguration.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/lessons/Hint.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/lessons/Initializable.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/lessons/Lesson.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/lessons/LessonConnectionInvocationHandler.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/lessons/LessonInfoModel.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/lessons/LessonMenuItem.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/lessons/LessonMenuItemType.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/lessons/LessonName.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/report/ReportCardController.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/service/EnvironmentService.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/service/HintService.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/service/LabelDebugService.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/service/LabelService.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/service/LessonInfoService.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/service/LessonMenuService.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/service/LessonProgressService.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/service/RestartLessonService.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/service/SessionService.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/session/Course.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/session/LabelDebugger.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/session/LessonSession.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/users/AssignmentProgress.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/users/LessonProgress.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/users/RegistrationController.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/users/UserForm.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/users/UserProgress.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/users/UserProgressRepository.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/users/UserRepository.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/users/UserService.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/users/UserSession.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/users/UserValidator.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/container/users/WebGoatUser.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/authbypass/AccountVerificationHelper.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/authbypass/AuthBypass.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/authbypass/VerifyAccount.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/bypassrestrictions/BypassRestrictions.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/bypassrestrictions/BypassRestrictionsFieldRestrictions.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/bypassrestrictions/BypassRestrictionsFrontendValidation.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/challenges/ChallengeIntro.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/challenges/Email.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/challenges/Flag.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/challenges/FlagController.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/challenges/Flags.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/challenges/SolutionConstants.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/challenges/challenge1/Assignment1.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/challenges/challenge1/Challenge1.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/challenges/challenge1/ImageServlet.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Challenge5.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/Assignment7.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/Challenge7.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/MD5.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/PasswordResetLink.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/challenges/challenge8/Assignment8.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/challenges/challenge8/Challenge8.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/chromedevtools/ChromeDevTools.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/chromedevtools/NetworkDummy.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/chromedevtools/NetworkLesson.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/cia/CIA.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/cia/CIAQuiz.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/clientsidefiltering/ClientSideFiltering.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/clientsidefiltering/ClientSideFilteringAssignment.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/clientsidefiltering/ClientSideFilteringFreeAssignment.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/clientsidefiltering/Salaries.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/clientsidefiltering/ShopEndpoint.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/CryptoUtil.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/Cryptography.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/SecureDefaultsAssignment.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/SigningAssignment.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/cryptography/XOREncodingAssignment.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/csrf/CSRF.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/csrf/CSRFConfirmFlag1.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/csrf/CSRFFeedback.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/csrf/CSRFGetFlag.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/csrf/CSRFLogin.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/csrf/ForgedReviews.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/csrf/Review.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/deserialization/InsecureDeserialization.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/deserialization/InsecureDeserializationTask.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/deserialization/SerializationHelper.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/hijacksession/HijackSession.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/hijacksession/HijackSessionAssignment.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/hijacksession/cas/Authentication.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/hijacksession/cas/AuthenticationProvider.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/hijacksession/cas/HijackSessionAuthenticationProvider.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/htmltampering/HtmlTampering.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/htmltampering/HtmlTamperingTask.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/httpbasics/HttpBasics.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/httpbasics/HttpBasicsLesson.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/httpbasics/HttpBasicsQuiz.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/httpproxies/HttpBasicsInterceptRequest.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/httpproxies/HttpProxies.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/idor/IDOR.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/idor/IDORDiffAttributes.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/idor/IDOREditOtherProfile.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/idor/IDORLogin.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/idor/IDORViewOtherProfile.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/idor/IDORViewOwnProfile.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/idor/IDORViewOwnProfileAltUrl.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/idor/UserProfile.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/insecurelogin/InsecureLogin.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/insecurelogin/InsecureLoginTask.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/jwt/JWT.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/jwt/JWTDecodeEndpoint.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/jwt/JWTQuiz.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpoint.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/jwt/claimmisuse/JWTHeaderJKUEndpoint.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/jwt/claimmisuse/JWTHeaderKIDEndpoint.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/jwt/votes/Views.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/jwt/votes/Vote.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/lessontemplate/LessonTemplate.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/lessontemplate/SampleAttack.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/logging/LogBleedingTask.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/logging/LogSpoofing.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/logging/LogSpoofingTask.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/missingac/DisplayUser.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/missingac/MissingAccessControlUserRepository.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionAC.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionACHiddenMenus.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionACUsers.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionACYourHash.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionACYourHashAdmin.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/missingac/User.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/passwordreset/PasswordReset.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/passwordreset/PasswordResetEmail.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/passwordreset/QuestionsAssignment.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignment.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignmentForgotPassword.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/passwordreset/SecurityQuestionAssignment.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/passwordreset/SimpleMailAssignment.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/passwordreset/TriedQuestions.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/passwordreset/resetlink/PasswordChangeForm.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/pathtraversal/PathTraversal.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUpload.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadFix.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRemoveUserInput.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileZipSlip.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/securepasswords/SecurePasswords.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/securepasswords/SecurePasswordsAssignment.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookie.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/spoofcookie/encoders/EncDec.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionAdvanced.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallengeLogin.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionQuiz.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjection.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/Servers.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlInjectionLesson10a.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlInjectionLesson10b.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlInjectionLesson13.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlInjectionMitigations.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidation.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidationOnKeywords.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/ssrf/SSRF.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask1.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/Contact.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/ContactImpl.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponents.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLesson.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/webgoatintroduction/WebGoatIntroduction.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/webwolfintroduction/Email.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/webwolfintroduction/LandingAssignment.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/webwolfintroduction/MailAssignment.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/webwolfintroduction/WebWolfIntroduction.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/xss/Comment.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScripting.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson1.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson5a.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson6a.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingQuiz.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/xss/DOMCrossSiteScripting.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/xss/DOMCrossSiteScriptingVerifier.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/xss/mitigation/CrossSiteScriptingLesson3.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/xss/mitigation/CrossSiteScriptingLesson4.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/xss/mitigation/CrossSiteScriptingMitigation.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/xss/stored/CrossSiteScriptingStored.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/xss/stored/StoredCrossSiteScriptingVerifier.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/xss/stored/StoredXssComments.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/xxe/BlindSendFileAssignment.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/xxe/Comment.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/xxe/CommentsCache.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/xxe/CommentsEndpoint.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/xxe/ContentTypeAssignment.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/xxe/Ping.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/xxe/SimpleXXE.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/xxe/User.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/lessons/xxe/XXE.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/server/ParentConfig.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/server/StartWebGoat.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/webwolf/FileServer.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/webwolf/MvcConfiguration.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/webwolf/WebSecurityConfig.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/webwolf/WebWolf.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/webwolf/jwt/JWTController.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/webwolf/jwt/JWTToken.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/webwolf/mailbox/Email.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/webwolf/mailbox/MailboxController.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/webwolf/mailbox/MailboxRepository.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/webwolf/requests/LandingPage.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/webwolf/requests/Requests.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/webwolf/requests/WebWolfTraceRepository.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/webwolf/user/UserRepository.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/webwolf/user/UserService.java",
      "/src/WebGoat/src/main/java/org/owasp/webgoat/webwolf/user/WebWolfUser.java",
      "/src/WebGoat/src/main/resources/application-webgoat.properties",
      "/src/WebGoat/src/main/resources/application-webwolf.properties",
      "/src/WebGoat/src/main/resources/banner-webgoat.txt",
      "/src/WebGoat/src/main/resources/banner-webwolf.txt",
      "/src/WebGoat/src/main/resources/db/container/V1__init.sql",
      "/src/WebGoat/src/main/resources/goatkeystore.pkcs12",
      "/src/WebGoat/src/main/resources/i18n/messages.properties",
      "/src/WebGoat/src/main/resources/i18n/messages_de.properties",
      "/src/WebGoat/src/main/resources/i18n/messages_fr.properties",
      "/src/WebGoat/src/main/resources/i18n/messages_nl.properties",
      "/src/WebGoat/src/main/resources/lessons/authbypass/documentation/2fa-bypass.adoc",
      "/src/WebGoat/src/main/resources/lessons/authbypass/documentation/bypass-intro.adoc",
      "/src/WebGoat/src/main/resources/lessons/authbypass/documentation/lesson-template-video.adoc",
      "/src/WebGoat/src/main/resources/lessons/authbypass/html/AuthBypass.html",
      "/src/WebGoat/src/main/resources/lessons/authbypass/i18n/WebGoatLabels.properties",
      "/src/WebGoat/src/main/resources/lessons/authbypass/images/firefox-proxy-config.png",
      "/src/WebGoat/src/main/resources/lessons/authbypass/images/paypal-2fa-bypass.png",
      "/src/WebGoat/src/main/resources/lessons/authbypass/js/bypass.js",
      "/src/WebGoat/src/main/resources/lessons/bypassrestrictions/css/bypass-restrictions.css",
      "/src/WebGoat/src/main/resources/lessons/bypassrestrictions/documentation/BypassRestrictions_FieldRestrictions.adoc",
      "/src/WebGoat/src/main/resources/lessons/bypassrestrictions/documentation/BypassRestrictions_FrontendValidation.adoc",
      "/src/WebGoat/src/main/resources/lessons/bypassrestrictions/documentation/BypassRestrictions_Intro.adoc",
      "/src/WebGoat/src/main/resources/lessons/bypassrestrictions/html/BypassRestrictions.html",
      "/src/WebGoat/src/main/resources/lessons/bypassrestrictions/i18n/WebGoatLabels.properties",
      "/src/WebGoat/src/main/resources/lessons/challenges/challenge7/git.zip",
      "/src/WebGoat/src/main/resources/lessons/challenges/css/challenge6.css",
      "/src/WebGoat/src/main/resources/lessons/challenges/css/challenge8.css",
      "/src/WebGoat/src/main/resources/lessons/challenges/db/migration/V2018_09_26_1__users.sql",
      "/src/WebGoat/src/main/resources/lessons/challenges/documentation/Challenge_1.adoc",
      "/src/WebGoat/src/main/resources/lessons/challenges/documentation/Challenge_5.adoc",
      "/src/WebGoat/src/main/resources/lessons/challenges/documentation/Challenge_6.adoc",
      "/src/WebGoat/src/main/resources/lessons/challenges/documentation/Challenge_7.adoc",
      "/src/WebGoat/src/main/resources/lessons/challenges/documentation/Challenge_8.adoc",
      "/src/WebGoat/src/main/resources/lessons/challenges/documentation/Challenge_introduction.adoc",
      "/src/WebGoat/src/main/resources/lessons/challenges/html/Challenge1.html",
      "/src/WebGoat/src/main/resources/lessons/challenges/html/Challenge5.html",
      "/src/WebGoat/src/main/resources/lessons/challenges/html/Challenge6.html",
      "/src/WebGoat/src/main/resources/lessons/challenges/html/Challenge7.html",
      "/src/WebGoat/src/main/resources/lessons/challenges/html/Challenge8.html",
      "/src/WebGoat/src/main/resources/lessons/challenges/html/ChallengeIntro.html",
      "/src/WebGoat/src/main/resources/lessons/challenges/i18n/WebGoatLabels.properties",
      "/src/WebGoat/src/main/resources/lessons/challenges/images/avatar1.png",
      "/src/WebGoat/src/main/resources/lessons/challenges/images/boss.jpg",
      "/src/WebGoat/src/main/resources/lessons/challenges/images/challenge1-small.png",
      "/src/WebGoat/src/main/resources/lessons/challenges/images/challenge1.png",
      "/src/WebGoat/src/main/resources/lessons/challenges/images/challenge2-small.png",
      "/src/WebGoat/src/main/resources/lessons/challenges/images/challenge2.png",
      "/src/WebGoat/src/main/resources/lessons/challenges/images/challenge3-small.png",
      "/src/WebGoat/src/main/resources/lessons/challenges/images/challenge3.png",
      "/src/WebGoat/src/main/resources/lessons/challenges/images/challenge4-small.png",
      "/src/WebGoat/src/main/resources/lessons/challenges/images/challenge4.png",
      "/src/WebGoat/src/main/resources/lessons/challenges/images/challenge5-small.png",
      "/src/WebGoat/src/main/resources/lessons/challenges/images/challenge5.png",
      "/src/WebGoat/src/main/resources/lessons/challenges/images/hi-five-cat.jpg",
      "/src/WebGoat/src/main/resources/lessons/challenges/images/user1.png",
      "/src/WebGoat/src/main/resources/lessons/challenges/images/user2.png",
      "/src/WebGoat/src/main/resources/lessons/challenges/images/user3.png",
      "/src/WebGoat/src/main/resources/lessons/challenges/images/webgoat2.png",
      "/src/WebGoat/src/main/resources/lessons/challenges/js/challenge6.js",
      "/src/WebGoat/src/main/resources/lessons/challenges/js/challenge8.js",
      "/src/WebGoat/src/main/resources/lessons/chromedevtools/documentation/ChromeDevTools_Assignment.adoc",
      "/src/WebGoat/src/main/resources/lessons/chromedevtools/documentation/ChromeDevTools_Assignment_Network.adoc",
      "/src/WebGoat/src/main/resources/lessons/chromedevtools/documentation/ChromeDevTools_console.adoc",
      "/src/WebGoat/src/main/resources/lessons/chromedevtools/documentation/ChromeDevTools_elements.adoc",
      "/src/WebGoat/src/main/resources/lessons/chromedevtools/documentation/ChromeDevTools_intro.adoc",
      "/src/WebGoat/src/main/resources/lessons/chromedevtools/documentation/ChromeDevTools_sources.adoc",
      "/src/WebGoat/src/main/resources/lessons/chromedevtools/html/ChromeDevTools.html",
      "/src/WebGoat/src/main/resources/lessons/chromedevtools/i18n/WebGoatLabels.properties",
      "/src/WebGoat/src/main/resources/lessons/chromedevtools/images/ChromeDev_Console_Clear.jpg",
      "/src/WebGoat/src/main/resources/lessons/chromedevtools/images/ChromeDev_Console_Ex.jpg",
      "/src/WebGoat/src/main/resources/lessons/chromedevtools/images/ChromeDev_Elements.jpg",
      "/src/WebGoat/src/main/resources/lessons/chromedevtools/images/ChromeDev_Elements_CSS.jpg",
      "/src/WebGoat/src/main/resources/lessons/chromedevtools/images/ChromeDev_Network.jpg",
      "/src/WebGoat/src/main/resources/lessons/chromedevtools/images/ChromeDev_Sources.jpg",
      "/src/WebGoat/src/main/resources/lessons/cia/documentation/CIA_availability.adoc",
      "/src/WebGoat/src/main/resources/lessons/cia/documentation/CIA_confidentiality.adoc",
      "/src/WebGoat/src/main/resources/lessons/cia/documentation/CIA_integrity.adoc",
      "/src/WebGoat/src/main/resources/lessons/cia/documentation/CIA_intro.adoc",
      "/src/WebGoat/src/main/resources/lessons/cia/documentation/CIA_quiz.adoc",
      "/src/WebGoat/src/main/resources/lessons/cia/html/CIA.html",
      "/src/WebGoat/src/main/resources/lessons/cia/i18n/WebGoatLabels.properties",
      "/src/WebGoat/src/main/resources/lessons/cia/js/questions_cia.json",
      "/src/WebGoat/src/main/resources/lessons/clientsidefiltering/css/clientSideFiltering-stage1.css",
      "/src/WebGoat/src/main/resources/lessons/clientsidefiltering/css/clientSideFilteringFree.css",
      "/src/WebGoat/src/main/resources/lessons/clientsidefiltering/documentation/ClientSideFiltering_assignment.adoc",
      "/src/WebGoat/src/main/resources/lessons/clientsidefiltering/documentation/ClientSideFiltering_final.adoc",
      "/src/WebGoat/src/main/resources/lessons/clientsidefiltering/documentation/ClientSideFiltering_plan.adoc",
      "/src/WebGoat/src/main/resources/lessons/clientsidefiltering/html/ClientSideFiltering.html",
      "/src/WebGoat/src/main/resources/lessons/clientsidefiltering/i18n/WebGoatLabels.properties",
      "/src/WebGoat/src/main/resources/lessons/clientsidefiltering/images/lesson1_header.jpg",
      "/src/WebGoat/src/main/resources/lessons/clientsidefiltering/images/lesson1_workspace.jpg",
      "/src/WebGoat/src/main/resources/lessons/clientsidefiltering/images/samsung-black.jpg",
      "/src/WebGoat/src/main/resources/lessons/clientsidefiltering/images/samsung-grey.jpg",
      "/src/WebGoat/src/main/resources/lessons/clientsidefiltering/js/clientSideFiltering.js",
      "/src/WebGoat/src/main/resources/lessons/clientsidefiltering/js/clientSideFilteringFree.js",
      "/src/WebGoat/src/main/resources/lessons/clientsidefiltering/lessonSolutions/en/ClientSideFiltering.html",
      "/src/WebGoat/src/main/resources/lessons/clientsidefiltering/lessonSolutions/en/ClientSideFiltering_files/clientside_firebug.jpg",
      "/src/WebGoat/src/main/resources/lessons/cryptography/documentation/Crypto_plan.adoc",
      "/src/WebGoat/src/main/resources/lessons/cryptography/documentation/defaults.adoc",
      "/src/WebGoat/src/main/resources/lessons/cryptography/documentation/encoding_plan.adoc",
      "/src/WebGoat/src/main/resources/lessons/cryptography/documentation/encoding_plan2.adoc",
      "/src/WebGoat/src/main/resources/lessons/cryptography/documentation/encryption.adoc",
      "/src/WebGoat/src/main/resources/lessons/cryptography/documentation/hashing_plan.adoc",
      "/src/WebGoat/src/main/resources/lessons/cryptography/documentation/keystores.adoc",
      "/src/WebGoat/src/main/resources/lessons/cryptography/documentation/postquantum.adoc",
      "/src/WebGoat/src/main/resources/lessons/cryptography/documentation/signing.adoc",
      "/src/WebGoat/src/main/resources/lessons/cryptography/html/Cryptography.html",
      "/src/WebGoat/src/main/resources/lessons/cryptography/i18n/WebGoatLabels.properties",
      "/src/WebGoat/src/main/resources/lessons/csrf/css/reviews.css",
      "/src/WebGoat/src/main/resources/lessons/csrf/documentation/CSRF_Basic_Get-1.adoc",
      "/src/WebGoat/src/main/resources/lessons/csrf/documentation/CSRF_ContentType.adoc",
      "/src/WebGoat/src/main/resources/lessons/csrf/documentation/CSRF_Frameworks.adoc",
      "/src/WebGoat/src/main/resources/lessons/csrf/documentation/CSRF_GET.adoc",
      "/src/WebGoat/src/main/resources/lessons/csrf/documentation/CSRF_Get_Flag.adoc",
      "/src/WebGoat/src/main/resources/lessons/csrf/documentation/CSRF_Impact_Defense.adoc",
      "/src/WebGoat/src/main/resources/lessons/csrf/documentation/CSRF_JSON.adoc",
      "/src/WebGoat/src/main/resources/lessons/csrf/documentation/CSRF_Login.adoc",
      "/src/WebGoat/src/main/resources/lessons/csrf/documentation/CSRF_Reviews.adoc",
      "/src/WebGoat/src/main/resources/lessons/csrf/documentation/CSRF_intro.adoc",
      "/src/WebGoat/src/main/resources/lessons/csrf/html/CSRF.html",
      "/src/WebGoat/src/main/resources/lessons/csrf/i18n/WebGoatLabels.properties",
      "/src/WebGoat/src/main/resources/lessons/csrf/images/login-csrf.png",
      "/src/WebGoat/src/main/resources/lessons/csrf/js/csrf-review.js",
      "/src/WebGoat/src/main/resources/lessons/csrf/js/feedback.js",
      "/src/WebGoat/src/main/resources/lessons/deserialization/documentation/InsecureDeserialization_GadgetChain.adoc",
      "/src/WebGoat/src/main/resources/lessons/deserialization/documentation/InsecureDeserialization_Intro.adoc",
      "/src/WebGoat/src/main/resources/lessons/deserialization/documentation/InsecureDeserialization_SimpleExploit.adoc",
      "/src/WebGoat/src/main/resources/lessons/deserialization/documentation/InsecureDeserialization_Task.adoc",
      "/src/WebGoat/src/main/resources/lessons/deserialization/documentation/InsecureDeserialization_WhatIs.adoc",
      "/src/WebGoat/src/main/resources/lessons/deserialization/html/InsecureDeserialization.html",
      "/src/WebGoat/src/main/resources/lessons/deserialization/i18n/WebGoatLabels.properties",
      "/src/WebGoat/src/main/resources/lessons/employees.xml",
      "/src/WebGoat/src/main/resources/lessons/hijacksession/documentation/HijackSession_content0.adoc",
      "/src/WebGoat/src/main/resources/lessons/hijacksession/documentation/HijackSession_plan.adoc",
      "/src/WebGoat/src/main/resources/lessons/hijacksession/html/HijackSession.html",
      "/src/WebGoat/src/main/resources/lessons/hijacksession/i18n/WebGoatLabels.properties",
      "/src/WebGoat/src/main/resources/lessons/hijacksession/lessonSolutions/en/HijackSession_solution.adoc",
      "/src/WebGoat/src/main/resources/lessons/hijacksession/lessonSolutions/html/HijackSession.html",
      "/src/WebGoat/src/main/resources/lessons/hijacksession/templates/hijackform.html",
      "/src/WebGoat/src/main/resources/lessons/htmltampering/documentation/HtmlTampering_Intro.adoc",
      "/src/WebGoat/src/main/resources/lessons/htmltampering/documentation/HtmlTampering_Mitigation.adoc",
      "/src/WebGoat/src/main/resources/lessons/htmltampering/documentation/HtmlTampering_Task.adoc",
      "/src/WebGoat/src/main/resources/lessons/htmltampering/html/HtmlTampering.html",
      "/src/WebGoat/src/main/resources/lessons/htmltampering/i18n/WebGoatLabels.properties",
      "/src/WebGoat/src/main/resources/lessons/htmltampering/images/samsung.jpg",
      "/src/WebGoat/src/main/resources/lessons/httpbasics/documentation/HttpBasics_content1.adoc",
      "/src/WebGoat/src/main/resources/lessons/httpbasics/documentation/HttpBasics_content2.adoc",
      "/src/WebGoat/src/main/resources/lessons/httpbasics/documentation/HttpBasics_plan.adoc",
      "/src/WebGoat/src/main/resources/lessons/httpbasics/html/HttpBasics.html",
      "/src/WebGoat/src/main/resources/lessons/httpbasics/i18n/WebGoatLabels.properties",
      "/src/WebGoat/src/main/resources/lessons/httpbasics/i18n/WebGoatLabels_de.properties",
      "/src/WebGoat/src/main/resources/lessons/httpbasics/i18n/WebGoatLabels_fr.properties",
      "/src/WebGoat/src/main/resources/lessons/httpbasics/i18n/WebGoatLabels_nl.properties",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/documentation/0overview.adoc",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/documentation/10burp.adoc",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/documentation/1proxysetupsteps.adoc",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/documentation/3browsersetup.adoc",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/documentation/5configurefilterandbreakpoints.adoc",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/documentation/6assignment.adoc",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/documentation/7resend.adoc",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/documentation/8httpsproxy.adoc",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/documentation/9manual.adoc",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/html/HttpProxies.html",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/i18n/WebGoatLabels.properties",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/images/breakpoint.png",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/images/breakpoint2.png",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/images/burpfilter.png",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/images/burpfilterclient.png",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/images/burpintercept.png",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/images/burpintercepted.png",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/images/burpproxy.png",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/images/burpwarn.png",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/images/chrome-manual-proxy-win.png",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/images/chrome-manual-proxy.png",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/images/firefox-proxy-config.png",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/images/firefoxsettingscerts.png",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/images/importcerts.png",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/images/newlocalhost.png",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/images/proxy-intercept-button.png",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/images/proxy-intercept-details.png",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/images/rootca.png",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/images/savecerts.png",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/images/zap-exclude.png",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/images/zap-history.png",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/images/zap-start.png",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/images/zap_edit_and_resend.png",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/images/zap_edit_and_response.png",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/images/zap_edit_and_send.png",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/images/zap_exclude.png",
      "/src/WebGoat/src/main/resources/lessons/httpproxies/images/zap_exclude_url.png",
      "/src/WebGoat/src/main/resources/lessons/idor/documentation/IDOR_editOtherProfile.adoc",
      "/src/WebGoat/src/main/resources/lessons/idor/documentation/IDOR_editOwnProfile.adoc",
      "/src/WebGoat/src/main/resources/lessons/idor/documentation/IDOR_inputAltPath.adoc",
      "/src/WebGoat/src/main/resources/lessons/idor/documentation/IDOR_intro.adoc",
      "/src/WebGoat/src/main/resources/lessons/idor/documentation/IDOR_login.adoc",
      "/src/WebGoat/src/main/resources/lessons/idor/documentation/IDOR_mitigation.adoc",
      "/src/WebGoat/src/main/resources/lessons/idor/documentation/IDOR_viewDiffs.adoc",
      "/src/WebGoat/src/main/resources/lessons/idor/documentation/IDOR_viewOtherProfile.adoc",
      "/src/WebGoat/src/main/resources/lessons/idor/documentation/IDOR_viewOwnAltPath.adoc",
      "/src/WebGoat/src/main/resources/lessons/idor/documentation/IDOR_whatDiffs.adoc",
      "/src/WebGoat/src/main/resources/lessons/idor/documentation/temp.txt",
      "/src/WebGoat/src/main/resources/lessons/idor/html/IDOR.html",
      "/src/WebGoat/src/main/resources/lessons/idor/i18n/WebGoatLabels.properties",
      "/src/WebGoat/src/main/resources/lessons/idor/js/idor.js",
      "/src/WebGoat/src/main/resources/lessons/insecurelogin/documentation/InsecureLogin_Intro.adoc",
      "/src/WebGoat/src/main/resources/lessons/insecurelogin/documentation/InsecureLogin_Task.adoc",
      "/src/WebGoat/src/main/resources/lessons/insecurelogin/html/InsecureLogin.html",
      "/src/WebGoat/src/main/resources/lessons/insecurelogin/i18n/WebGoatLabels.properties",
      "/src/WebGoat/src/main/resources/lessons/insecurelogin/js/credentials.js",
      "/src/WebGoat/src/main/resources/lessons/jwt/css/jwt.css",
      "/src/WebGoat/src/main/resources/lessons/jwt/db/migration/V2019_09_25_1__jwt.sql",
      "/src/WebGoat/src/main/resources/lessons/jwt/documentation/JWT_attacks.adoc",
      "/src/WebGoat/src/main/resources/lessons/jwt/documentation/JWT_claim_misuse.adoc",
      "/src/WebGoat/src/main/resources/lessons/jwt/documentation/JWT_claim_misuse_jku.adoc",
      "/src/WebGoat/src/main/resources/lessons/jwt/documentation/JWT_claim_misuse_jku_assignment.adoc",
      "/src/WebGoat/src/main/resources/lessons/jwt/documentation/JWT_claim_misuse_kid.adoc",
      "/src/WebGoat/src/main/resources/lessons/jwt/documentation/JWT_claim_misuse_kid_assignment.adoc",
      "/src/WebGoat/src/main/resources/lessons/jwt/documentation/JWT_decode.adoc",
      "/src/WebGoat/src/main/resources/lessons/jwt/documentation/JWT_libraries.adoc",
      "/src/WebGoat/src/main/resources/lessons/jwt/documentation/JWT_libraries_assignment.adoc",
      "/src/WebGoat/src/main/resources/lessons/jwt/documentation/JWT_libraries_assignment2.adoc",
      "/src/WebGoat/src/main/resources/lessons/jwt/documentation/JWT_libraries_solution.adoc",
      "/src/WebGoat/src/main/resources/lessons/jwt/documentation/JWT_login_to_token.adoc",
      "/src/WebGoat/src/main/resources/lessons/jwt/documentation/JWT_mitigation.adoc",
      "/src/WebGoat/src/main/resources/lessons/jwt/documentation/JWT_plan.adoc",
      "/src/WebGoat/src/main/resources/lessons/jwt/documentation/JWT_refresh.adoc",
      "/src/WebGoat/src/main/resources/lessons/jwt/documentation/JWT_refresh_assignment.adoc",
      "/src/WebGoat/src/main/resources/lessons/jwt/documentation/JWT_signing.adoc",
      "/src/WebGoat/src/main/resources/lessons/jwt/documentation/JWT_signing_solution.adoc",
      "/src/WebGoat/src/main/resources/lessons/jwt/documentation/JWT_storing.adoc",
      "/src/WebGoat/src/main/resources/lessons/jwt/documentation/JWT_structure.adoc",
      "/src/WebGoat/src/main/resources/lessons/jwt/documentation/JWT_weak_keys",
      "/src/WebGoat/src/main/resources/lessons/jwt/html/JWT.html",
      "/src/WebGoat/src/main/resources/lessons/jwt/i18n/WebGoatLabels.properties",
      "/src/WebGoat/src/main/resources/lessons/jwt/images/challenge1-small.png",
      "/src/WebGoat/src/main/resources/lessons/jwt/images/challenge2-small.png",
      "/src/WebGoat/src/main/resources/lessons/jwt/images/challenge3-small.png",
      "/src/WebGoat/src/main/resources/lessons/jwt/images/challenge4-small.png",
      "/src/WebGoat/src/main/resources/lessons/jwt/images/challenge5-small.png",
      "/src/WebGoat/src/main/resources/lessons/jwt/images/jerry.png",
      "/src/WebGoat/src/main/resources/lessons/jwt/images/jwt_diagram.png",
      "/src/WebGoat/src/main/resources/lessons/jwt/images/jwt_token.png",
      "/src/WebGoat/src/main/resources/lessons/jwt/images/logs.txt",
      "/src/WebGoat/src/main/resources/lessons/jwt/images/product-icon.png",
      "/src/WebGoat/src/main/resources/lessons/jwt/images/tom.png",
      "/src/WebGoat/src/main/resources/lessons/jwt/js/jwt-buy.js",
      "/src/WebGoat/src/main/resources/lessons/jwt/js/jwt-jku.js",
      "/src/WebGoat/src/main/resources/lessons/jwt/js/jwt-kid.js",
      "/src/WebGoat/src/main/resources/lessons/jwt/js/jwt-refresh.js",
      "/src/WebGoat/src/main/resources/lessons/jwt/js/jwt-voting.js",
      "/src/WebGoat/src/main/resources/lessons/jwt/js/jwt-weak-keys.js",
      "/src/WebGoat/src/main/resources/lessons/jwt/js/questions_jwt.json",
      "/src/WebGoat/src/main/resources/lessons/lessontemplate/db/migration/V2019_11_10_1__introduction.sql",
      "/src/WebGoat/src/main/resources/lessons/lessontemplate/documentation/lesson-template-attack.adoc",
      "/src/WebGoat/src/main/resources/lessons/lessontemplate/documentation/lesson-template-content.adoc",
      "/src/WebGoat/src/main/resources/lessons/lessontemplate/documentation/lesson-template-database.adoc",
      "/src/WebGoat/src/main/resources/lessons/lessontemplate/documentation/lesson-template-glue.adoc",
      "/src/WebGoat/src/main/resources/lessons/lessontemplate/documentation/lesson-template-intro.adoc",
      "/src/WebGoat/src/main/resources/lessons/lessontemplate/documentation/lesson-template-lesson-class.adoc",
      "/src/WebGoat/src/main/resources/lessons/lessontemplate/documentation/lesson-template-video-more.adoc",
      "/src/WebGoat/src/main/resources/lessons/lessontemplate/documentation/lesson-template-video.adoc",
      "/src/WebGoat/src/main/resources/lessons/lessontemplate/html/LessonTemplate.html",
      "/src/WebGoat/src/main/resources/lessons/lessontemplate/i18n/WebGoatLabels.properties",
      "/src/WebGoat/src/main/resources/lessons/lessontemplate/images/firefox-proxy-config.png",
      "/src/WebGoat/src/main/resources/lessons/lessontemplate/js/idor.js",
      "/src/WebGoat/src/main/resources/lessons/logging/documentation/logReading_Task.adoc",
      "/src/WebGoat/src/main/resources/lessons/logging/documentation/logSpoofing_Task.adoc",
      "/src/WebGoat/src/main/resources/lessons/logging/documentation/logging_intro.adoc",
      "/src/WebGoat/src/main/resources/lessons/logging/documentation/more_logging.adoc",
      "/src/WebGoat/src/main/resources/lessons/logging/documentation/sensitive_logging_intro.adoc",
      "/src/WebGoat/src/main/resources/lessons/logging/html/LogSpoofing.html",
      "/src/WebGoat/src/main/resources/lessons/logging/i18n/WebGoatLabels.properties",
      "/src/WebGoat/src/main/resources/lessons/missingac/css/ac.css",
      "/src/WebGoat/src/main/resources/lessons/missingac/db/migration/V2021_11_03_1__ac.sql",
      "/src/WebGoat/src/main/resources/lessons/missingac/documentation/missing-function-ac-01-intro.adoc",
      "/src/WebGoat/src/main/resources/lessons/missingac/documentation/missing-function-ac-02-client-controls.adoc",
      "/src/WebGoat/src/main/resources/lessons/missingac/documentation/missing-function-ac-03-users.adoc",
      "/src/WebGoat/src/main/resources/lessons/missingac/documentation/missing-function-ac-04-users-fixed.adoc",
      "/src/WebGoat/src/main/resources/lessons/missingac/html/MissingFunctionAC.html",
      "/src/WebGoat/src/main/resources/lessons/missingac/i18n/WebGoatLabels.properties",
      "/src/WebGoat/src/main/resources/lessons/passwordreset/css/password.css",
      "/src/WebGoat/src/main/resources/lessons/passwordreset/documentation/PasswordReset_SecurityQuestions.adoc",
      "/src/WebGoat/src/main/resources/lessons/passwordreset/documentation/PasswordReset_host_header.adoc",
      "/src/WebGoat/src/main/resources/lessons/passwordreset/documentation/PasswordReset_known_questions.adoc",
      "/src/WebGoat/src/main/resources/lessons/passwordreset/documentation/PasswordReset_mitigation.adoc",
      "/src/WebGoat/src/main/resources/lessons/passwordreset/documentation/PasswordReset_plan.adoc",
      "/src/WebGoat/src/main/resources/lessons/passwordreset/documentation/PasswordReset_simple.adoc",
      "/src/WebGoat/src/main/resources/lessons/passwordreset/documentation/PasswordReset_wrong_message.adoc",
      "/src/WebGoat/src/main/resources/lessons/passwordreset/html/PasswordReset.html",
      "/src/WebGoat/src/main/resources/lessons/passwordreset/i18n/WebGoatLabels.properties",
      "/src/WebGoat/src/main/resources/lessons/passwordreset/images/reset1.png",
      "/src/WebGoat/src/main/resources/lessons/passwordreset/images/reset2.png",
      "/src/WebGoat/src/main/resources/lessons/passwordreset/images/slack1.png",
      "/src/WebGoat/src/main/resources/lessons/passwordreset/images/slack2.png",
      "/src/WebGoat/src/main/resources/lessons/passwordreset/js/password-reset-simple.js",
      "/src/WebGoat/src/main/resources/lessons/passwordreset/templates/password_link_not_found.html",
      "/src/WebGoat/src/main/resources/lessons/passwordreset/templates/password_reset.html",
      "/src/WebGoat/src/main/resources/lessons/passwordreset/templates/success.html",
      "/src/WebGoat/src/main/resources/lessons/pathtraversal/css/path_traversal.css",
      "/src/WebGoat/src/main/resources/lessons/pathtraversal/documentation/PathTraversal_intro.adoc",
      "/src/WebGoat/src/main/resources/lessons/pathtraversal/documentation/PathTraversal_retrieval.adoc",
      "/src/WebGoat/src/main/resources/lessons/pathtraversal/documentation/PathTraversal_upload.adoc",
      "/src/WebGoat/src/main/resources/lessons/pathtraversal/documentation/PathTraversal_upload_fix.adoc",
      "/src/WebGoat/src/main/resources/lessons/pathtraversal/documentation/PathTraversal_upload_fixed.adoc",
      "/src/WebGoat/src/main/resources/lessons/pathtraversal/documentation/PathTraversal_upload_mitigation.adoc",
      "/src/WebGoat/src/main/resources/lessons/pathtraversal/documentation/PathTraversal_upload_remove_user_input.adoc",
      "/src/WebGoat/src/main/resources/lessons/pathtraversal/documentation/PathTraversal_zip_slip.adoc",
      "/src/WebGoat/src/main/resources/lessons/pathtraversal/documentation/PathTraversal_zip_slip_assignment.adoc",
      "/src/WebGoat/src/main/resources/lessons/pathtraversal/documentation/PathTraversal_zip_slip_solution.adoc",
      "/src/WebGoat/src/main/resources/lessons/pathtraversal/html/PathTraversal.html",
      "/src/WebGoat/src/main/resources/lessons/pathtraversal/i18n/WebGoatLabels.properties",
      "/src/WebGoat/src/main/resources/lessons/pathtraversal/images/account.png",
      "/src/WebGoat/src/main/resources/lessons/pathtraversal/images/cats/1.jpg",
      "/src/WebGoat/src/main/resources/lessons/pathtraversal/images/cats/10.jpg",
      "/src/WebGoat/src/main/resources/lessons/pathtraversal/images/cats/2.jpg",
      "/src/WebGoat/src/main/resources/lessons/pathtraversal/images/cats/3.jpg",
      "/src/WebGoat/src/main/resources/lessons/pathtraversal/images/cats/4.jpg",
      "/src/WebGoat/src/main/resources/lessons/pathtraversal/images/cats/5.jpg",
      "/src/WebGoat/src/main/resources/lessons/pathtraversal/images/cats/6.jpg",
      "/src/WebGoat/src/main/resources/lessons/pathtraversal/images/cats/7.jpg",
      "/src/WebGoat/src/main/resources/lessons/pathtraversal/images/cats/8.jpg",
      "/src/WebGoat/src/main/resources/lessons/pathtraversal/images/cats/9.jpg",
      "/src/WebGoat/src/main/resources/lessons/pathtraversal/js/path_traversal.js",
      "/src/WebGoat/src/main/resources/lessons/securepasswords/documentation/SecurePasswords_1.adoc",
      "/src/WebGoat/src/main/resources/lessons/securepasswords/documentation/SecurePasswords_2.adoc",
      "/src/WebGoat/src/main/resources/lessons/securepasswords/documentation/SecurePasswords_3.adoc",
      "/src/WebGoat/src/main/resources/lessons/securepasswords/documentation/SecurePasswords_4.adoc",
      "/src/WebGoat/src/main/resources/lessons/securepasswords/documentation/SecurePasswords_assignment_introduction.adoc",
      "/src/WebGoat/src/main/resources/lessons/securepasswords/documentation/SecurePasswords_intro.adoc",
      "/src/WebGoat/src/main/resources/lessons/securepasswords/html/SecurePasswords.html",
      "/src/WebGoat/src/main/resources/lessons/securepasswords/i18n/WebGoatLabels.properties",
      "/src/WebGoat/src/main/resources/lessons/securepasswords/i18n/WebGoatLabels_nl.properties",
      "/src/WebGoat/src/main/resources/lessons/securepasswords/js/questions_cia.json",
      "/src/WebGoat/src/main/resources/lessons/sol.MD",
      "/src/WebGoat/src/main/resources/lessons/sol.txt",
      "/src/WebGoat/src/main/resources/lessons/spoofcookie/documentation/SpoofCookie_content0.adoc",
      "/src/WebGoat/src/main/resources/lessons/spoofcookie/documentation/SpoofCookie_plan.adoc",
      "/src/WebGoat/src/main/resources/lessons/spoofcookie/html/SpoofCookie.html",
      "/src/WebGoat/src/main/resources/lessons/spoofcookie/i18n/WebGoatLabels.properties",
      "/src/WebGoat/src/main/resources/lessons/spoofcookie/js/handler.js",
      "/src/WebGoat/src/main/resources/lessons/spoofcookie/lessonSolutions/en/SpoofCookie_solution.adoc",
      "/src/WebGoat/src/main/resources/lessons/spoofcookie/lessonSolutions/html/SpoofCookie.html",
      "/src/WebGoat/src/main/resources/lessons/spoofcookie/templates/spoofcookieform.html",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/css/assignments.css",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/css/challenge.css",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/css/quiz.css",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/db/migration/V2019_09_26_1__servers.sql",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/db/migration/V2019_09_26_2__users.sql",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/db/migration/V2019_09_26_3__salaries.sql",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/db/migration/V2019_09_26_4__tan.sql",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/db/migration/V2019_09_26_5__challenge_assignment.sql",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/db/migration/V2019_09_26_6__user_system_data.sql",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/db/migration/V2019_09_26_7__employees.sql",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/db/migration/V2021_03_13_8__grant.sql",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/documentation/SqlInjectionAdvanced_plan.adoc",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/documentation/SqlInjection_challenge.adoc",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/documentation/SqlInjection_content10.adoc",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/documentation/SqlInjection_content11.adoc",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/documentation/SqlInjection_content12.adoc",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/documentation/SqlInjection_content12a.adoc",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/documentation/SqlInjection_content12b.adoc",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/documentation/SqlInjection_content13.adoc",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/documentation/SqlInjection_content14.adoc",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/documentation/SqlInjection_content6.adoc",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/documentation/SqlInjection_content6a.adoc",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/documentation/SqlInjection_content6c.adoc",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/documentation/SqlInjection_content7.adoc",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/documentation/SqlInjection_content8.adoc",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/documentation/SqlInjection_content9.adoc",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/documentation/SqlInjection_introduction_content1.adoc",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/documentation/SqlInjection_introduction_content10.adoc",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/documentation/SqlInjection_introduction_content11.adoc",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/documentation/SqlInjection_introduction_content12.adoc",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/documentation/SqlInjection_introduction_content2.adoc",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/documentation/SqlInjection_introduction_content3.adoc",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/documentation/SqlInjection_introduction_content4.adoc",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/documentation/SqlInjection_introduction_content5_after.adoc",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/documentation/SqlInjection_introduction_content5_before.adoc",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/documentation/SqlInjection_introduction_content6.adoc",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/documentation/SqlInjection_introduction_content7.adoc",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/documentation/SqlInjection_introduction_content8.adoc",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/documentation/SqlInjection_introduction_content9.adoc",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/documentation/SqlInjection_introduction_plan.adoc",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/documentation/SqlInjection_jdbc_completion.adoc",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/documentation/SqlInjection_jdbc_newcode.adoc",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/documentation/SqlInjection_order_by.adoc",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/documentation/SqlInjection_quiz.adoc",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/html/SqlInjection.html",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/html/SqlInjectionAdvanced.html",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/html/SqlInjectionMitigations.html",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/i18n/WebGoatLabels.properties",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/i18n/WebGoatLabels_de.properties",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/i18n/WebGoatLabels_fr.properties",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/js/assignment10b.js",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/js/assignment13.js",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/js/challenge.js",
      "/src/WebGoat/src/main/resources/lessons/sqlinjection/js/questions_sql_injection.json",
      "/src/WebGoat/src/main/resources/lessons/ssrf/documentation/SSRF_Intro.adoc",
      "/src/WebGoat/src/main/resources/lessons/ssrf/documentation/SSRF_Prevent.adoc",
      "/src/WebGoat/src/main/resources/lessons/ssrf/documentation/SSRF_Task1.adoc",
      "/src/WebGoat/src/main/resources/lessons/ssrf/documentation/SSRF_Task2.adoc",
      "/src/WebGoat/src/main/resources/lessons/ssrf/html/SSRF.html",
      "/src/WebGoat/src/main/resources/lessons/ssrf/i18n/WebGoatLabels.properties",
      "/src/WebGoat/src/main/resources/lessons/ssrf/images/cat.jpg",
      "/src/WebGoat/src/main/resources/lessons/ssrf/images/jerry.png",
      "/src/WebGoat/src/main/resources/lessons/ssrf/images/tom.png",
      "/src/WebGoat/src/main/resources/lessons/ssrf/js/credentials.js",
      "/src/WebGoat/src/main/resources/lessons/vulnerablecomponents/documentation/VulnerableComponents_content0.adoc",
      "/src/WebGoat/src/main/resources/lessons/vulnerablecomponents/documentation/VulnerableComponents_content1.adoc",
      "/src/WebGoat/src/main/resources/lessons/vulnerablecomponents/documentation/VulnerableComponents_content1a.adoc",
      "/src/WebGoat/src/main/resources/lessons/vulnerablecomponents/documentation/VulnerableComponents_content2.adoc",
      "/src/WebGoat/src/main/resources/lessons/vulnerablecomponents/documentation/VulnerableComponents_content2a.adoc",
      "/src/WebGoat/src/main/resources/lessons/vulnerablecomponents/documentation/VulnerableComponents_content3.adoc",
      "/src/WebGoat/src/main/resources/lessons/vulnerablecomponents/documentation/VulnerableComponents_content4.adoc",
      "/src/WebGoat/src/main/resources/lessons/vulnerablecomponents/documentation/VulnerableComponents_content4a.adoc",
      "/src/WebGoat/src/main/resources/lessons/vulnerablecomponents/documentation/VulnerableComponents_content4b.adoc",
      "/src/WebGoat/src/main/resources/lessons/vulnerablecomponents/documentation/VulnerableComponents_content4c.adoc",
      "/src/WebGoat/src/main/resources/lessons/vulnerablecomponents/documentation/VulnerableComponents_content5.adoc",
      "/src/WebGoat/src/main/resources/lessons/vulnerablecomponents/documentation/VulnerableComponents_content5a.adoc",
      "/src/WebGoat/src/main/resources/lessons/vulnerablecomponents/documentation/VulnerableComponents_content6.adoc",
      "/src/WebGoat/src/main/resources/lessons/vulnerablecomponents/documentation/VulnerableComponents_plan.adoc",
      "/src/WebGoat/src/main/resources/lessons/vulnerablecomponents/html/VulnerableComponents.html",
      "/src/WebGoat/src/main/resources/lessons/vulnerablecomponents/i18n/WebGoatLabels.properties",
      "/src/WebGoat/src/main/resources/lessons/vulnerablecomponents/images/OWASP-Dep-Check.png",
      "/src/WebGoat/src/main/resources/lessons/vulnerablecomponents/images/Old-Components.png",
      "/src/WebGoat/src/main/resources/lessons/vulnerablecomponents/images/OpenSourceGrowing2023.png",
      "/src/WebGoat/src/main/resources/lessons/vulnerablecomponents/images/Risk-of-Old-Components.png",
      "/src/WebGoat/src/main/resources/lessons/vulnerablecomponents/images/WebGoat-Vulns.png",
      "/src/WebGoat/src/main/resources/lessons/webgoatintroduction/documentation/Introduction.adoc",
      "/src/WebGoat/src/main/resources/lessons/webgoatintroduction/documentation/Introduction_de.adoc",
      "/src/WebGoat/src/main/resources/lessons/webgoatintroduction/documentation/Introduction_fr.adoc",
      "/src/WebGoat/src/main/resources/lessons/webgoatintroduction/documentation/Introduction_nl.adoc",
      "/src/WebGoat/src/main/resources/lessons/webgoatintroduction/html/WebGoatIntroduction.html",
      "/src/WebGoat/src/main/resources/lessons/webgoatintroduction/i18n/WebGoatLabels.properties",
      "/src/WebGoat/src/main/resources/lessons/webgoatintroduction/images/wg_logo.png",
      "/src/WebGoat/src/main/resources/lessons/webwolfintroduction/documentation/IntroductionWebWolf.adoc",
      "/src/WebGoat/src/main/resources/lessons/webwolfintroduction/documentation/Landing_page.adoc",
      "/src/WebGoat/src/main/resources/lessons/webwolfintroduction/documentation/Receiving_mail.adoc",
      "/src/WebGoat/src/main/resources/lessons/webwolfintroduction/documentation/Uploading_files.adoc",
      "/src/WebGoat/src/main/resources/lessons/webwolfintroduction/html/WebWolfIntroduction.html",
      "/src/WebGoat/src/main/resources/lessons/webwolfintroduction/i18n/WebGoatLabels.properties",
      "/src/WebGoat/src/main/resources/lessons/webwolfintroduction/images/files.png",
      "/src/WebGoat/src/main/resources/lessons/webwolfintroduction/images/mailbox.png",
      "/src/WebGoat/src/main/resources/lessons/webwolfintroduction/images/requests.png",
      "/src/WebGoat/src/main/resources/lessons/webwolfintroduction/images/wolf-enabled.png",
      "/src/WebGoat/src/main/resources/lessons/webwolfintroduction/templates/webwolfPasswordReset.html",
      "/src/WebGoat/src/main/resources/lessons/xss/css/stored-xss.css",
      "/src/WebGoat/src/main/resources/lessons/xss/documentation/CrossSiteScriptingMitigation_plan.adoc",
      "/src/WebGoat/src/main/resources/lessons/xss/documentation/CrossSiteScriptingStored_plan.adoc",
      "/src/WebGoat/src/main/resources/lessons/xss/documentation/CrossSiteScripting_content1.adoc",
      "/src/WebGoat/src/main/resources/lessons/xss/documentation/CrossSiteScripting_content2.adoc",
      "/src/WebGoat/src/main/resources/lessons/xss/documentation/CrossSiteScripting_content3.adoc",
      "/src/WebGoat/src/main/resources/lessons/xss/documentation/CrossSiteScripting_content4.adoc",
      "/src/WebGoat/src/main/resources/lessons/xss/documentation/CrossSiteScripting_content5.adoc",
      "/src/WebGoat/src/main/resources/lessons/xss/documentation/CrossSiteScripting_content5a.adoc",
      "/src/WebGoat/src/main/resources/lessons/xss/documentation/CrossSiteScripting_content5b.adoc",
      "/src/WebGoat/src/main/resources/lessons/xss/documentation/CrossSiteScripting_content6.adoc",
      "/src/WebGoat/src/main/resources/lessons/xss/documentation/CrossSiteScripting_content6a.adoc",
      "/src/WebGoat/src/main/resources/lessons/xss/documentation/CrossSiteScripting_content6b.adoc",
      "/src/WebGoat/src/main/resources/lessons/xss/documentation/CrossSiteScripting_content7-off.adoc",
      "/src/WebGoat/src/main/resources/lessons/xss/documentation/CrossSiteScripting_content7.adoc",
      "/src/WebGoat/src/main/resources/lessons/xss/documentation/CrossSiteScripting_content7b.adoc",
      "/src/WebGoat/src/main/resources/lessons/xss/documentation/CrossSiteScripting_content7c.adoc",
      "/src/WebGoat/src/main/resources/lessons/xss/documentation/CrossSiteScripting_content8.adoc",
      "/src/WebGoat/src/main/resources/lessons/xss/documentation/CrossSiteScripting_content8a.adoc",
      "/src/WebGoat/src/main/resources/lessons/xss/documentation/CrossSiteScripting_content8b.adoc",
      "/src/WebGoat/src/main/resources/lessons/xss/documentation/CrossSiteScripting_content8c.adoc",
      "/src/WebGoat/src/main/resources/lessons/xss/documentation/CrossSiteScripting_content9.adoc",
      "/src/WebGoat/src/main/resources/lessons/xss/documentation/CrossSiteScripting_plan.adoc",
      "/src/WebGoat/src/main/resources/lessons/xss/documentation/CrossSiteScripting_quiz.adoc",
      "/src/WebGoat/src/main/resources/lessons/xss/html/CrossSiteScripting.html",
      "/src/WebGoat/src/main/resources/lessons/xss/html/CrossSiteScriptingMitigation.html",
      "/src/WebGoat/src/main/resources/lessons/xss/html/CrossSiteScriptingStored.html",
      "/src/WebGoat/src/main/resources/lessons/xss/i18n/WebGoatLabels.properties",
      "/src/WebGoat/src/main/resources/lessons/xss/images/Reflected-XSS.png",
      "/src/WebGoat/src/main/resources/lessons/xss/images/Stored-XSS.png",
      "/src/WebGoat/src/main/resources/lessons/xss/images/avatar1.png",
      "/src/WebGoat/src/main/resources/lessons/xss/js/assignment3.js",
      "/src/WebGoat/src/main/resources/lessons/xss/js/assignment4.js",
      "/src/WebGoat/src/main/resources/lessons/xss/js/questions_cross_site_scripting.json",
      "/src/WebGoat/src/main/resources/lessons/xss/js/stored-xss.js",
      "/src/WebGoat/src/main/resources/lessons/xxe/css/xxe.css",
      "/src/WebGoat/src/main/resources/lessons/xxe/documentation/XXE_blind.adoc",
      "/src/WebGoat/src/main/resources/lessons/xxe/documentation/XXE_blind_assignment.adoc",
      "/src/WebGoat/src/main/resources/lessons/xxe/documentation/XXE_changing_content_type.adoc",
      "/src/WebGoat/src/main/resources/lessons/xxe/documentation/XXE_changing_content_type_solution.adoc",
      "/src/WebGoat/src/main/resources/lessons/xxe/documentation/XXE_code.adoc",
      "/src/WebGoat/src/main/resources/lessons/xxe/documentation/XXE_intro.adoc",
      "/src/WebGoat/src/main/resources/lessons/xxe/documentation/XXE_mitigation.adoc",
      "/src/WebGoat/src/main/resources/lessons/xxe/documentation/XXE_overflow.adoc",
      "/src/WebGoat/src/main/resources/lessons/xxe/documentation/XXE_plan.adoc",
      "/src/WebGoat/src/main/resources/lessons/xxe/documentation/XXE_simple.adoc",
      "/src/WebGoat/src/main/resources/lessons/xxe/documentation/XXE_simple_introduction.adoc",
      "/src/WebGoat/src/main/resources/lessons/xxe/documentation/XXE_simple_solution.adoc",
      "/src/WebGoat/src/main/resources/lessons/xxe/documentation/XXE_static_code_analysis.adoc",
      "/src/WebGoat/src/main/resources/lessons/xxe/documentation/temp.txt",
      "/src/WebGoat/src/main/resources/lessons/xxe/html/XXE.html",
      "/src/WebGoat/src/main/resources/lessons/xxe/i18n/WebGoatLabels.properties",
      "/src/WebGoat/src/main/resources/lessons/xxe/images/avatar1.png",
      "/src/WebGoat/src/main/resources/lessons/xxe/images/cat.jpg",
      "/src/WebGoat/src/main/resources/lessons/xxe/images/etc_password.png",
      "/src/WebGoat/src/main/resources/lessons/xxe/images/example.dtd",
      "/src/WebGoat/src/main/resources/lessons/xxe/images/sonar-issue-xxe.png",
      "/src/WebGoat/src/main/resources/lessons/xxe/images/sonar-issues.png",
      "/src/WebGoat/src/main/resources/lessons/xxe/images/wolf-enabled.png",
      "/src/WebGoat/src/main/resources/lessons/xxe/images/xxe-parser-java.png",
      "/src/WebGoat/src/main/resources/lessons/xxe/images/xxe-parser.png",
      "/src/WebGoat/src/main/resources/lessons/xxe/images/xxe-suggested-fix.png",
      "/src/WebGoat/src/main/resources/lessons/xxe/js/xxe.js",
      "/src/WebGoat/src/main/resources/lessons/xxe/secret.txt",
      "/src/WebGoat/src/main/resources/webgoat/static/css/animate.css",
      "/src/WebGoat/src/main/resources/webgoat/static/css/asciidoctor-default.css",
      "/src/WebGoat/src/main/resources/webgoat/static/css/coderay.css",
      "/src/WebGoat/src/main/resources/webgoat/static/css/font-awesome.min.css",
      "/src/WebGoat/src/main/resources/webgoat/static/css/img/appseceu-17.png",
      "/src/WebGoat/src/main/resources/webgoat/static/css/img/cnlang.svg",
      "/src/WebGoat/src/main/resources/webgoat/static/css/img/delang.svg",
      "/src/WebGoat/src/main/resources/webgoat/static/css/img/enlang.svg",
      "/src/WebGoat/src/main/resources/webgoat/static/css/img/eslang.svg",
      "/src/WebGoat/src/main/resources/webgoat/static/css/img/favicon.ico",
      "/src/WebGoat/src/main/resources/webgoat/static/css/img/frlang.svg",
      "/src/WebGoat/src/main/resources/webgoat/static/css/img/logo.png",
      "/src/WebGoat/src/main/resources/webgoat/static/css/img/logoBG.jpg",
      "/src/WebGoat/src/main/resources/webgoat/static/css/img/nllang.svg",
      "/src/WebGoat/src/main/resources/webgoat/static/css/img/owasp_logo.jpg",
      "/src/WebGoat/src/main/resources/webgoat/static/css/img/solution.svg",
      "/src/WebGoat/src/main/resources/webgoat/static/css/img/webBg.png",
      "/src/WebGoat/src/main/resources/webgoat/static/css/img/wolf.svg",
      "/src/WebGoat/src/main/resources/webgoat/static/css/layers.css",
      "/src/WebGoat/src/main/resources/webgoat/static/css/main.css",
      "/src/WebGoat/src/main/resources/webgoat/static/css/menu.css",
      "/src/WebGoat/src/main/resources/webgoat/static/css/quiz.css",
      "/src/WebGoat/src/main/resources/webgoat/static/css/webgoat.css",
      "/src/WebGoat/src/main/resources/webgoat/static/fonts/FontAwesome.otf",
      "/src/WebGoat/src/main/resources/webgoat/static/fonts/fontawesome-webfont.eot",
      "/src/WebGoat/src/main/resources/webgoat/static/fonts/fontawesome-webfont.svg",
      "/src/WebGoat/src/main/resources/webgoat/static/fonts/fontawesome-webfont.ttf",
      "/src/WebGoat/src/main/resources/webgoat/static/fonts/fontawesome-webfont.woff",
      "/src/WebGoat/src/main/resources/webgoat/static/js/application.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/controller/LessonController.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/controller/MenuController.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/goatApp.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/model/AssignmentStatusModel.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/model/HTMLContentModel.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/model/HintCollection.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/model/HintModel.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/model/LabelDebugModel.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/model/LessonContentModel.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/model/LessonInfoModel.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/model/LessonOverviewCollection.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/model/MenuCollection.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/model/MenuData.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/model/MenuModel.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/model/ReportCardModel.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/support/CustomGoat.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/support/GoatUtils.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/support/goatAsyncErrorHandler.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/support/goatConstants.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/templates/lesson_overview.html",
      "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/templates/paging_controls.html",
      "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/templates/report_card.html",
      "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/view/ErrorNotificationView.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/view/GoatRouter.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/view/HelpControlsView.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/view/HintView.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/view/LessonContentView.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/view/MenuButtonView.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/view/MenuItemView.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/view/MenuView.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/view/PaginationControlView.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/view/ReportCardView.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/view/TitleView.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/goatApp/view/UserAndInfoView.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/jquery_form/jquery.form.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/libs/ace.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/libs/backbone-min.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/libs/jquery-ui-1.10.4.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/libs/jquery.form.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/libs/mode-java.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/libs/text.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/libs/theme-monokai.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/libs/underscore-min.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/main.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/quiz.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/search.js",
      "/src/WebGoat/src/main/resources/webgoat/static/js/toggle.js",
      "/src/WebGoat/src/main/resources/webgoat/static/plugins/bootstrap/css/bootstrap.min.css",
      "/src/WebGoat/src/main/resources/webgoat/static/plugins/bootstrap/fonts/glyphicons-halflings-regular.eot",
      "/src/WebGoat/src/main/resources/webgoat/static/plugins/bootstrap/fonts/glyphicons-halflings-regular.svg",
      "/src/WebGoat/src/main/resources/webgoat/static/plugins/bootstrap/fonts/glyphicons-halflings-regular.ttf",
      "/src/WebGoat/src/main/resources/webgoat/static/plugins/bootstrap/fonts/glyphicons-halflings-regular.woff",
      "/src/WebGoat/src/main/resources/webgoat/static/plugins/bootstrap-slider/css/slider.css",
      "/src/WebGoat/src/main/resources/webgoat/static/plugins/bootstrap-slider/js/bootstrap-slider.js",
      "/src/WebGoat/src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/css/bootstrap-wysihtml5.css",
      "/src/WebGoat/src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/css/bootstrap3-wysiwyg5-color.css",
      "/src/WebGoat/src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/bootstrap3-wysihtml5.js",
      "/src/WebGoat/src/main/resources/webgoat/static/plugins/bootstrap-wysihtml5/js/wysihtml5-0.3.0.js",
      "/src/WebGoat/src/main/resources/webgoat/templates/about.html",
      "/src/WebGoat/src/main/resources/webgoat/templates/lesson_content.html",
      "/src/WebGoat/src/main/resources/webgoat/templates/login.html",
      "/src/WebGoat/src/main/resources/webgoat/templates/main_new.html",
      "/src/WebGoat/src/main/resources/webgoat/templates/registration.html",
      "/src/WebGoat/src/main/resources/webwolf/static/css/bootstrap-icons.css",
      "/src/WebGoat/src/main/resources/webwolf/static/css/fonts/bootstrap-icons.woff",
      "/src/WebGoat/src/main/resources/webwolf/static/css/fonts/bootstrap-icons.woff2",
      "/src/WebGoat/src/main/resources/webwolf/static/css/img/webwolf.ico",
      "/src/WebGoat/src/main/resources/webwolf/static/css/webwolf.css",
      "/src/WebGoat/src/main/resources/webwolf/static/images/wolf.png",
      "/src/WebGoat/src/main/resources/webwolf/static/images/wolf.svg",
      "/src/WebGoat/src/main/resources/webwolf/static/js/fileUpload.js",
      "/src/WebGoat/src/main/resources/webwolf/static/js/jwt.js",
      "/src/WebGoat/src/main/resources/webwolf/static/js/mail.js",
      "/src/WebGoat/src/main/resources/webwolf/templates/error.html",
      "/src/WebGoat/src/main/resources/webwolf/templates/files.html",
      "/src/WebGoat/src/main/resources/webwolf/templates/fragments/footer.html",
      "/src/WebGoat/src/main/resources/webwolf/templates/fragments/header.html",
      "/src/WebGoat/src/main/resources/webwolf/templates/home.html",
      "/src/WebGoat/src/main/resources/webwolf/templates/jwt.html",
      "/src/WebGoat/src/main/resources/webwolf/templates/mailbox.html",
      "/src/WebGoat/src/main/resources/webwolf/templates/registration.html",
      "/src/WebGoat/src/main/resources/webwolf/templates/requests.html",
      "/src/WebGoat/src/main/resources/webwolf/templates/webwolf-login.html"
    ]
  },
  "skipped_rules": []
}
